%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: City_silhouette_3.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: Lub4yk
%%CreationDate: 11/6/2017
%%BoundingBox: 0 0 1418 886
%%HiResBoundingBox: 0 0 1417.3229 885.8279
%%CropBox: 0 0 1417.3229 885.8279
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-11-06T12:54:13+02:00</xmp:CreateDate>
         <xmp:MetadataDate>2017-11-06T12:54:14+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2017-11-06T12:54:14+02:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>160</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Fsza4wAAt/q4J3POvOn&#xA;sv8ALirXxa1xQAQfVh1J58uVP9Wn2cVd8WtcUAEH1YdSefLlT/Vp9nFXfFrXFABB9WHUnny5U/1a&#xA;fZxV3xa1xQAQfVh1J58uVP8AVp9nFXfFrXFABB9WHUnny5U/1afZxV3xa1xQAQfVh1J58uVP9Wn2&#xA;cVd8WtcUAEH1YdSefLlT/Vp9nFWwG1tQBSD6sKb/AB8uf/A0+zirgG1tQBSD6sKb/Hy5/wDA0+zi&#xA;rXxa1xQAQfVh1J58uVP9Wn2cVbZm1xgABb/VwTuededPZf5cVad21roBB9WBO558uX0L/Lirn5a1&#xA;VwBB9XHQnnXlX/V/lxVz8taq4Ag+rjoTzryr/q/y4q5+WtVcAQfVx0J515V/1f5cVc/LWquAIPq4&#xA;6E868q/6v8uKuflrVXAEH1cdCedeVf8AV/lxVz8taq4Ag+rjoTzryr/q/wAuKtkNrjVFLf6uKb/H&#xA;Xn/wP8uKrSG1laikH1ZQN/i5cv8AgafZxVt+WtVcAQfVx0J515V/1f5cVc/LWquAIPq46E868q/6&#xA;v8uKuflrVXAEH1cdCedeVf8AV/lxVz8taq4Ag+rjoTzryr/q/wAuKud21roBB9WBO558uX0L/Lir&#xA;n5a1VwBB9XHQnnXlX/V/lxVz8taq4Ag+rjoTzryr/q/y4q5+WtVcAQfVx0J515V/1f5cVc/LWquA&#xA;IPq46E868q/6v8uKuflrVXAEH1cdCedeVf8AV/lxVshtcaopb/VxTf468/8Agf5cVa/47TAIotvQ&#xA;BJ/a5c/oXpxxVoD9M8VVRb/VxuftcuVPZf5cVcB+meKqot/q43P2uXKnsv8ALirgP0zxVVFv9XG5&#xA;+1y5U9l/lxVwH6Z4qqi3+rjc/a5cqey/y4q4D9M8VVRb/VxuftcuVPZf5cVcB+meKqot/q43P2uX&#xA;Knsv8uKuA/TPFVUW/wBXG5+1y5U9l/lxVtU/TKgKBb/VhQ/tcuf0L044q5U/TKgKBb/VhQ/tcuf0&#xA;L044q0B+meKqot/q43P2uXKnsv8ALirf/HaYBFFt6AJP7XLn9C9OOKtMf0z9lRb/AFcEn9rly+hf&#xA;5cVcR+meTKot/q43H2uXKvsv8uKuI/TPJlUW/wBXG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/y4&#xA;q4j9M8mVRb/VxuPtcuVfZf5cVcR+meTKot/q43H2uXKvsv8ALiriP0zyZVFv9XG4+1y5V9l/lxVv&#xA;h+mmJQC39AAH9qvP6F/lxVbw/TCkqBb/AFZQD+1y5f8AA/y4q2R+meTKot/q43H2uXKvsv8ALiri&#xA;P0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/VxuPtcuVfZf5cVcx/TP&#xA;2VFv9XBJ/a5cvoX+XFXEfpnkyqLf6uNx9rlyr7L/AC4q4j9M8mVRb/VxuPtcuVfZf5cVcR+meTKo&#xA;t/q43H2uXKvsv8uKuI/TPJlUW/1cbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/LirfD9NMSgFv6A&#xA;AP7Vef0L/Lirv+O0wCKLb0ASf2uXP6F6ccVaA/TPFVUW/wBXG5+1y5U9l/lxVwH6Z4qqi3+rjc/a&#xA;5cqey/y4q4D9M8VVRb/VxuftcuVPZf5cVcB+meKqot/q43P2uXKnsv8ALirgP0zxVVFv9XG5+1y5&#xA;U9l/lxVwH6Z4qqi3+rjc/a5cqey/y4q4D9M8VVRb/VxuftcuVPZf5cVbVP0yoCgW/wBWFD+1y5/Q&#xA;vTjirlT9MqAoFv8AVhQ/tcuf0L044q0B+meKqot/q43P2uXKnsv8uKt/8dpgEUW3oAk/tcuf0L04&#xA;4q0x/TP2VFv9XBJ/a5cvoX+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv9XG4+1y5V9l/lxVxH&#xA;6Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/AFcbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0z&#xA;yZVFv9XG4+1y5V9l/lxVvh+mmJQC39AAH9qvP6F/lxVbw/TCkqBb/VlAP7XLl/wP8uKtkfpnkyqL&#xA;f6uNx9rlyr7L/LiriP0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/wAuKuI/TPJlUW/1&#xA;cbj7XLlX2X+XFXMf0z9lRb/VwSf2uXL6F/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/VxuPt&#xA;cuVfZf5cVcR+meTKot/q43H2uXKvsv8ALiriP0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5c&#xA;q+y/y4q3w/TTEoBb+gAD+1Xn9C/y4q7/AI7TAIotvQBJ/a5c/oXpxxVoD9M8VVRb/VxuftcuVPZf&#xA;5cVcB+meKqot/q43P2uXKnsv8uKuA/TPFVUW/wBXG5+1y5U9l/lxVwH6Z4qqi3+rjc/a5cqey/y4&#xA;q4D9M8VVRb/VxuftcuVPZf5cVcB+meKqot/q43P2uXKnsv8ALirgP0zxVVFv9XG5+1y5U9l/lxVt&#xA;U/TKgKBb/VhQ/tcuf0L044q5U/TKgKBb/VhQ/tcuf0L044q0B+meKqot/q43P2uXKnsv8uKt/wDH&#xA;aYBFFt6AJP7XLn9C9OOKtMf0z9lRb/VwSf2uXL6F/lxVxH6Z5Mqi3+rjcfa5cq+y/wAuKuI/TPJl&#xA;UW/1cbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi3+&#xA;rjcfa5cq+y/y4q4j9M8mVRb/AFcbj7XLlX2X+XFW+H6aYlALf0AAf2q8/oX+XFVvD9MKSoFv9WUA&#xA;/tcuX/A/y4q2R+meTKot/q43H2uXKvsv8uKuI/TPJlUW/wBXG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa&#xA;5cq+y/y4q4j9M8mVRb/VxuPtcuVfZf5cVcx/TP2VFv8AVwSf2uXL6F/lxVxH6Z5Mqi3+rjcfa5cq&#xA;+y/y4q4j9M8mVRb/AFcbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv9XG4+1y5V9l&#xA;/lxVxH6Z5Mqi3+rjcfa5cq+y/wAuKt8P00xKAW/oAA/tV5/Qv8uKu/47TAIotvQBJ/a5c/oXpxxV&#xA;oD9M8VVRb/VxuftcuVPZf5cVcB+meKqot/q43P2uXKnsv8uKuA/TPFVUW/1cbn7XLlT2X+XFXAfp&#xA;niqqLf6uNz9rlyp7L/LirgP0zxVVFv8AVxuftcuVPZf5cVcB+meKqot/q43P2uXKnsv8uKuA/TPF&#xA;VUW/1cbn7XLlT2X+XFW1T9MqAoFv9WFD+1y5/QvTjirlT9MqAoFv9WFD+1y5/QvTjirQH6Z4qqi3&#xA;+rjc/a5cqey/y4q3/wAdpgEUW3oAk/tcuf0L044q0x/TP2VFv9XBJ/a5cvoX+XFXEfpnkyqLf6uN&#xA;x9rlyr7L/LiriP0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/wAuKuI/TPJlUW/1cbj7&#xA;XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv9XG4+1y5V9l/lxVvh+mmJQC39AAH9qvP6&#xA;F/lxVbw/TCkqBb/VlAP7XLl/wP8ALirZH6Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/VxuPtcuVfZf&#xA;5cVcR+meTKot/q43H2uXKvsv8uKuI/TPJlUW/wBXG4+1y5V9l/lxVzH9M/ZUW/1cEn9rly+hf5cV&#xA;cR+meTKot/q43H2uXKvsv8uKuI/TPJlUW/1cbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0&#xA;zyZVFv8AVxuPtcuVfZf5cVcR+meTKot/q43H2uXKvsv8uKt8P00xKAW/oAA/tV5/Qv8ALirv+O0w&#xA;CKLb0ASf2uXP6F6ccVaA/TPFVUW/1cbn7XLlT2X+XFXAfpniqqLf6uNz9rlyp7L/AC4q4D9M8VVR&#xA;b/VxuftcuVPZf5cVcB+meKqot/q43P2uXKnsv8uKuA/TPFVUW/1cbn7XLlT2X+XFXAfpniqqLf6u&#xA;Nz9rlyp7L/LirgP0zxVVFv8AVxuftcuVPZf5cVbVP0yoCgW/1YUP7XLn9C9OOKuVP0yoCgW/1YUP&#xA;7XLn9C9OOKtAfpniqqLf6uNz9rlyp7L/AC4q3/x2mARRbegCT+1y5/QvTjirTH9M/ZUW/wBXBJ/a&#xA;5cvoX+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv8AVxuPtcuVfZf5cVcR+meTKot/q43H2uXK&#xA;vsv8uKuI/TPJlUW/1cbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/AC4q4j9M8mVRb/VxuPtcuVfZ&#xA;f5cVb4fppiUAt/QAB/arz+hf5cVW8P0wpKgW/wBWUA/tcuX/AAP8uKtkfpnkyqLf6uNx9rlyr7L/&#xA;AC4q4j9M8mVRb/VxuPtcuVfZf5cVcR+meTKot/q43H2uXKvsv8uKuI/TPJlUW/1cbj7XLlX2X+XF&#xA;XMf0z9lRb/VwSf2uXL6F/lxVxH6Z5Mqi3+rjcfa5cq+y/wAuKuI/TPJlUW/1cbj7XLlX2X+XFXEf&#xA;pnkyqLf6uNx9rlyr7L/LiriP0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q3w/TTE&#xA;oBb+gAD+1Xn9C/y4q7/jtMAii29AEn9rlz+henHFWgP0zxVVFv8AVxuftcuVPZf5cVcB+meKqot/&#xA;q43P2uXKnsv8uKuA/TPFVUW/1cbn7XLlT2X+XFXAfpniqqLf6uNz9rlyp7L/AC4q4D9M8VVRb/Vx&#xA;uftcuVPZf5cVcB+meKqot/q43P2uXKnsv8uKuA/TPFVUW/1cbn7XLlT2X+XFW1T9MqAoFv8AVhQ/&#xA;tcuf0L044q5U/TKgKBb/AFYUP7XLn9C9OOKtAfpniqqLf6uNz9rlyp7L/Lirf/HaYBFFt6AJP7XL&#xA;n9C9OOKtMf0z9lRb/VwSf2uXL6F/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/VxuPtcuVfZf&#xA;5cVcR+meTKot/q43H2uXKvsv8uKuI/TPJlUW/wBXG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/y4&#xA;q4j9M8mVRb/VxuPtcuVfZf5cVb4fppiUAt/QAB/arz+hf5cVW8P0wpKgW/1ZQD+1y5f8D/LirZH6&#xA;Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/VxuPtcuVfZf5cVcR+meTKot/q43H2uXKvsv8ALiriP0zy&#xA;ZVFv9XG4+1y5V9l/lxVzH9M/ZUW/1cEn9rly+hf5cVcR+meTKot/q43H2uXKvsv8uKuI/TPJlUW/&#xA;1cbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/AC4q4j9M8mVRb/VxuPtcuVfZf5cVcR+meTKot/q4&#xA;3H2uXKvsv8uKt8P00xKAW/oAA/tV5/Qv8uKu/wCO0wCKLb0ASf2uXP6F6ccVaA/TPFVUW/1cbn7X&#xA;LlT2X+XFXAfpniqqLf6uNz9rlyp7L/LirgP0zxVVFv8AVxuftcuVPZf5cVcB+meKqot/q43P2uXK&#xA;nsv8uKuA/TPFVUW/1cbn7XLlT2X+XFXAfpniqqLf6uNz9rlyp7L/AC4q4D9M8VVRb/VxuftcuVPZ&#xA;f5cVbVP0yoCgW/1YUP7XLn9C9OOKuVP0yoCgW/1YUP7XLn9C9OOKtAfpniqqLf6uNz9rlyp7L/Li&#xA;rf8Ax2mARRbegCT+1y5/QvTjirTH9M/ZUW/1cEn9rly+hf5cVULO7tvM1ql7ZkR26pyRqE8w9exC&#xA;EfZ8MVVyP0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/VxuPtcuVfZf&#xA;5cVcR+meTKot/q43H2uXKvsv8uKuI/TPJlUW/wBXG4+1y5V9l/lxVvh+mmJQC39AAH9qvP6F/lxV&#xA;jvnDz55Q0W1t7rzHqEejQMxit3dZJfUenIgemhpQL3xVPYJofMNul1bcYoVjWSNh8XNZRyU9FpsM&#xA;VVCP0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/AFcbj7XLlX2X+XFX&#xA;Mf0z9lRb/VwSf2uXL6F/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/VxuPtcuVfZf5cVcwGsB&#xA;nUC2FsN/2q8qnwWlOOKuIGtAugFuLcf63LlU9gv8uKuI/TPJlUW/1cbj7XLlX2X+XFW+H6aYlALf&#xA;0AAf2q8/oX+XFWgG1pqALb+gK7fFXn938uKtIrazRQFg+rjqPi5cvu/lxVyK2s0UBYPq46j4uXL7&#xA;v5cVcitrNFAWD6uOo+Lly+7+XFUPe39jcWjXV/cQaZaWSgy3M7qkYDkKOTuUVdx3OKq8LLrqIYik&#xA;SRKGV1+MOHpQginhiraK2s0UBYPq46j4uXL7v5cVcitrNFAWD6uOo+Lly+7+XFUr1nV0vLDUUgZY&#xA;L/S7GS8WMqWBXi3FiaBftRdK4q+ctM8v/m3qGrWWq23nCKK+1DTLTXDIbeyiCDUk9T0aTvGH49O/&#xA;yxV6r5auPzWuvNGk2nmPWNOutNuHmhaK0htVk5C3klU1huJmpWH+XFXpoDa01AFt/QFdvirz+7+X&#xA;FWH/AJleeXsNIpYW5k1p/hsraKGe5oHIDTTJaxyzLEgX7QjPxUHfFWN/k75i1W+tovKWvCWK6sIZ&#xA;JdO1Ca2u4VuYzKSYWkurbTw00YdaKke6b9mxV6nxbWeTALb/AFcdB8XLlX5fy4q7i2s8mAW3+rjo&#xA;Pi5cq/L+XFXcW1nkwC2/1cdB8XLlX5fy4q8A/wCcm/znvdKNr5e0ZvquoSRs9+hQMj204KqUkFGV&#xA;lZO1MVeqflj5xf8AMjybY65MbW21BYz9etrVuao5d1AKliyVWOtGPfFWWKja0xIC2/oADb4q8/u/&#xA;lxV8+fnu2hJa+ZPMV3pdpealbTWsNmtyvqAcobZKUEinozN9nFXrXkq6tJ/IGn3V7cQadZaZbBXn&#xA;kZY4UiDFUHJm4oqKgUVbFWTr/ubUyJxhWBQQV+IMH37U/lxVvi2s8mAW3+rjoPi5cq/L+XFWG6N+&#xA;a/lLzh5vvPKti8sOr6XJPBOjRH0y8BYSUfboYjTFWZEtrNaKtv8AVwTt8XLl938uKu4trPJgFt/q&#xA;46D4uXKvy/lxV3FtZ5MAtv8AVx0HxcuVfl/Lirw7/nIvzV5y1dX8r+XVhsLZLOO61a6MjLLLFcvO&#xA;iwR0X4V/0VuZrvUDpWqr03yF5q0rz5oZn05xBJpDGxvYDu6TRVUg0pseHJT3BxVknFtZ5MAtv9XH&#xA;QfFy5V+X8uKtqja0xIC2/oADb4q8/u/lxVv/AI7TAIotvQBJ/a5c/oXpxxVoD9M8VVRb/Vxuftcu&#xA;VPZf5cVcB+meKqot/q43P2uXKnsv8uKuA/TPFVUW/wBXG5+1y5U9l/lxV5D+aNj5X/N+xsLC11Jo&#xA;LPSbq6SS5tSHR7iJIwUBZQrBfU6jv0OKpb+U35b3/lzX7Sys/NF9Ppn1maCTSJuLW5X6vM4k9M7x&#xA;n1IuqUrTuMVe4AfpniqqLf6uNz9rlyp7L/LiqDvdX0i6aOK8vLbTGiUlRPKilw1BUBinTjir551P&#xA;8y5/MH59appcVlbxxPo97pCXkbu5a1tbSfUEcUIQs8g69OJ+nFWW+SLs276CQkz8vJ+g/wBzDazn&#xA;a3PX608YH+xxVmEUr6lr+h2vG4i5Xcrc5raxiXayuD9q2kd6+1KYqzb/AI7TAIotvQBJ/a5c/oXp&#xA;xxV5P5yWLWvzfiB02G59Py+hWKaQqqsL8lX2XficVRWnaHw1jT4ZbGC2uTdB1kWYuVTk4BRfSjBF&#xA;KAjkStRX3VSr8wL7zzqHm7Vr2x8wvpXl/TLWg0y2WKSX1haPOXZmicqrHiw2NVSVv91kFV6h5dub&#xA;3zFo0M14UjvLQPBdSIvFZZIpGiaQICeHIxcuPJqVpU4qxn839fvY/LcF7Y3LaVJHdpE8sbJVleGZ&#xA;+JZ0cKOUQ/ZOKvkn819bTXfPmnXJ1OTW5Db28c81ysafF6zkRUjULx4Mp6d8VfVU935K8ja7ex63&#xA;DonkmK7tLRre3081huGElyGc8ba0+MAAH4TtTfFW/NP5iaz/AIlvbKO0tINO06GNo3dneaaSQKzq&#xA;KcI0C813Y1NfhDEUxV5P/wA5R6zy02+gT4DeatbBouRPwQ6fGTsG/m49UxVW/NH80/Ldh+V9l5Iv&#xA;ba6bU77T4riCaJI3t2jN61RI5lVwf9Hbordt8VZj/wA4yX8vmLytr0UFzJ+htL1WaPRIJgxMNlIq&#xA;vFCvJ5XVUHRTI1PHFXshH6Z5Mqi3+rjcfa5cq+y/y4q+GPyxutYn/MXyhdi/uUXU9RhiuRNeGeWZ&#xA;/VpNIyKEYRuTSj177nFX21HrWk+YNVudJt7iGLU9LiSe6tAweRY5/sMy0Wn2P86jFXhQ/ND819R0&#xA;G11yfVtAWJrRbw2aWd6JeLxiUx8qlOdPhrWlcVfQRH6Z5Mqi3+rjcfa5cq+y/wAuKvDvzlnivPNe&#xA;s6hJBEkFnoWnmUyEsVUTao5ZaIx6LirGfyN06IecrDUbG6aCbzLzk1W1WQPE3Oxe9/u+o4S/ZPUC&#xA;o7nFX0uR+meTKot/q43H2uXKvsv8uKt8P00xKAW/oAA/tV5/Qv8ALirv+O0wCKLb0ASf2uXP6F6c&#xA;cVaA/TPFVUW/1cbn7XLlT2X+XFWJ+c/PsdhcWlsNKnuD6Zkd4ZIFVVaSOIczM8P7TjpXFUF5p8xR&#xA;eb/yc8yaxbQNYCDRtVPpsyu3KGKaJvijPH7UJoQTirCfLGjaVpME3ly10GRrG3nuJrdDCvDlNp+n&#xA;vJxW9nmcMrvy+JyDy222CqYaNFYWd36tto31W4tJbqWOVkt6osVhcuEYxyPJRvSI5fjirPPLmt6j&#xA;5l1KSxuJ7B0tbcTLNYhiORkaJ0ervurR/fXFWJ/mVdRX2vFks7ZbqKwt1hup0WcxAXTsw4lrf4JS&#xA;qo370fFxqrLy4qvnTyg0N/8AnnIsDBUS01KGvGg5W2jTxuAu37UZxV7r5Itred9BE1qbrj5P0GgG&#xA;nDUuP+jnsf7v+OKqfn/X38vXVtc2CaRpb6eYbppNVsTpcsoupGsisMcS+pKsYm9SSjbAdMVYzqX/&#xA;ADkr5kul1MtdeWR+iYhJbhDef6YZIRKUg+Ldlb4N6fFirK9d8zaN5n/Nh7jSZYbtLXQ/qknoTIQL&#xA;hL0n0mf05ArfEopTviqL1jhoVgdUuGhs7ezkaVJ7sxookrIQHb04dpH4qvxAn3rirzLyL5+v9S/L&#xA;HzZ5j8y3z3dx9buah5WYr6kEHpRRivqRguF4fET8AcbQyK6r3zS7sQ+Q77UTFxXQ01G5eEfCZBFP&#xA;PJx78P7unfFXmXnrz/5485ra6OPIN7p80F80DGK+tpHM6xSK0Yp6NCK1ryxV8+ef3afzVo8oka5j&#xA;uLaCWGKcFSiyTyN6TMQxYVJ33607Yq9D/wCcqdLuNPv9Kjn0PS9BZolYW2jymaFwWlHqOxtbGj/D&#xA;SnA7U37Yqt/5yDu726/PSxKrJBY3UmmrwBb0XlhIFeysyLN8wG98VSD84/OGo+b/AC5pmv6jHDDe&#xA;XWpXqSQ2wZYgLeOG3TirySsKpECffFVT8ztJ1TznqGiSeXrK6v00nTE0u8e3tLydRdR3csrR84oZ&#xA;FLBbyHox+2vjiqN/IiO8t9c0bTfWSL1tTlaVOB9RuIseB5lAwAWVgVLDr0xV9I6x+ZvrAzN5X1Rb&#xA;eGRYY54pdKZZDK3FGCvfRSBW4/tLt+1TFXyp5J8keaPLf5leTbHXdPisnutZVYZ1lhndmglSOVC0&#xA;Mkg4o3Tx7E4q9L/JeebzB+cr6ncy8tR1HT9Qu76ciOrMZ4AqDg7NwRQFQMFoBSnU4qt0w6afyytF&#xA;9AesdFjHP9N699r6oN/qn+8nX/dX93+z9nFWZfn1+fGpeS9V0q0stIguUuoJJXaWRwQQ4Wg4gYq8&#xA;4vvzXn/MbRfOetXlnFp1zFo9vZfV4CzIfTXUpOVWH/F4xVjV7q2s6J+X1hrGnTNZ6pbixSK/jRUc&#xA;xmzCoob4iQqTsu/ixpvir27/AJxi8xeafO/lHV7vzBqkt/dWV96cU09GYRtCjcBQLsCCfpxV7Lw/&#xA;TTEoBb+gAD+1Xn9C/wAuKoHXNc0hNNn1TVbiLStO05eVxcynkgEjBRWgH7VB9OKvGbj837P8yvyQ&#xA;83aheRWuiXtlb3lrDY/WFkecfV43DKGEbblyNgcVeLfkfreiafBrH6XvpLCzi+rzXEkTqjND9Zia&#xA;TiARKzKkZI9L4vDFUXq//ORGrp5a1LyXptjaTaC41G0tL+UT/WXtr6WUiRyz/b4y/tD54q9g8n+Z&#xA;PJt45i0m9ju4VkupBDp/1mR1DWWmpyMXxXCgyxSDkwoSp49MVSTzR+aXkfQxcWN7cXZ1FmuQ9ukU&#xA;xYCS2lhRnSYrx+OXap6V74qxnz3+b2r+XI9C1fyeZI7HWra4lL6jFA7OTdNI7KsbVX97I/2vo2xV&#xA;M/y7/OrXfNcXmC/83Xdpb/Ure0jtbhALQL8U/L4i/pOwR3ZY5I3DEA/DxxV43onmnTtG/Ma812VX&#xA;uLIyamqehQswu4J4Y2HIqKVmBO/TFXtf5WeevKPm3XNM0g2cnrad5b0+xeS9jl9P1dPRYpin1Obm&#xA;VcsOJZenULirKPO1tHp6anHopuYfVh0oyJo9vJI7suqrwq2oclRgfsbhWOxxV5RPP5g9Pz9VvMdH&#xA;soBeVg06hX9HgD6/Q/BHw6GHfhufixViPkH8yNO8v6jf32s6YdVkvzMzhTGnGSZ43LrzSQDeM9Bt&#xA;iqVeevP955ruYnNpDptpCpVbO1qsZJNeTeJ2H8MVZr5PZj/zj35sQMSBffYrEftC1PRhyFfTrTq3&#xA;HklBHKGVTTXf+cgvMmlSea/KF3aRX+n/AFnULHT22t2t4pJZkbZULP8Abr8R7UxV7toGq6XqXm1J&#xA;9OvILyB/MU0qS28iSo0ckcpRwyEgqw3U98VfHXmjW7K81DSWgka+g02zgt3MiFAxR2ldKvyZgPU4&#xA;8mHt9kDFU5/NL8xfLvnGa0bQ/Kdp5Tt7daSWtiYjHK9W/eMIoLYcqMB0PTFUPrP5ia/51886ZrPm&#xA;S5iWRLm3DMiiGCNVdFZ+NeK/Cg5N7YqjfNxD/lnoEquGR9U1QrQkihddxuR9wxVMtI/MvW/Kfn5r&#xA;N9UubXy2upC41KG0SJpSrmAytGZQx5EWsdPi/Z+eKpDa/mPrOg3Y/RSRfBMl7BPN6jOGeOA/EgkE&#xA;Jr9XXqhPWhxV7Xa3g1TynY6pdmE3d99QuLkg6Wo9SZi70V39SlW/a6ftYqxTz7q2maD558oavdV+&#xA;p2Gp3s9z6As5H4R3SE8RatRjTpyIH8uKvPJPPH1nWNFe1Nxpkdm/o3dxHcsjSwySqX3RYzGvBRUF&#xA;m+dAAFXpl/5z8libXrLTb5/0PZaHBDp1pcaxfRx/WhDKXFpFA3oz7GNPSl+Co49K4qxX8/8A83tH&#xA;/MvWdKv9MsJ7CPT7d4JEuChLF351HAnFWN+UPMNjpPlDzRDOeU2pC3tIIlZedXhuwZOJIJRCQGI6&#xA;VHjiqXeZ9QnM1vaMAIY9MsI40Hwgc7aCZnp0LMRQnuKeGKs5/Kn85X8jeXo9LtooJZL7VWlv2uFl&#xA;IitmihQSIUKivwvtvir7P0nV9K842MOo6XcR/UzGskUqnlzWUVU0IQrsO4xVC+Z/Keh/mDY/o3V4&#xA;JBYw1MlvHc3EKS8iKCQW7wcwClQGqK4qwm2/5xr/ACV1Elbfy4LUxD4yb2/k5V6dZxSlMVdbf841&#xA;/krqJK2/lwWpiHxk3t/Jyr06zilKYq62/wCca/yV1Elbfy4LUxD4yb2/k5V6dZxSlMVROj/84/8A&#xA;5UF5TpGjzaU/DhcPBqOpAyo37LcbhdtumKqEX/ON/wCTOrSu6eXjBKvxzSPfahK0jOepLT9a1xVd&#xA;F/zjp+T2rJHCmgtClotEV7/UJVAc1ooaei777Yqstf8AnG38mNRVorfy79VVKNIPr1+4c7hTQzil&#xA;N/vxVq2/5xp/JbUgfq/lwWphpzJvb+Tly6dZxSnHFXW3/ONP5LakD9X8uC1MNOZN7fycuXTrOKU4&#xA;4qitL/IH8q5ba6s9M0ifTba4Ef1+GLUtS9O49N+cXqILhVb03Xkta0O+Kqdv/wA48flDqRlW30J7&#xA;XYevXUNRk9QEUAatwOgGKqEP/ONn5K6hy+r+Wxa+iKvW9v5OVenWcUpTFW4P+ca/yV1EO1v5cFqI&#xA;QOQN7fycuVfGcUpTFV9t/wA45fk7fQzxWmgNZwDiZ4hf6g6yEVKFgZwPh3p88Vbf/nHT8ntbubm8&#xA;OgGO4ZjLcyyX1/K0skpLMzFpxuTWuKqmm/8AOPf5SyGSTS9Fl0wxcWcxajqNWPxcTUXC/Z3+/FUP&#xA;B/zjX+Suoh2t/LgtRCByBvb+Tlyr4zilKYq6D/nGv8ldRDtb+XBaiEDkDe38nLlXxnFKUxV1t/zj&#xA;T+S2pFvq/lwWoipyBvb+Tlyr4zilKYqqRf8AOOn5P6nbCCLQXgt7SrLC1/qEicpOrKpnopPHemKr&#xA;U/5xv/JnVWllj8vGB46GRnvtQlLlq92n/wAnFWov+cbfyY1Pm8Pl36v6CqG5X1/JyFKKN5xSgWmK&#xA;tQf841/krqIdrfy4LUQgcgb2/k5cq+M4pSmKug/5xr/JXUQ7W/lwWohA5A3t/Jy5V8ZxSlMVah/5&#xA;xs/JXUOX1fy2LX0RV63t/Jyr06zilKYq3B/zjX+Suoh2t/LgtRCByBvb+Tlyr4zilKYq6D/nGv8A&#xA;JXUQ7W/lwWohA5A3t/Jy5V8ZxSlMVdB/zjX+Suoh2t/LgtRCByBvb+Tlyr4zilKYq6D/AJxr/JXU&#xA;Q7W/lwWohA5A3t/Jy5V8ZxSlMVdB/wA41/krqIdrfy4LUQgcgb2/k5cq+M4pSmKsp8kflv5N0K2u&#xA;rXyrpw0e3kdZbmMzz3PqORxBrO7laBe2Ksk/47TAIotvQBJ/a5c/oXpxxVoD9M8VVRb/AFcbn7XL&#xA;lT2X+XFXAfpniqqLf6uNz9rlyp7L/LirgP0zxVVFv9XG5+1y5U9l/lxVwH6Z4qqi3+rjc/a5cqey&#xA;/wAuKuA/TPFVUW/1cbn7XLlT2X+XFXAfpniqqLf6uNz9rlyp7L/LirgP0zxVVFv9XG5+1y5U9l/l&#xA;xVtU/TKgKBb/AFYUP7XLn9C9OOKuVP0yoCgW/wBWFD+1y5/QvTjirQH6Z4qqi3+rjc/a5cqey/y4&#xA;q3/x2mARRbegCT+1y5/QvTjirTH9M/ZUW/1cEn9rly+hf5cVcR+meTKot/q43H2uXKvsv8uKuI/T&#xA;PJlUW/1cbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv8AVxuPtcuVfZf5cVcR+meT&#xA;Kot/q43H2uXKvsv8uKuI/TPJlUW/1cbj7XLlX2X+XFW+H6aYlALf0AAf2q8/oX+XFVvD9MKSoFv9&#xA;WUA/tcuX/A/y4q2R+meTKot/q43H2uXKvsv8uKuI/TPJlUW/1cbj7XLlX2X+XFXEfpnkyqLf6uNx&#xA;9rlyr7L/AC4q4j9M8mVRb/VxuPtcuVfZf5cVcx/TP2VFv9XBJ/a5cvoX+XFXEfpnkyqLf6uNx9rl&#xA;yr7L/LiriP0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/wAuKuI/TPJlUW/1cbj7XLlX&#xA;2X+XFXEfpnkyqLf6uNx9rlyr7L/LirfD9NMSgFv6AAP7Vef0L/Lirv8AjtMAii29AEn9rlz+henH&#xA;FWgP0zxVVFv9XG5+1y5U9l/lxVwH6Z4qqi3+rjc/a5cqey/y4q4D9M8VVRb/AFcbn7XLlT2X+XFX&#xA;AfpniqqLf6uNz9rlyp7L/LirgP0zxVVFv9XG5+1y5U9l/lxVwH6Z4qqi3+rjc/a5cqey/wAuKuA/&#xA;TPFVUW/1cbn7XLlT2X+XFW1T9MqAoFv9WFD+1y5/QvTjirlT9MqAoFv9WFD+1y5/QvTjirQH6Z4q&#xA;qi3+rjc/a5cqey/y4q3/AMdpgEUW3oAk/tcuf0L044q0x/TP2VFv9XBJ/a5cvoX+XFXEfpnkyqLf&#xA;6uNx9rlyr7L/AC4q4j9M8mVRb/VxuPtcuVfZf5cVcR+meTKot/q43H2uXKvsv8uKuI/TPJlUW/1c&#xA;bj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv8AVxuPtcuVfZf5cVb4fppiUAt/QAB/&#xA;arz+hf5cVW8P0wpKgW/1ZQD+1y5f8D/LirZH6Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/AFcbj7XL&#xA;lX2X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv9XG4+1y5V9l/lxVzH9M/ZUW/wBXBJ/a5cvo&#xA;X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv8AVxuPtcuVfZf5cVcR+meTKot/q43H2uXKvsv8&#xA;uKuI/TPJlUW/1cbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/AC4q3w/TTEoBb+gAD+1Xn9C/y4q0&#xA;A2tNQBbf0BXb4q8/u/lxVpFbWaKAsH1cdR8XLl938uKuRW1migLB9XHUfFy5fd/LirkVtZooCwfV&#xA;x1HxcuX3fy4q5FbWaKAsH1cdR8XLl938uKuRW1migLB9XHUfFy5fd/LirkVtZooCwfVx1HxcuX3f&#xA;y4q5FbWaKAsH1cdR8XLl938uKtojayoACwfVhT+blz+7+XFXIjayoACwfVhT+blz+7+XFWkVtZoo&#xA;CwfVx1HxcuX3fy4q2A2tNQBbf0BXb4q8/u/lxVoltZrRVt/q4J2+Lly+7+XFXcW1nkwC2/1cdB8X&#xA;LlX5fy4q7i2s8mAW3+rjoPi5cq/L+XFXcW1nkwC2/wBXHQfFy5V+X8uKu4trPJgFt/q46D4uXKvy&#xA;/lxV3FtZ5MAtv9XHQfFy5V+X8uKu4trPJgFt/q46D4uXKvy/lxVtUbWmJAW39AAbfFXn938uKrQj&#xA;awpICwfVlHT4uXL7v5cVb4trPJgFt/q46D4uXKvy/lxV3FtZ5MAtv9XHQfFy5V+X8uKu4trPJgFt&#xA;/q46D4uXKvy/lxV3FtZ5MAtv9XHQfFy5V+X8uKuJbWa0Vbf6uCdvi5cvu/lxV3FtZ5MAtv8AVx0H&#xA;xcuVfl/LiruLazyYBbf6uOg+Llyr8v5cVdxbWeTALb/Vx0HxcuVfl/LiruLazyYBbf6uOg+Llyr8&#xA;v5cVdxbWeTALb/Vx0HxcuVfl/Lirao2tMSAtv6AA2+KvP7v5cVcxXWWAAW29AE7nly5fQvTjirXw&#xA;6xxUBbb6uOpPLlyp/q/y4q74dY4qAtt9XHUnly5U/wBX+XFXfDrHFQFtvq46k8uXKn+r/Lirvh1j&#xA;ioC231cdSeXLlT/V/lxV3w6xxUBbb6uOpPLlyp/q/wAuKu+HWOKgLbfVx1J5cuVP9X+XFXfDrHFQ&#xA;Ftvq46k8uXKn+r/LirYC6woA4231cU3PLlz/AOB6ccVcAusKAONt9XFNzy5c/wDgenHFWvh1jioC&#xA;231cdSeXLlT/AFf5cVbYrrLAALbegCdzy5cvoXpxxVp3XWOgW2+rgnry5cvoX+XFXPx1irALbfVx&#xA;0J5cuX/A/wAuKufjrFWAW2+rjoTy5cv+B/lxVz8dYqwC231cdCeXLl/wP8uKufjrFWAW2+rjoTy5&#xA;cv8Agf5cVc/HWKsAtt9XHQnly5f8D/Lirn46xVgFtvq46E8uXL/gf5cVbIXWWqONt6ApueXLl/wP&#xA;Tjiq0hdXWo4231Zab/Fy5f8AA/y4q2/HWKsAtt9XHQnly5f8D/Lirn46xVgFtvq46E8uXL/gf5cV&#xA;c/HWKsAtt9XHQnly5f8AA/y4q5+OsVYBbb6uOhPLly/4H+XFXO66x0C231cE9eXLl9C/y4q5+OsV&#xA;YBbb6uOhPLly/wCB/lxVz8dYqwC231cdCeXLl/wP8uKufjrFWAW2+rjoTy5cv+B/lxVz8dYqwC23&#xA;1cdCeXLl/wAD/Lirn46xVgFtvq46E8uXL/gf5cVbIXWWqONt6ApueXLl/wAD044q3/x2mARRbegC&#xA;T+1y5/QvTjirQH6Z4qqi3+rjc/a5cqey/wAuKuA/TPFVUW/1cbn7XLlT2X+XFXAfpniqqLf6uNz9&#xA;rlyp7L/LirgP0zxVVFv9XG5+1y5U9l/lxVwH6Z4qqi3+rjc/a5cqey/y4q4D9M8VVRb/AFcbn7XL&#xA;lT2X+XFXAfpniqqLf6uNz9rlyp7L/Lirap+mVAUC3+rCh/a5c/oXpxxVyp+mVAUC3+rCh/a5c/oX&#xA;pxxVoD9M8VVRb/VxuftcuVPZf5cVb/47TAIotvQBJ/a5c/oXpxxVpj+mfsqLf6uCT+1y5fQv8uKu&#xA;I/TPJlUW/wBXG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/VxuPtcuVfZf5cVcR+&#xA;meTKot/q43H2uXKvsv8ALiriP0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q3w/TT&#xA;EoBb+gAD+1Xn9C/y4qt4fphSVAt/qygH9rly/wCB/lxVsj9M8mVRb/VxuPtcuVfZf5cVcR+meTKo&#xA;t/q43H2uXKvsv8uKuI/TPJlUW/1cbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/LirmP6Z+yot/q4&#xA;JP7XLl9C/wAuKuI/TPJlUW/1cbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv9XG4+&#xA;1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q4j9M8mVRb/AFcbj7XLlX2X+XFW+H6aYlALf0AAf2q8&#xA;/oX+XFWmK6ywAC23oAnc8uXL6F6ccVa+HWOKgLbfVx1J5cuVP9X+XFXfDrHFQFtvq46k8uXKn+r/&#xA;AC4q74dY4qAtt9XHUnly5U/1f5cVd8OscVAW2+rjqTy5cqf6v8uKu+HWOKgLbfVx1J5cuVP9X+XF&#xA;XfDrHFQFtvq46k8uXKn+r/Lirvh1jioC231cdSeXLlT/AFf5cVbAXWFAHG2+rim55cuf/A9OOKuA&#xA;XWFAHG2+rim55cuf/A9OOKtfDrHFQFtvq46k8uXKn+r/AC4q2xXWWAAW29AE7nly5fQvTjirTuus&#xA;dAtt9XBPXly5fQv8uKufjrFWAW2+rjoTy5cv+B/lxVz8dYqwC231cdCeXLl/wP8ALirn46xVgFtv&#xA;q46E8uXL/gf5cVc/HWKsAtt9XHQnly5f8D/Lirn46xVgFtvq46E8uXL/AIH+XFXPx1irALbfVx0J&#xA;5cuX/A/y4q2QustUcbb0BTc8uXL/AIHpxxVaQurrUcbb6stN/i5cv+B/lxVt+OsVYBbb6uOhPLly&#xA;/wCB/lxVz8dYqwC231cdCeXLl/wP8uKufjrFWAW2+rjoTy5cv+B/lxVz8dYqwC231cdCeXLl/wAD&#xA;/LirnddY6Bbb6uCevLly+hf5cVc/HWKsAtt9XHQnly5f8D/Lirn46xVgFtvq46E8uXL/AIH+XFXP&#xA;x1irALbfVx0J5cuX/A/y4q5+OsVYBbb6uOhPLly/4H+XFXPx1irALbfVx0J5cuX/AAP8uKtkLrLV&#xA;HG29AU3PLly/4HpxxVv/AI7TAIotvQBJ/a5c/oXpxxVoD9M8VVRb/VxuftcuVPZf5cVcB+meKqot&#xA;/q43P2uXKnsv8uKuA/TPFVUW/wBXG5+1y5U9l/lxVwH6Z4qqi3+rjc/a5cqey/y4q4D9M8VVRb/V&#xA;xuftcuVPZf5cVcB+meKqot/q43P2uXKnsv8ALirgP0zxVVFv9XG5+1y5U9l/lxVtU/TKgKBb/VhQ&#xA;/tcuf0L044q5U/TKgKBb/VhQ/tcuf0L044q0B+meKqot/q43P2uXKnsv8uKt/wDHaYBFFt6AJP7X&#xA;Ln9C9OOKtMf0z9lRb/VwSf2uXL6F/lxVxH6Z5Mqi3+rjcfa5cq+y/wAuKuI/TPJlUW/1cbj7XLlX&#xA;2X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/y&#xA;4q4j9M8mVRb/AFcbj7XLlX2X+XFW+H6aYlALf0AAf2q8/oX+XFVvD9MKSoFv9WUA/tcuX/A/y4q2&#xA;R+meTKot/q43H2uXKvsv8uKuI/TPJlUW/wBXG4+1y5V9l/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q4j9&#xA;M8mVRb/VxuPtcuVfZf5cVcx/TP2VFv8AVwSf2uXL6F/lxVxH6Z5Mqi3+rjcfa5cq+y/y4q4j9M8m&#xA;VRb/AFcbj7XLlX2X+XFXEfpnkyqLf6uNx9rlyr7L/LiriP0zyZVFv9XG4+1y5V9l/lxVxH6Z5Mqi&#xA;3+rjcfa5cq+y/wAuKt8P00xKAW/oAA/tV5/Qv8uKv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>312.500395</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>New Color Swatch 1</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>New Color Swatch 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>New Color Swatch 9</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>212</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>New Color Swatch 35</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">City_silhouette_1</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmpMM:DocumentID>xmp.did:ea529535-1f17-ca44-8f0b-1c8f7a5f16b1</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:ea529535-1f17-ca44-8f0b-1c8f7a5f16b1</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:19BCBBE89560E6118B29F5599A788BDD</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:19BCBBE89560E6118B29F5599A788BDD</stEvt:instanceID>
                  <stEvt:when>2016-08-12T17:06:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8BFCCFE03F95E6118E4898F69221CB9C</stEvt:instanceID>
                  <stEvt:when>2016-10-18T18:38:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3B88AC2367C0E6119495B7FA850FA977</stEvt:instanceID>
                  <stEvt:when>2016-12-12T18:21:51+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1a65e373-3d39-2f42-92bb-99a85a3e87bb</stEvt:instanceID>
                  <stEvt:when>2017-11-06T12:47:27+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ea529535-1f17-ca44-8f0b-1c8f7a5f16b1</stEvt:instanceID>
                  <stEvt:when>2017-11-06T12:54:14+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:a6063da4-7dd1-ac40-b42a-27640bf8a894</stRef:instanceID>
            <stRef:documentID>xmp.did:a6063da4-7dd1-ac40-b42a-27640bf8a894</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:19BCBBE89560E6118B29F5599A788BDD</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -885.828 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 885.828 li
1417.32 885.828 li
1417.32 0 li
cp
clp
0 .000976562 mo
1417.32 .000976562 li
1417.32 885.826 li
0 885.826 li
0 .000976562 li
0 .000976562 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
ef
66.4396 841.535 mo
88.5849 841.535 li
88.5849 863.682 li
66.4396 863.682 li
66.4396 841.535 li
66.4396 841.535 li
cp
.831373 .831373 .831373 rgb
ef
66.4396 797.245 mo
88.5849 797.245 li
88.5849 819.391 li
66.4396 819.391 li
66.4396 797.245 li
66.4396 797.245 li
cp
ef
66.4396 752.952 mo
88.5849 752.952 li
88.5849 775.101 li
66.4396 775.101 li
66.4396 752.952 li
66.4396 752.952 li
cp
ef
66.4396 708.662 mo
88.5849 708.662 li
88.5849 730.808 li
66.4396 730.808 li
66.4396 708.662 li
66.4396 708.662 li
cp
ef
66.4396 664.371 mo
88.5849 664.371 li
88.5849 686.518 li
66.4396 686.518 li
66.4396 664.371 li
66.4396 664.371 li
cp
ef
66.4396 620.079 mo
88.5849 620.079 li
88.5849 642.225 li
66.4396 642.225 li
66.4396 620.079 li
66.4396 620.079 li
cp
ef
66.4396 575.788 mo
88.5849 575.788 li
88.5849 597.935 li
66.4396 597.935 li
66.4396 575.788 li
66.4396 575.788 li
cp
ef
66.4396 531.496 mo
88.5849 531.496 li
88.5849 553.642 li
66.4396 553.642 li
66.4396 531.496 li
66.4396 531.496 li
cp
ef
66.4396 487.205 mo
88.5849 487.205 li
88.5849 509.352 li
66.4396 509.352 li
66.4396 487.205 li
66.4396 487.205 li
cp
ef
66.4396 442.915 mo
88.5849 442.915 li
88.5849 465.061 li
66.4396 465.061 li
66.4396 442.915 li
66.4396 442.915 li
cp
ef
66.4396 398.622 mo
88.5849 398.622 li
88.5849 420.769 li
66.4396 420.769 li
66.4396 398.622 li
66.4396 398.622 li
cp
ef
66.4396 354.332 mo
88.5849 354.332 li
88.5849 376.478 li
66.4396 376.478 li
66.4396 354.332 li
66.4396 354.332 li
cp
ef
66.4396 310.039 mo
88.5849 310.039 li
88.5849 332.186 li
66.4396 332.186 li
66.4396 310.039 li
66.4396 310.039 li
cp
ef
66.4396 265.749 mo
88.5849 265.749 li
88.5849 287.895 li
66.4396 287.895 li
66.4396 265.749 li
66.4396 265.749 li
cp
ef
66.4396 221.458 mo
88.5849 221.458 li
88.5849 243.603 li
66.4396 243.603 li
66.4396 221.458 li
66.4396 221.458 li
cp
ef
66.4396 177.166 mo
88.5849 177.166 li
88.5849 199.312 li
66.4396 199.312 li
66.4396 177.166 li
66.4396 177.166 li
cp
ef
66.4396 132.875 mo
88.5849 132.875 li
88.5849 155.022 li
66.4396 155.022 li
66.4396 132.875 li
66.4396 132.875 li
cp
ef
66.4396 88.583 mo
88.5849 88.583 li
88.5849 110.729 li
66.4396 110.729 li
66.4396 88.583 li
66.4396 88.583 li
cp
ef
66.4396 44.2923 mo
88.5849 44.2923 li
88.5849 66.4387 li
66.4396 66.4387 li
66.4396 44.2923 li
66.4396 44.2923 li
cp
ef
66.4396 0 mo
88.5849 0 li
88.5849 22.1463 li
66.4396 22.1463 li
66.4396 0 li
66.4396 0 li
cp
ef
44.2935 863.682 mo
66.4396 863.682 li
66.4396 885.828 li
44.2935 885.828 li
44.2935 863.682 li
44.2935 863.682 li
cp
ef
44.2935 819.391 mo
66.4396 819.391 li
66.4396 841.537 li
44.2935 841.537 li
44.2935 819.391 li
44.2935 819.391 li
cp
ef
44.2935 775.099 mo
66.4396 775.099 li
66.4396 797.245 li
44.2935 797.245 li
44.2935 775.099 li
44.2935 775.099 li
cp
ef
44.2935 730.808 mo
66.4396 730.808 li
66.4396 752.954 li
44.2935 752.954 li
44.2935 730.808 li
44.2935 730.808 li
cp
ef
44.2935 686.516 mo
66.4396 686.516 li
66.4396 708.662 li
44.2935 708.662 li
44.2935 686.516 li
44.2935 686.516 li
cp
ef
44.2935 642.225 mo
66.4396 642.225 li
66.4396 664.371 li
44.2935 664.371 li
44.2935 642.225 li
44.2935 642.225 li
cp
ef
44.2935 597.935 mo
66.4396 597.935 li
66.4396 620.081 li
44.2935 620.081 li
44.2935 597.935 li
44.2935 597.935 li
cp
ef
44.2935 553.642 mo
66.4396 553.642 li
66.4396 575.788 li
44.2935 575.788 li
44.2935 553.642 li
44.2935 553.642 li
cp
ef
44.2935 509.352 mo
66.4396 509.352 li
66.4396 531.498 li
44.2935 531.498 li
44.2935 509.352 li
44.2935 509.352 li
cp
ef
44.2935 465.059 mo
66.4396 465.059 li
66.4396 487.205 li
44.2935 487.205 li
44.2935 465.059 li
44.2935 465.059 li
cp
ef
44.2935 420.769 mo
66.4396 420.769 li
66.4396 442.915 li
44.2935 442.915 li
44.2935 420.769 li
44.2935 420.769 li
cp
ef
44.2935 376.476 mo
66.4396 376.476 li
66.4396 398.622 li
44.2935 398.622 li
44.2935 376.476 li
44.2935 376.476 li
cp
ef
44.2935 332.186 mo
66.4396 332.186 li
66.4396 354.332 li
44.2935 354.332 li
44.2935 332.186 li
44.2935 332.186 li
cp
ef
44.2935 287.895 mo
66.4396 287.895 li
66.4396 310.041 li
44.2935 310.041 li
44.2935 287.895 li
44.2935 287.895 li
cp
ef
44.2935 243.603 mo
66.4396 243.603 li
66.4396 265.749 li
44.2935 265.749 li
44.2935 243.603 li
44.2935 243.603 li
cp
ef
44.2935 199.312 mo
66.4396 199.312 li
66.4396 221.458 li
44.2935 221.458 li
44.2935 199.312 li
44.2935 199.312 li
cp
ef
44.2935 155.02 mo
66.4396 155.02 li
66.4396 177.166 li
44.2935 177.166 li
44.2935 155.02 li
44.2935 155.02 li
cp
ef
44.2935 110.729 mo
66.4396 110.729 li
66.4396 132.875 li
44.2935 132.875 li
44.2935 110.729 li
44.2935 110.729 li
cp
ef
44.2935 66.4387 mo
66.4396 66.4387 li
66.4396 88.5849 li
44.2935 88.5849 li
44.2935 66.4387 li
44.2935 66.4387 li
cp
ef
44.2935 22.1463 mo
66.4396 22.1463 li
66.4396 44.2923 li
44.2935 44.2923 li
44.2935 22.1463 li
44.2935 22.1463 li
cp
ef
22.1482 841.535 mo
44.2935 841.535 li
44.2935 863.682 li
22.1482 863.682 li
22.1482 841.535 li
22.1482 841.535 li
cp
ef
22.1482 797.245 mo
44.2935 797.245 li
44.2935 819.391 li
22.1482 819.391 li
22.1482 797.245 li
22.1482 797.245 li
cp
ef
22.1482 752.952 mo
44.2935 752.952 li
44.2935 775.101 li
22.1482 775.101 li
22.1482 752.952 li
22.1482 752.952 li
cp
ef
22.1482 708.662 mo
44.2935 708.662 li
44.2935 730.808 li
22.1482 730.808 li
22.1482 708.662 li
22.1482 708.662 li
cp
ef
22.1482 664.371 mo
44.2935 664.371 li
44.2935 686.518 li
22.1482 686.518 li
22.1482 664.371 li
22.1482 664.371 li
cp
ef
22.1482 620.079 mo
44.2935 620.079 li
44.2935 642.225 li
22.1482 642.225 li
22.1482 620.079 li
22.1482 620.079 li
cp
ef
22.1482 575.788 mo
44.2935 575.788 li
44.2935 597.935 li
22.1482 597.935 li
22.1482 575.788 li
22.1482 575.788 li
cp
ef
22.1482 531.496 mo
44.2935 531.496 li
44.2935 553.642 li
22.1482 553.642 li
22.1482 531.496 li
22.1482 531.496 li
cp
ef
22.1482 487.205 mo
44.2935 487.205 li
44.2935 509.352 li
22.1482 509.352 li
22.1482 487.205 li
22.1482 487.205 li
cp
ef
22.1482 442.915 mo
44.2935 442.915 li
44.2935 465.061 li
22.1482 465.061 li
22.1482 442.915 li
22.1482 442.915 li
cp
ef
22.1482 398.622 mo
44.2935 398.622 li
44.2935 420.769 li
22.1482 420.769 li
22.1482 398.622 li
22.1482 398.622 li
cp
ef
22.1482 354.332 mo
44.2935 354.332 li
44.2935 376.478 li
22.1482 376.478 li
22.1482 354.332 li
22.1482 354.332 li
cp
ef
22.1482 310.039 mo
44.2935 310.039 li
44.2935 332.186 li
22.1482 332.186 li
22.1482 310.039 li
22.1482 310.039 li
cp
ef
22.1482 265.749 mo
44.2935 265.749 li
44.2935 287.895 li
22.1482 287.895 li
22.1482 265.749 li
22.1482 265.749 li
cp
ef
22.1482 221.458 mo
44.2935 221.458 li
44.2935 243.603 li
22.1482 243.603 li
22.1482 221.458 li
22.1482 221.458 li
cp
ef
22.1482 177.166 mo
44.2935 177.166 li
44.2935 199.312 li
22.1482 199.312 li
22.1482 177.166 li
22.1482 177.166 li
cp
ef
22.1482 132.875 mo
44.2935 132.875 li
44.2935 155.022 li
22.1482 155.022 li
22.1482 132.875 li
22.1482 132.875 li
cp
ef
22.1482 88.583 mo
44.2935 88.583 li
44.2935 110.729 li
22.1482 110.729 li
22.1482 88.583 li
22.1482 88.583 li
cp
ef
22.1482 44.2923 mo
44.2935 44.2923 li
44.2935 66.4387 li
22.1482 66.4387 li
22.1482 44.2923 li
22.1482 44.2923 li
cp
ef
22.1482 0 mo
44.2935 0 li
44.2935 22.1463 li
22.1482 22.1463 li
22.1482 0 li
22.1482 0 li
cp
ef
.00286133 863.682 mo
22.1482 863.682 li
22.1482 885.828 li
.00286133 885.828 li
.00286133 863.682 li
.00286133 863.682 li
cp
ef
.00286133 819.391 mo
22.1482 819.391 li
22.1482 841.537 li
.00286133 841.537 li
.00286133 819.391 li
.00286133 819.391 li
cp
ef
.00286133 775.099 mo
22.1482 775.099 li
22.1482 797.245 li
.00286133 797.245 li
.00286133 775.099 li
.00286133 775.099 li
cp
ef
.00286133 730.808 mo
22.1482 730.808 li
22.1482 752.954 li
.00286133 752.954 li
.00286133 730.808 li
.00286133 730.808 li
cp
ef
.00286133 686.516 mo
22.1482 686.516 li
22.1482 708.662 li
.00286133 708.662 li
.00286133 686.516 li
.00286133 686.516 li
cp
ef
.00286133 642.225 mo
22.1482 642.225 li
22.1482 664.371 li
.00286133 664.371 li
.00286133 642.225 li
.00286133 642.225 li
cp
ef
.00286133 597.935 mo
22.1482 597.935 li
22.1482 620.081 li
.00286133 620.081 li
.00286133 597.935 li
.00286133 597.935 li
cp
ef
.00286133 553.642 mo
22.1482 553.642 li
22.1482 575.788 li
.00286133 575.788 li
.00286133 553.642 li
.00286133 553.642 li
cp
ef
.00286133 509.352 mo
22.1482 509.352 li
22.1482 531.498 li
.00286133 531.498 li
.00286133 509.352 li
.00286133 509.352 li
cp
ef
.00286133 465.059 mo
22.1482 465.059 li
22.1482 487.205 li
.00286133 487.205 li
.00286133 465.059 li
.00286133 465.059 li
cp
ef
.00286133 420.769 mo
22.1482 420.769 li
22.1482 442.915 li
.00286133 442.915 li
.00286133 420.769 li
.00286133 420.769 li
cp
ef
.00286133 376.476 mo
22.1482 376.476 li
22.1482 398.622 li
.00286133 398.622 li
.00286133 376.476 li
.00286133 376.476 li
cp
ef
.00286133 332.186 mo
22.1482 332.186 li
22.1482 354.332 li
.00286133 354.332 li
.00286133 332.186 li
.00286133 332.186 li
cp
ef
.00286133 287.895 mo
22.1482 287.895 li
22.1482 310.041 li
.00286133 310.041 li
.00286133 287.895 li
.00286133 287.895 li
cp
ef
.00286133 243.603 mo
22.1482 243.603 li
22.1482 265.749 li
.00286133 265.749 li
.00286133 243.603 li
.00286133 243.603 li
cp
ef
.00286133 199.312 mo
22.1482 199.312 li
22.1482 221.458 li
.00286133 221.458 li
.00286133 199.312 li
.00286133 199.312 li
cp
ef
.00286133 155.02 mo
22.1482 155.02 li
22.1482 177.166 li
.00286133 177.166 li
.00286133 155.02 li
.00286133 155.02 li
cp
ef
.00286133 110.729 mo
22.1482 110.729 li
22.1482 132.875 li
.00286133 132.875 li
.00286133 110.729 li
.00286133 110.729 li
cp
ef
.00286133 66.4387 mo
22.1482 66.4387 li
22.1482 88.5849 li
.00286133 88.5849 li
.00286133 66.4387 li
.00286133 66.4387 li
cp
ef
.00286133 22.1463 mo
22.1482 22.1463 li
22.1482 44.2923 li
.00286133 44.2923 li
.00286133 22.1463 li
.00286133 22.1463 li
cp
ef
155.022 841.535 mo
177.167 841.535 li
177.167 863.682 li
155.022 863.682 li
155.022 841.535 li
155.022 841.535 li
cp
ef
155.022 797.245 mo
177.167 797.245 li
177.167 819.391 li
155.022 819.391 li
155.022 797.245 li
155.022 797.245 li
cp
ef
155.022 752.952 mo
177.167 752.952 li
177.167 775.101 li
155.022 775.101 li
155.022 752.952 li
155.022 752.952 li
cp
ef
155.022 708.662 mo
177.167 708.662 li
177.167 730.808 li
155.022 730.808 li
155.022 708.662 li
155.022 708.662 li
cp
ef
155.022 664.371 mo
177.167 664.371 li
177.167 686.518 li
155.022 686.518 li
155.022 664.371 li
155.022 664.371 li
cp
ef
155.022 620.079 mo
177.167 620.079 li
177.167 642.225 li
155.022 642.225 li
155.022 620.079 li
155.022 620.079 li
cp
ef
155.022 575.788 mo
177.167 575.788 li
177.167 597.935 li
155.022 597.935 li
155.022 575.788 li
155.022 575.788 li
cp
ef
155.022 531.496 mo
177.167 531.496 li
177.167 553.642 li
155.022 553.642 li
155.022 531.496 li
155.022 531.496 li
cp
ef
155.022 487.205 mo
177.167 487.205 li
177.167 509.352 li
155.022 509.352 li
155.022 487.205 li
155.022 487.205 li
cp
ef
155.022 442.915 mo
177.167 442.915 li
177.167 465.061 li
155.022 465.061 li
155.022 442.915 li
155.022 442.915 li
cp
ef
155.022 398.622 mo
177.167 398.622 li
177.167 420.769 li
155.022 420.769 li
155.022 398.622 li
155.022 398.622 li
cp
ef
155.022 354.332 mo
177.167 354.332 li
177.167 376.478 li
155.022 376.478 li
155.022 354.332 li
155.022 354.332 li
cp
ef
155.022 310.039 mo
177.167 310.039 li
177.167 332.186 li
155.022 332.186 li
155.022 310.039 li
155.022 310.039 li
cp
ef
155.022 265.749 mo
177.167 265.749 li
177.167 287.895 li
155.022 287.895 li
155.022 265.749 li
155.022 265.749 li
cp
ef
155.022 221.458 mo
177.167 221.458 li
177.167 243.603 li
155.022 243.603 li
155.022 221.458 li
155.022 221.458 li
cp
ef
155.022 177.166 mo
177.167 177.166 li
177.167 199.312 li
155.022 199.312 li
155.022 177.166 li
155.022 177.166 li
cp
ef
155.022 132.875 mo
177.167 132.875 li
177.167 155.022 li
155.022 155.022 li
155.022 132.875 li
155.022 132.875 li
cp
ef
155.022 88.583 mo
177.167 88.583 li
177.167 110.729 li
155.022 110.729 li
155.022 88.583 li
155.022 88.583 li
cp
ef
155.022 44.2923 mo
177.167 44.2923 li
177.167 66.4387 li
155.022 66.4387 li
155.022 44.2923 li
155.022 44.2923 li
cp
ef
155.022 0 mo
177.167 0 li
177.167 22.1463 li
155.022 22.1463 li
155.022 0 li
155.022 0 li
cp
ef
132.875 863.682 mo
155.021 863.682 li
155.021 885.828 li
132.875 885.828 li
132.875 863.682 li
132.875 863.682 li
cp
ef
132.875 819.391 mo
155.021 819.391 li
155.021 841.537 li
132.875 841.537 li
132.875 819.391 li
132.875 819.391 li
cp
ef
132.875 775.099 mo
155.021 775.099 li
155.021 797.245 li
132.875 797.245 li
132.875 775.099 li
132.875 775.099 li
cp
ef
132.875 730.808 mo
155.021 730.808 li
155.021 752.954 li
132.875 752.954 li
132.875 730.808 li
132.875 730.808 li
cp
ef
132.875 686.516 mo
155.021 686.516 li
155.021 708.662 li
132.875 708.662 li
132.875 686.516 li
132.875 686.516 li
cp
ef
132.875 642.225 mo
155.021 642.225 li
155.021 664.371 li
132.875 664.371 li
132.875 642.225 li
132.875 642.225 li
cp
ef
132.875 597.935 mo
155.021 597.935 li
155.021 620.081 li
132.875 620.081 li
132.875 597.935 li
132.875 597.935 li
cp
ef
132.875 553.642 mo
155.021 553.642 li
155.021 575.788 li
132.875 575.788 li
132.875 553.642 li
132.875 553.642 li
cp
ef
132.875 509.352 mo
155.021 509.352 li
155.021 531.498 li
132.875 531.498 li
132.875 509.352 li
132.875 509.352 li
cp
ef
132.875 465.059 mo
155.021 465.059 li
155.021 487.205 li
132.875 487.205 li
132.875 465.059 li
132.875 465.059 li
cp
ef
132.875 420.769 mo
155.021 420.769 li
155.021 442.915 li
132.875 442.915 li
132.875 420.769 li
132.875 420.769 li
cp
ef
132.875 376.476 mo
155.021 376.476 li
155.021 398.622 li
132.875 398.622 li
132.875 376.476 li
132.875 376.476 li
cp
ef
132.875 332.186 mo
155.021 332.186 li
155.021 354.332 li
132.875 354.332 li
132.875 332.186 li
132.875 332.186 li
cp
ef
132.875 287.895 mo
155.021 287.895 li
155.021 310.041 li
132.875 310.041 li
132.875 287.895 li
132.875 287.895 li
cp
ef
132.875 243.603 mo
155.021 243.603 li
155.021 265.749 li
132.875 265.749 li
132.875 243.603 li
132.875 243.603 li
cp
ef
132.875 199.312 mo
155.021 199.312 li
155.021 221.458 li
132.875 221.458 li
132.875 199.312 li
132.875 199.312 li
cp
ef
132.875 155.02 mo
155.021 155.02 li
155.021 177.166 li
132.875 177.166 li
132.875 155.02 li
132.875 155.02 li
cp
ef
132.875 110.729 mo
155.021 110.729 li
155.021 132.875 li
132.875 132.875 li
132.875 110.729 li
132.875 110.729 li
cp
ef
132.875 66.4387 mo
155.021 66.4387 li
155.021 88.5849 li
132.875 88.5849 li
132.875 66.4387 li
132.875 66.4387 li
cp
ef
132.875 22.1463 mo
155.021 22.1463 li
155.021 44.2923 li
132.875 44.2923 li
132.875 22.1463 li
132.875 22.1463 li
cp
ef
110.731 841.535 mo
132.875 841.535 li
132.875 863.682 li
110.731 863.682 li
110.731 841.535 li
110.731 841.535 li
cp
ef
110.731 797.245 mo
132.875 797.245 li
132.875 819.391 li
110.731 819.391 li
110.731 797.245 li
110.731 797.245 li
cp
ef
110.731 752.952 mo
132.875 752.952 li
132.875 775.101 li
110.731 775.101 li
110.731 752.952 li
110.731 752.952 li
cp
ef
110.731 708.662 mo
132.875 708.662 li
132.875 730.808 li
110.731 730.808 li
110.731 708.662 li
110.731 708.662 li
cp
ef
110.731 664.371 mo
132.875 664.371 li
132.875 686.518 li
110.731 686.518 li
110.731 664.371 li
110.731 664.371 li
cp
ef
110.731 620.079 mo
132.875 620.079 li
132.875 642.225 li
110.731 642.225 li
110.731 620.079 li
110.731 620.079 li
cp
ef
110.731 575.788 mo
132.875 575.788 li
132.875 597.935 li
110.731 597.935 li
110.731 575.788 li
110.731 575.788 li
cp
ef
110.731 531.496 mo
132.875 531.496 li
132.875 553.642 li
110.731 553.642 li
110.731 531.496 li
110.731 531.496 li
cp
ef
110.731 487.205 mo
132.875 487.205 li
132.875 509.352 li
110.731 509.352 li
110.731 487.205 li
110.731 487.205 li
cp
ef
110.731 442.915 mo
132.875 442.915 li
132.875 465.061 li
110.731 465.061 li
110.731 442.915 li
110.731 442.915 li
cp
ef
110.731 398.622 mo
132.875 398.622 li
132.875 420.769 li
110.731 420.769 li
110.731 398.622 li
110.731 398.622 li
cp
ef
110.731 354.332 mo
132.875 354.332 li
132.875 376.478 li
110.731 376.478 li
110.731 354.332 li
110.731 354.332 li
cp
ef
110.731 310.039 mo
132.875 310.039 li
132.875 332.186 li
110.731 332.186 li
110.731 310.039 li
110.731 310.039 li
cp
ef
110.731 265.749 mo
132.875 265.749 li
132.875 287.895 li
110.731 287.895 li
110.731 265.749 li
110.731 265.749 li
cp
ef
110.731 221.458 mo
132.875 221.458 li
132.875 243.603 li
110.731 243.603 li
110.731 221.458 li
110.731 221.458 li
cp
ef
110.731 177.166 mo
132.875 177.166 li
132.875 199.312 li
110.731 199.312 li
110.731 177.166 li
110.731 177.166 li
cp
ef
110.731 132.875 mo
132.875 132.875 li
132.875 155.022 li
110.731 155.022 li
110.731 132.875 li
110.731 132.875 li
cp
ef
110.731 88.583 mo
132.875 88.583 li
132.875 110.729 li
110.731 110.729 li
110.731 88.583 li
110.731 88.583 li
cp
ef
110.731 44.2923 mo
132.875 44.2923 li
132.875 66.4387 li
110.731 66.4387 li
110.731 44.2923 li
110.731 44.2923 li
cp
ef
110.731 0 mo
132.875 0 li
132.875 22.1463 li
110.731 22.1463 li
110.731 0 li
110.731 0 li
cp
ef
88.5849 863.682 mo
110.73 863.682 li
110.73 885.828 li
88.5849 885.828 li
88.5849 863.682 li
88.5849 863.682 li
cp
ef
88.5849 819.391 mo
110.73 819.391 li
110.73 841.537 li
88.5849 841.537 li
88.5849 819.391 li
88.5849 819.391 li
cp
ef
88.5849 775.099 mo
110.73 775.099 li
110.73 797.245 li
88.5849 797.245 li
88.5849 775.099 li
88.5849 775.099 li
cp
ef
88.5849 730.808 mo
110.73 730.808 li
110.73 752.954 li
88.5849 752.954 li
88.5849 730.808 li
88.5849 730.808 li
cp
ef
88.5849 686.516 mo
110.73 686.516 li
110.73 708.662 li
88.5849 708.662 li
88.5849 686.516 li
88.5849 686.516 li
cp
ef
88.5849 642.225 mo
110.73 642.225 li
110.73 664.371 li
88.5849 664.371 li
88.5849 642.225 li
88.5849 642.225 li
cp
ef
88.5849 597.935 mo
110.73 597.935 li
110.73 620.081 li
88.5849 620.081 li
88.5849 597.935 li
88.5849 597.935 li
cp
ef
88.5849 553.642 mo
110.73 553.642 li
110.73 575.788 li
88.5849 575.788 li
88.5849 553.642 li
88.5849 553.642 li
cp
ef
88.5849 509.352 mo
110.73 509.352 li
110.73 531.498 li
88.5849 531.498 li
88.5849 509.352 li
88.5849 509.352 li
cp
ef
88.5849 465.059 mo
110.73 465.059 li
110.73 487.205 li
88.5849 487.205 li
88.5849 465.059 li
88.5849 465.059 li
cp
ef
88.5849 420.769 mo
110.73 420.769 li
110.73 442.915 li
88.5849 442.915 li
88.5849 420.769 li
88.5849 420.769 li
cp
ef
88.5849 376.476 mo
110.73 376.476 li
110.73 398.622 li
88.5849 398.622 li
88.5849 376.476 li
88.5849 376.476 li
cp
ef
88.5849 332.186 mo
110.73 332.186 li
110.73 354.332 li
88.5849 354.332 li
88.5849 332.186 li
88.5849 332.186 li
cp
ef
88.5849 287.895 mo
110.73 287.895 li
110.73 310.041 li
88.5849 310.041 li
88.5849 287.895 li
88.5849 287.895 li
cp
ef
88.5849 243.603 mo
110.73 243.603 li
110.73 265.749 li
88.5849 265.749 li
88.5849 243.603 li
88.5849 243.603 li
cp
ef
88.5849 199.312 mo
110.73 199.312 li
110.73 221.458 li
88.5849 221.458 li
88.5849 199.312 li
88.5849 199.312 li
cp
ef
88.5849 155.02 mo
110.73 155.02 li
110.73 177.166 li
88.5849 177.166 li
88.5849 155.02 li
88.5849 155.02 li
cp
ef
88.5849 110.729 mo
110.73 110.729 li
110.73 132.875 li
88.5849 132.875 li
88.5849 110.729 li
88.5849 110.729 li
cp
ef
88.5849 66.4387 mo
110.73 66.4387 li
110.73 88.5849 li
88.5849 88.5849 li
88.5849 66.4387 li
88.5849 66.4387 li
cp
ef
88.5849 22.1463 mo
110.73 22.1463 li
110.73 44.2923 li
88.5849 44.2923 li
88.5849 22.1463 li
88.5849 22.1463 li
cp
ef
243.604 841.535 mo
265.749 841.535 li
265.749 863.682 li
243.604 863.682 li
243.604 841.535 li
243.604 841.535 li
cp
ef
243.604 797.245 mo
265.749 797.245 li
265.749 819.391 li
243.604 819.391 li
243.604 797.245 li
243.604 797.245 li
cp
ef
243.604 752.952 mo
265.749 752.952 li
265.749 775.101 li
243.604 775.101 li
243.604 752.952 li
243.604 752.952 li
cp
ef
243.604 708.662 mo
265.749 708.662 li
265.749 730.808 li
243.604 730.808 li
243.604 708.662 li
243.604 708.662 li
cp
ef
243.604 664.371 mo
265.749 664.371 li
265.749 686.518 li
243.604 686.518 li
243.604 664.371 li
243.604 664.371 li
cp
ef
243.604 620.079 mo
265.749 620.079 li
265.749 642.225 li
243.604 642.225 li
243.604 620.079 li
243.604 620.079 li
cp
ef
243.604 575.788 mo
265.749 575.788 li
265.749 597.935 li
243.604 597.935 li
243.604 575.788 li
243.604 575.788 li
cp
ef
243.604 531.496 mo
265.749 531.496 li
265.749 553.642 li
243.604 553.642 li
243.604 531.496 li
243.604 531.496 li
cp
ef
243.604 487.205 mo
265.749 487.205 li
265.749 509.352 li
243.604 509.352 li
243.604 487.205 li
243.604 487.205 li
cp
ef
243.604 442.915 mo
265.749 442.915 li
265.749 465.061 li
243.604 465.061 li
243.604 442.915 li
243.604 442.915 li
cp
ef
243.604 398.622 mo
265.749 398.622 li
265.749 420.769 li
243.604 420.769 li
243.604 398.622 li
243.604 398.622 li
cp
ef
243.604 354.332 mo
265.749 354.332 li
265.749 376.478 li
243.604 376.478 li
243.604 354.332 li
243.604 354.332 li
cp
ef
243.604 310.039 mo
265.749 310.039 li
265.749 332.186 li
243.604 332.186 li
243.604 310.039 li
243.604 310.039 li
cp
ef
243.604 265.749 mo
265.749 265.749 li
265.749 287.895 li
243.604 287.895 li
243.604 265.749 li
243.604 265.749 li
cp
ef
243.604 221.458 mo
265.749 221.458 li
265.749 243.603 li
243.604 243.603 li
243.604 221.458 li
243.604 221.458 li
cp
ef
243.604 177.166 mo
265.749 177.166 li
265.749 199.312 li
243.604 199.312 li
243.604 177.166 li
243.604 177.166 li
cp
ef
243.604 132.875 mo
265.749 132.875 li
265.749 155.022 li
243.604 155.022 li
243.604 132.875 li
243.604 132.875 li
cp
ef
243.604 88.583 mo
265.749 88.583 li
265.749 110.729 li
243.604 110.729 li
243.604 88.583 li
243.604 88.583 li
cp
ef
243.604 44.2923 mo
265.749 44.2923 li
265.749 66.4387 li
243.604 66.4387 li
243.604 44.2923 li
243.604 44.2923 li
cp
ef
243.604 0 mo
265.749 0 li
265.749 22.1463 li
243.604 22.1463 li
243.604 0 li
243.604 0 li
cp
ef
221.458 863.682 mo
243.604 863.682 li
243.604 885.828 li
221.458 885.828 li
221.458 863.682 li
221.458 863.682 li
cp
ef
221.458 819.391 mo
243.604 819.391 li
243.604 841.537 li
221.458 841.537 li
221.458 819.391 li
221.458 819.391 li
cp
ef
221.458 775.099 mo
243.604 775.099 li
243.604 797.245 li
221.458 797.245 li
221.458 775.099 li
221.458 775.099 li
cp
ef
221.458 730.808 mo
243.604 730.808 li
243.604 752.954 li
221.458 752.954 li
221.458 730.808 li
221.458 730.808 li
cp
ef
221.458 686.516 mo
243.604 686.516 li
243.604 708.662 li
221.458 708.662 li
221.458 686.516 li
221.458 686.516 li
cp
ef
221.458 642.225 mo
243.604 642.225 li
243.604 664.371 li
221.458 664.371 li
221.458 642.225 li
221.458 642.225 li
cp
ef
221.458 597.935 mo
243.604 597.935 li
243.604 620.081 li
221.458 620.081 li
221.458 597.935 li
221.458 597.935 li
cp
ef
221.458 553.642 mo
243.604 553.642 li
243.604 575.788 li
221.458 575.788 li
221.458 553.642 li
221.458 553.642 li
cp
ef
221.458 509.352 mo
243.604 509.352 li
243.604 531.498 li
221.458 531.498 li
221.458 509.352 li
221.458 509.352 li
cp
ef
221.458 465.059 mo
243.604 465.059 li
243.604 487.205 li
221.458 487.205 li
221.458 465.059 li
221.458 465.059 li
cp
ef
221.458 420.769 mo
243.604 420.769 li
243.604 442.915 li
221.458 442.915 li
221.458 420.769 li
221.458 420.769 li
cp
ef
221.458 376.476 mo
243.604 376.476 li
243.604 398.622 li
221.458 398.622 li
221.458 376.476 li
221.458 376.476 li
cp
ef
221.458 332.186 mo
243.604 332.186 li
243.604 354.332 li
221.458 354.332 li
221.458 332.186 li
221.458 332.186 li
cp
ef
221.458 287.895 mo
243.604 287.895 li
243.604 310.041 li
221.458 310.041 li
221.458 287.895 li
221.458 287.895 li
cp
ef
221.458 243.603 mo
243.604 243.603 li
243.604 265.749 li
221.458 265.749 li
221.458 243.603 li
221.458 243.603 li
cp
ef
221.458 199.312 mo
243.604 199.312 li
243.604 221.458 li
221.458 221.458 li
221.458 199.312 li
221.458 199.312 li
cp
ef
221.458 155.02 mo
243.604 155.02 li
243.604 177.166 li
221.458 177.166 li
221.458 155.02 li
221.458 155.02 li
cp
ef
221.458 110.729 mo
243.604 110.729 li
243.604 132.875 li
221.458 132.875 li
221.458 110.729 li
221.458 110.729 li
cp
ef
221.458 66.4387 mo
243.604 66.4387 li
243.604 88.5849 li
221.458 88.5849 li
221.458 66.4387 li
221.458 66.4387 li
cp
ef
221.458 22.1463 mo
243.604 22.1463 li
243.604 44.2923 li
221.458 44.2923 li
221.458 22.1463 li
221.458 22.1463 li
cp
ef
199.312 841.535 mo
221.457 841.535 li
221.457 863.682 li
199.312 863.682 li
199.312 841.535 li
199.312 841.535 li
cp
ef
199.312 797.245 mo
221.457 797.245 li
221.457 819.391 li
199.312 819.391 li
199.312 797.245 li
199.312 797.245 li
cp
ef
199.312 752.952 mo
221.457 752.952 li
221.457 775.101 li
199.312 775.101 li
199.312 752.952 li
199.312 752.952 li
cp
ef
199.312 708.662 mo
221.457 708.662 li
221.457 730.808 li
199.312 730.808 li
199.312 708.662 li
199.312 708.662 li
cp
ef
199.312 664.371 mo
221.457 664.371 li
221.457 686.518 li
199.312 686.518 li
199.312 664.371 li
199.312 664.371 li
cp
ef
199.312 620.079 mo
221.457 620.079 li
221.457 642.225 li
199.312 642.225 li
199.312 620.079 li
199.312 620.079 li
cp
ef
199.312 575.788 mo
221.457 575.788 li
221.457 597.935 li
199.312 597.935 li
199.312 575.788 li
199.312 575.788 li
cp
ef
199.312 531.496 mo
221.457 531.496 li
221.457 553.642 li
199.312 553.642 li
199.312 531.496 li
199.312 531.496 li
cp
ef
199.312 487.205 mo
221.457 487.205 li
221.457 509.352 li
199.312 509.352 li
199.312 487.205 li
199.312 487.205 li
cp
ef
199.312 442.915 mo
221.457 442.915 li
221.457 465.061 li
199.312 465.061 li
199.312 442.915 li
199.312 442.915 li
cp
ef
199.312 398.622 mo
221.457 398.622 li
221.457 420.769 li
199.312 420.769 li
199.312 398.622 li
199.312 398.622 li
cp
ef
199.312 354.332 mo
221.457 354.332 li
221.457 376.478 li
199.312 376.478 li
199.312 354.332 li
199.312 354.332 li
cp
ef
199.312 310.039 mo
221.457 310.039 li
221.457 332.186 li
199.312 332.186 li
199.312 310.039 li
199.312 310.039 li
cp
ef
199.312 265.749 mo
221.457 265.749 li
221.457 287.895 li
199.312 287.895 li
199.312 265.749 li
199.312 265.749 li
cp
ef
199.312 221.458 mo
221.457 221.458 li
221.457 243.603 li
199.312 243.603 li
199.312 221.458 li
199.312 221.458 li
cp
ef
199.312 177.166 mo
221.457 177.166 li
221.457 199.312 li
199.312 199.312 li
199.312 177.166 li
199.312 177.166 li
cp
ef
199.312 132.875 mo
221.457 132.875 li
221.457 155.022 li
199.312 155.022 li
199.312 132.875 li
199.312 132.875 li
cp
ef
199.312 88.583 mo
221.457 88.583 li
221.457 110.729 li
199.312 110.729 li
199.312 88.583 li
199.312 88.583 li
cp
ef
199.312 44.2923 mo
221.457 44.2923 li
221.457 66.4387 li
199.312 66.4387 li
199.312 44.2923 li
199.312 44.2923 li
cp
ef
199.312 0 mo
221.457 0 li
221.457 22.1463 li
199.312 22.1463 li
199.312 0 li
199.312 0 li
cp
ef
177.167 863.682 mo
199.312 863.682 li
199.312 885.828 li
177.167 885.828 li
177.167 863.682 li
177.167 863.682 li
cp
ef
177.167 819.391 mo
199.312 819.391 li
199.312 841.537 li
177.167 841.537 li
177.167 819.391 li
177.167 819.391 li
cp
ef
177.167 775.099 mo
199.312 775.099 li
199.312 797.245 li
177.167 797.245 li
177.167 775.099 li
177.167 775.099 li
cp
ef
177.167 730.808 mo
199.312 730.808 li
199.312 752.954 li
177.167 752.954 li
177.167 730.808 li
177.167 730.808 li
cp
ef
177.167 686.516 mo
199.312 686.516 li
199.312 708.662 li
177.167 708.662 li
177.167 686.516 li
177.167 686.516 li
cp
ef
177.167 642.225 mo
199.312 642.225 li
199.312 664.371 li
177.167 664.371 li
177.167 642.225 li
177.167 642.225 li
cp
ef
177.167 597.935 mo
199.312 597.935 li
199.312 620.081 li
177.167 620.081 li
177.167 597.935 li
177.167 597.935 li
cp
ef
177.167 553.642 mo
199.312 553.642 li
199.312 575.788 li
177.167 575.788 li
177.167 553.642 li
177.167 553.642 li
cp
ef
177.167 509.352 mo
199.312 509.352 li
199.312 531.498 li
177.167 531.498 li
177.167 509.352 li
177.167 509.352 li
cp
ef
177.167 465.059 mo
199.312 465.059 li
199.312 487.205 li
177.167 487.205 li
177.167 465.059 li
177.167 465.059 li
cp
ef
177.167 420.769 mo
199.312 420.769 li
199.312 442.915 li
177.167 442.915 li
177.167 420.769 li
177.167 420.769 li
cp
ef
177.167 376.476 mo
199.312 376.476 li
199.312 398.622 li
177.167 398.622 li
177.167 376.476 li
177.167 376.476 li
cp
ef
177.167 332.186 mo
199.312 332.186 li
199.312 354.332 li
177.167 354.332 li
177.167 332.186 li
177.167 332.186 li
cp
ef
177.167 287.895 mo
199.312 287.895 li
199.312 310.041 li
177.167 310.041 li
177.167 287.895 li
177.167 287.895 li
cp
ef
177.167 243.603 mo
199.312 243.603 li
199.312 265.749 li
177.167 265.749 li
177.167 243.603 li
177.167 243.603 li
cp
ef
177.167 199.312 mo
199.312 199.312 li
199.312 221.458 li
177.167 221.458 li
177.167 199.312 li
177.167 199.312 li
cp
ef
177.167 155.02 mo
199.312 155.02 li
199.312 177.166 li
177.167 177.166 li
177.167 155.02 li
177.167 155.02 li
cp
ef
177.167 110.729 mo
199.312 110.729 li
199.312 132.875 li
177.167 132.875 li
177.167 110.729 li
177.167 110.729 li
cp
ef
177.167 66.4387 mo
199.312 66.4387 li
199.312 88.5849 li
177.167 88.5849 li
177.167 66.4387 li
177.167 66.4387 li
cp
ef
177.167 22.1463 mo
199.312 22.1463 li
199.312 44.2923 li
177.167 44.2923 li
177.167 22.1463 li
177.167 22.1463 li
cp
ef
332.187 841.535 mo
354.331 841.535 li
354.331 863.682 li
332.187 863.682 li
332.187 841.535 li
332.187 841.535 li
cp
ef
332.187 797.245 mo
354.331 797.245 li
354.331 819.391 li
332.187 819.391 li
332.187 797.245 li
332.187 797.245 li
cp
ef
332.187 752.952 mo
354.331 752.952 li
354.331 775.101 li
332.187 775.101 li
332.187 752.952 li
332.187 752.952 li
cp
ef
332.187 708.662 mo
354.331 708.662 li
354.331 730.808 li
332.187 730.808 li
332.187 708.662 li
332.187 708.662 li
cp
ef
332.187 664.371 mo
354.331 664.371 li
354.331 686.518 li
332.187 686.518 li
332.187 664.371 li
332.187 664.371 li
cp
ef
332.187 620.079 mo
354.331 620.079 li
354.331 642.225 li
332.187 642.225 li
332.187 620.079 li
332.187 620.079 li
cp
ef
332.187 575.788 mo
354.331 575.788 li
354.331 597.935 li
332.187 597.935 li
332.187 575.788 li
332.187 575.788 li
cp
ef
332.187 531.496 mo
354.331 531.496 li
354.331 553.642 li
332.187 553.642 li
332.187 531.496 li
332.187 531.496 li
cp
ef
332.187 487.205 mo
354.331 487.205 li
354.331 509.352 li
332.187 509.352 li
332.187 487.205 li
332.187 487.205 li
cp
ef
332.187 442.915 mo
354.331 442.915 li
354.331 465.061 li
332.187 465.061 li
332.187 442.915 li
332.187 442.915 li
cp
ef
332.187 398.622 mo
354.331 398.622 li
354.331 420.769 li
332.187 420.769 li
332.187 398.622 li
332.187 398.622 li
cp
ef
332.187 354.332 mo
354.331 354.332 li
354.331 376.478 li
332.187 376.478 li
332.187 354.332 li
332.187 354.332 li
cp
ef
332.187 310.039 mo
354.331 310.039 li
354.331 332.186 li
332.187 332.186 li
332.187 310.039 li
332.187 310.039 li
cp
ef
332.187 265.749 mo
354.331 265.749 li
354.331 287.895 li
332.187 287.895 li
332.187 265.749 li
332.187 265.749 li
cp
ef
332.187 221.458 mo
354.331 221.458 li
354.331 243.603 li
332.187 243.603 li
332.187 221.458 li
332.187 221.458 li
cp
ef
332.187 177.166 mo
354.331 177.166 li
354.331 199.312 li
332.187 199.312 li
332.187 177.166 li
332.187 177.166 li
cp
ef
332.187 132.875 mo
354.331 132.875 li
354.331 155.022 li
332.187 155.022 li
332.187 132.875 li
332.187 132.875 li
cp
ef
332.187 88.583 mo
354.331 88.583 li
354.331 110.729 li
332.187 110.729 li
332.187 88.583 li
332.187 88.583 li
cp
ef
332.187 44.2923 mo
354.331 44.2923 li
354.331 66.4387 li
332.187 66.4387 li
332.187 44.2923 li
332.187 44.2923 li
cp
ef
332.187 0 mo
354.331 0 li
354.331 22.1463 li
332.187 22.1463 li
332.187 0 li
332.187 0 li
cp
ef
310.041 863.682 mo
332.186 863.682 li
332.186 885.828 li
310.041 885.828 li
310.041 863.682 li
310.041 863.682 li
cp
ef
310.041 819.391 mo
332.186 819.391 li
332.186 841.537 li
310.041 841.537 li
310.041 819.391 li
310.041 819.391 li
cp
ef
310.041 775.099 mo
332.186 775.099 li
332.186 797.245 li
310.041 797.245 li
310.041 775.099 li
310.041 775.099 li
cp
ef
310.041 730.808 mo
332.186 730.808 li
332.186 752.954 li
310.041 752.954 li
310.041 730.808 li
310.041 730.808 li
cp
ef
310.041 686.516 mo
332.186 686.516 li
332.186 708.662 li
310.041 708.662 li
310.041 686.516 li
310.041 686.516 li
cp
ef
310.041 642.225 mo
332.186 642.225 li
332.186 664.371 li
310.041 664.371 li
310.041 642.225 li
310.041 642.225 li
cp
ef
310.041 597.935 mo
332.186 597.935 li
332.186 620.081 li
310.041 620.081 li
310.041 597.935 li
310.041 597.935 li
cp
ef
310.041 553.642 mo
332.186 553.642 li
332.186 575.788 li
310.041 575.788 li
310.041 553.642 li
310.041 553.642 li
cp
ef
310.041 509.352 mo
332.186 509.352 li
332.186 531.498 li
310.041 531.498 li
310.041 509.352 li
310.041 509.352 li
cp
ef
310.041 465.059 mo
332.186 465.059 li
332.186 487.205 li
310.041 487.205 li
310.041 465.059 li
310.041 465.059 li
cp
ef
310.041 420.769 mo
332.186 420.769 li
332.186 442.915 li
310.041 442.915 li
310.041 420.769 li
310.041 420.769 li
cp
ef
310.041 376.476 mo
332.186 376.476 li
332.186 398.622 li
310.041 398.622 li
310.041 376.476 li
310.041 376.476 li
cp
ef
310.041 332.186 mo
332.186 332.186 li
332.186 354.332 li
310.041 354.332 li
310.041 332.186 li
310.041 332.186 li
cp
ef
310.041 287.895 mo
332.186 287.895 li
332.186 310.041 li
310.041 310.041 li
310.041 287.895 li
310.041 287.895 li
cp
ef
310.041 243.603 mo
332.186 243.603 li
332.186 265.749 li
310.041 265.749 li
310.041 243.603 li
310.041 243.603 li
cp
ef
310.041 199.312 mo
332.186 199.312 li
332.186 221.458 li
310.041 221.458 li
310.041 199.312 li
310.041 199.312 li
cp
ef
310.041 155.02 mo
332.186 155.02 li
332.186 177.166 li
310.041 177.166 li
310.041 155.02 li
310.041 155.02 li
cp
ef
310.041 110.729 mo
332.186 110.729 li
332.186 132.875 li
310.041 132.875 li
310.041 110.729 li
310.041 110.729 li
cp
ef
310.041 66.4387 mo
332.186 66.4387 li
332.186 88.5849 li
310.041 88.5849 li
310.041 66.4387 li
310.041 66.4387 li
cp
ef
310.041 22.1463 mo
332.186 22.1463 li
332.186 44.2923 li
310.041 44.2923 li
310.041 22.1463 li
310.041 22.1463 li
cp
ef
287.895 841.535 mo
310.04 841.535 li
310.04 863.682 li
287.895 863.682 li
287.895 841.535 li
287.895 841.535 li
cp
ef
287.895 797.245 mo
310.04 797.245 li
310.04 819.391 li
287.895 819.391 li
287.895 797.245 li
287.895 797.245 li
cp
ef
287.895 752.952 mo
310.04 752.952 li
310.04 775.101 li
287.895 775.101 li
287.895 752.952 li
287.895 752.952 li
cp
ef
287.895 708.662 mo
310.04 708.662 li
310.04 730.808 li
287.895 730.808 li
287.895 708.662 li
287.895 708.662 li
cp
ef
287.895 664.371 mo
310.04 664.371 li
310.04 686.518 li
287.895 686.518 li
287.895 664.371 li
287.895 664.371 li
cp
ef
287.895 620.079 mo
310.04 620.079 li
310.04 642.225 li
287.895 642.225 li
287.895 620.079 li
287.895 620.079 li
cp
ef
287.895 575.788 mo
310.04 575.788 li
310.04 597.935 li
287.895 597.935 li
287.895 575.788 li
287.895 575.788 li
cp
ef
287.895 531.496 mo
310.04 531.496 li
310.04 553.642 li
287.895 553.642 li
287.895 531.496 li
287.895 531.496 li
cp
ef
287.895 487.205 mo
310.04 487.205 li
310.04 509.352 li
287.895 509.352 li
287.895 487.205 li
287.895 487.205 li
cp
ef
287.895 442.915 mo
310.04 442.915 li
310.04 465.061 li
287.895 465.061 li
287.895 442.915 li
287.895 442.915 li
cp
ef
287.895 398.622 mo
310.04 398.622 li
310.04 420.769 li
287.895 420.769 li
287.895 398.622 li
287.895 398.622 li
cp
ef
287.895 354.332 mo
310.04 354.332 li
310.04 376.478 li
287.895 376.478 li
287.895 354.332 li
287.895 354.332 li
cp
ef
287.895 310.039 mo
310.04 310.039 li
310.04 332.186 li
287.895 332.186 li
287.895 310.039 li
287.895 310.039 li
cp
ef
287.895 265.749 mo
310.04 265.749 li
310.04 287.895 li
287.895 287.895 li
287.895 265.749 li
287.895 265.749 li
cp
ef
287.895 221.458 mo
310.04 221.458 li
310.04 243.603 li
287.895 243.603 li
287.895 221.458 li
287.895 221.458 li
cp
ef
287.895 177.166 mo
310.04 177.166 li
310.04 199.312 li
287.895 199.312 li
287.895 177.166 li
287.895 177.166 li
cp
ef
287.895 132.875 mo
310.04 132.875 li
310.04 155.022 li
287.895 155.022 li
287.895 132.875 li
287.895 132.875 li
cp
ef
287.895 88.583 mo
310.04 88.583 li
310.04 110.729 li
287.895 110.729 li
287.895 88.583 li
287.895 88.583 li
cp
ef
287.895 44.2923 mo
310.04 44.2923 li
310.04 66.4387 li
287.895 66.4387 li
287.895 44.2923 li
287.895 44.2923 li
cp
ef
287.895 0 mo
310.04 0 li
310.04 22.1463 li
287.895 22.1463 li
287.895 0 li
287.895 0 li
cp
ef
265.75 863.682 mo
287.895 863.682 li
287.895 885.828 li
265.75 885.828 li
265.75 863.682 li
265.75 863.682 li
cp
ef
265.75 819.391 mo
287.895 819.391 li
287.895 841.537 li
265.75 841.537 li
265.75 819.391 li
265.75 819.391 li
cp
ef
265.75 775.099 mo
287.895 775.099 li
287.895 797.245 li
265.75 797.245 li
265.75 775.099 li
265.75 775.099 li
cp
ef
265.75 730.808 mo
287.895 730.808 li
287.895 752.954 li
265.75 752.954 li
265.75 730.808 li
265.75 730.808 li
cp
ef
265.75 686.516 mo
287.895 686.516 li
287.895 708.662 li
265.75 708.662 li
265.75 686.516 li
265.75 686.516 li
cp
ef
265.75 642.225 mo
287.895 642.225 li
287.895 664.371 li
265.75 664.371 li
265.75 642.225 li
265.75 642.225 li
cp
ef
265.75 597.935 mo
287.895 597.935 li
287.895 620.081 li
265.75 620.081 li
265.75 597.935 li
265.75 597.935 li
cp
ef
265.75 553.642 mo
287.895 553.642 li
287.895 575.788 li
265.75 575.788 li
265.75 553.642 li
265.75 553.642 li
cp
ef
265.75 509.352 mo
287.895 509.352 li
287.895 531.498 li
265.75 531.498 li
265.75 509.352 li
265.75 509.352 li
cp
ef
265.75 465.059 mo
287.895 465.059 li
287.895 487.205 li
265.75 487.205 li
265.75 465.059 li
265.75 465.059 li
cp
ef
265.75 420.769 mo
287.895 420.769 li
287.895 442.915 li
265.75 442.915 li
265.75 420.769 li
265.75 420.769 li
cp
ef
265.75 376.476 mo
287.895 376.476 li
287.895 398.622 li
265.75 398.622 li
265.75 376.476 li
265.75 376.476 li
cp
ef
265.75 332.186 mo
287.895 332.186 li
287.895 354.332 li
265.75 354.332 li
265.75 332.186 li
265.75 332.186 li
cp
ef
265.75 287.895 mo
287.895 287.895 li
287.895 310.041 li
265.75 310.041 li
265.75 287.895 li
265.75 287.895 li
cp
ef
265.75 243.603 mo
287.895 243.603 li
287.895 265.749 li
265.75 265.749 li
265.75 243.603 li
265.75 243.603 li
cp
ef
265.75 199.312 mo
287.895 199.312 li
287.895 221.458 li
265.75 221.458 li
265.75 199.312 li
265.75 199.312 li
cp
ef
265.75 155.02 mo
287.895 155.02 li
287.895 177.166 li
265.75 177.166 li
265.75 155.02 li
265.75 155.02 li
cp
ef
265.75 110.729 mo
287.895 110.729 li
287.895 132.875 li
265.75 132.875 li
265.75 110.729 li
265.75 110.729 li
cp
ef
265.75 66.4387 mo
287.895 66.4387 li
287.895 88.5849 li
265.75 88.5849 li
265.75 66.4387 li
265.75 66.4387 li
cp
ef
265.75 22.1463 mo
287.895 22.1463 li
287.895 44.2923 li
265.75 44.2923 li
265.75 22.1463 li
265.75 22.1463 li
cp
ef
420.769 841.535 mo
442.914 841.535 li
442.914 863.682 li
420.769 863.682 li
420.769 841.535 li
420.769 841.535 li
cp
ef
420.769 797.245 mo
442.914 797.245 li
442.914 819.391 li
420.769 819.391 li
420.769 797.245 li
420.769 797.245 li
cp
ef
420.769 752.952 mo
442.914 752.952 li
442.914 775.101 li
420.769 775.101 li
420.769 752.952 li
420.769 752.952 li
cp
ef
420.769 708.662 mo
442.914 708.662 li
442.914 730.808 li
420.769 730.808 li
420.769 708.662 li
420.769 708.662 li
cp
ef
420.769 664.371 mo
442.914 664.371 li
442.914 686.518 li
420.769 686.518 li
420.769 664.371 li
420.769 664.371 li
cp
ef
420.769 620.079 mo
442.914 620.079 li
442.914 642.225 li
420.769 642.225 li
420.769 620.079 li
420.769 620.079 li
cp
ef
420.769 575.788 mo
442.914 575.788 li
442.914 597.935 li
420.769 597.935 li
420.769 575.788 li
420.769 575.788 li
cp
ef
420.769 531.496 mo
442.914 531.496 li
442.914 553.642 li
420.769 553.642 li
420.769 531.496 li
420.769 531.496 li
cp
ef
420.769 487.205 mo
442.914 487.205 li
442.914 509.352 li
420.769 509.352 li
420.769 487.205 li
420.769 487.205 li
cp
ef
420.769 442.915 mo
442.914 442.915 li
442.914 465.061 li
420.769 465.061 li
420.769 442.915 li
420.769 442.915 li
cp
ef
420.769 398.622 mo
442.914 398.622 li
442.914 420.769 li
420.769 420.769 li
420.769 398.622 li
420.769 398.622 li
cp
ef
420.769 354.332 mo
442.914 354.332 li
442.914 376.478 li
420.769 376.478 li
420.769 354.332 li
420.769 354.332 li
cp
ef
420.769 310.039 mo
442.914 310.039 li
442.914 332.186 li
420.769 332.186 li
420.769 310.039 li
420.769 310.039 li
cp
ef
420.769 265.749 mo
442.914 265.749 li
442.914 287.895 li
420.769 287.895 li
420.769 265.749 li
420.769 265.749 li
cp
ef
420.769 221.458 mo
442.914 221.458 li
442.914 243.603 li
420.769 243.603 li
420.769 221.458 li
420.769 221.458 li
cp
ef
420.769 177.166 mo
442.914 177.166 li
442.914 199.312 li
420.769 199.312 li
420.769 177.166 li
420.769 177.166 li
cp
ef
420.769 132.875 mo
442.914 132.875 li
442.914 155.022 li
420.769 155.022 li
420.769 132.875 li
420.769 132.875 li
cp
ef
420.769 88.583 mo
442.914 88.583 li
442.914 110.729 li
420.769 110.729 li
420.769 88.583 li
420.769 88.583 li
cp
ef
420.769 44.2923 mo
442.914 44.2923 li
442.914 66.4387 li
420.769 66.4387 li
420.769 44.2923 li
420.769 44.2923 li
cp
ef
420.769 0 mo
442.914 0 li
442.914 22.1463 li
420.769 22.1463 li
420.769 0 li
420.769 0 li
cp
ef
398.622 863.682 mo
420.768 863.682 li
420.768 885.828 li
398.622 885.828 li
398.622 863.682 li
398.622 863.682 li
cp
ef
398.622 819.391 mo
420.768 819.391 li
420.768 841.537 li
398.622 841.537 li
398.622 819.391 li
398.622 819.391 li
cp
ef
398.622 775.099 mo
420.768 775.099 li
420.768 797.245 li
398.622 797.245 li
398.622 775.099 li
398.622 775.099 li
cp
ef
398.622 730.808 mo
420.768 730.808 li
420.768 752.954 li
398.622 752.954 li
398.622 730.808 li
398.622 730.808 li
cp
ef
398.622 686.516 mo
420.768 686.516 li
420.768 708.662 li
398.622 708.662 li
398.622 686.516 li
398.622 686.516 li
cp
ef
398.622 642.225 mo
420.768 642.225 li
420.768 664.371 li
398.622 664.371 li
398.622 642.225 li
398.622 642.225 li
cp
ef
398.622 597.935 mo
420.768 597.935 li
420.768 620.081 li
398.622 620.081 li
398.622 597.935 li
398.622 597.935 li
cp
ef
398.622 553.642 mo
420.768 553.642 li
420.768 575.788 li
398.622 575.788 li
398.622 553.642 li
398.622 553.642 li
cp
ef
398.622 509.352 mo
420.768 509.352 li
420.768 531.498 li
398.622 531.498 li
398.622 509.352 li
398.622 509.352 li
cp
ef
398.622 465.059 mo
420.768 465.059 li
420.768 487.205 li
398.622 487.205 li
398.622 465.059 li
398.622 465.059 li
cp
ef
398.622 420.769 mo
420.768 420.769 li
420.768 442.915 li
398.622 442.915 li
398.622 420.769 li
398.622 420.769 li
cp
ef
398.622 376.476 mo
420.768 376.476 li
420.768 398.622 li
398.622 398.622 li
398.622 376.476 li
398.622 376.476 li
cp
ef
398.622 332.186 mo
420.768 332.186 li
420.768 354.332 li
398.622 354.332 li
398.622 332.186 li
398.622 332.186 li
cp
ef
398.622 287.895 mo
420.768 287.895 li
420.768 310.041 li
398.622 310.041 li
398.622 287.895 li
398.622 287.895 li
cp
ef
398.622 243.603 mo
420.768 243.603 li
420.768 265.749 li
398.622 265.749 li
398.622 243.603 li
398.622 243.603 li
cp
ef
398.622 199.312 mo
420.768 199.312 li
420.768 221.458 li
398.622 221.458 li
398.622 199.312 li
398.622 199.312 li
cp
ef
398.622 155.02 mo
420.768 155.02 li
420.768 177.166 li
398.622 177.166 li
398.622 155.02 li
398.622 155.02 li
cp
ef
398.622 110.729 mo
420.768 110.729 li
420.768 132.875 li
398.622 132.875 li
398.622 110.729 li
398.622 110.729 li
cp
ef
398.622 66.4387 mo
420.768 66.4387 li
420.768 88.5849 li
398.622 88.5849 li
398.622 66.4387 li
398.622 66.4387 li
cp
ef
398.622 22.1463 mo
420.768 22.1463 li
420.768 44.2923 li
398.622 44.2923 li
398.622 22.1463 li
398.622 22.1463 li
cp
ef
376.477 841.535 mo
398.622 841.535 li
398.622 863.682 li
376.477 863.682 li
376.477 841.535 li
376.477 841.535 li
cp
ef
376.477 797.245 mo
398.622 797.245 li
398.622 819.391 li
376.477 819.391 li
376.477 797.245 li
376.477 797.245 li
cp
ef
376.477 752.952 mo
398.622 752.952 li
398.622 775.101 li
376.477 775.101 li
376.477 752.952 li
376.477 752.952 li
cp
ef
376.477 708.662 mo
398.622 708.662 li
398.622 730.808 li
376.477 730.808 li
376.477 708.662 li
376.477 708.662 li
cp
ef
376.477 664.371 mo
398.622 664.371 li
398.622 686.518 li
376.477 686.518 li
376.477 664.371 li
376.477 664.371 li
cp
ef
376.477 620.079 mo
398.622 620.079 li
398.622 642.225 li
376.477 642.225 li
376.477 620.079 li
376.477 620.079 li
cp
ef
376.477 575.788 mo
398.622 575.788 li
398.622 597.935 li
376.477 597.935 li
376.477 575.788 li
376.477 575.788 li
cp
ef
376.477 531.496 mo
398.622 531.496 li
398.622 553.642 li
376.477 553.642 li
376.477 531.496 li
376.477 531.496 li
cp
ef
376.477 487.205 mo
398.622 487.205 li
398.622 509.352 li
376.477 509.352 li
376.477 487.205 li
376.477 487.205 li
cp
ef
376.477 442.915 mo
398.622 442.915 li
398.622 465.061 li
376.477 465.061 li
376.477 442.915 li
376.477 442.915 li
cp
ef
376.477 398.622 mo
398.622 398.622 li
398.622 420.769 li
376.477 420.769 li
376.477 398.622 li
376.477 398.622 li
cp
ef
376.477 354.332 mo
398.622 354.332 li
398.622 376.478 li
376.477 376.478 li
376.477 354.332 li
376.477 354.332 li
cp
ef
376.477 310.039 mo
398.622 310.039 li
398.622 332.186 li
376.477 332.186 li
376.477 310.039 li
376.477 310.039 li
cp
ef
376.477 265.749 mo
398.622 265.749 li
398.622 287.895 li
376.477 287.895 li
376.477 265.749 li
376.477 265.749 li
cp
ef
376.477 221.458 mo
398.622 221.458 li
398.622 243.603 li
376.477 243.603 li
376.477 221.458 li
376.477 221.458 li
cp
ef
376.477 177.166 mo
398.622 177.166 li
398.622 199.312 li
376.477 199.312 li
376.477 177.166 li
376.477 177.166 li
cp
ef
376.477 132.875 mo
398.622 132.875 li
398.622 155.022 li
376.477 155.022 li
376.477 132.875 li
376.477 132.875 li
cp
ef
376.477 88.583 mo
398.622 88.583 li
398.622 110.729 li
376.477 110.729 li
376.477 88.583 li
376.477 88.583 li
cp
ef
376.477 44.2923 mo
398.622 44.2923 li
398.622 66.4387 li
376.477 66.4387 li
376.477 44.2923 li
376.477 44.2923 li
cp
ef
376.477 0 mo
398.622 0 li
398.622 22.1463 li
376.477 22.1463 li
376.477 0 li
376.477 0 li
cp
ef
354.331 863.682 mo
376.476 863.682 li
376.476 885.828 li
354.331 885.828 li
354.331 863.682 li
354.331 863.682 li
cp
ef
354.331 819.391 mo
376.476 819.391 li
376.476 841.537 li
354.331 841.537 li
354.331 819.391 li
354.331 819.391 li
cp
ef
354.331 775.099 mo
376.476 775.099 li
376.476 797.245 li
354.331 797.245 li
354.331 775.099 li
354.331 775.099 li
cp
ef
354.331 730.808 mo
376.476 730.808 li
376.476 752.954 li
354.331 752.954 li
354.331 730.808 li
354.331 730.808 li
cp
ef
354.331 686.516 mo
376.476 686.516 li
376.476 708.662 li
354.331 708.662 li
354.331 686.516 li
354.331 686.516 li
cp
ef
354.331 642.225 mo
376.476 642.225 li
376.476 664.371 li
354.331 664.371 li
354.331 642.225 li
354.331 642.225 li
cp
ef
354.331 597.935 mo
376.476 597.935 li
376.476 620.081 li
354.331 620.081 li
354.331 597.935 li
354.331 597.935 li
cp
ef
354.331 553.642 mo
376.476 553.642 li
376.476 575.788 li
354.331 575.788 li
354.331 553.642 li
354.331 553.642 li
cp
ef
354.331 509.352 mo
376.476 509.352 li
376.476 531.498 li
354.331 531.498 li
354.331 509.352 li
354.331 509.352 li
cp
ef
354.331 465.059 mo
376.476 465.059 li
376.476 487.205 li
354.331 487.205 li
354.331 465.059 li
354.331 465.059 li
cp
ef
354.331 420.769 mo
376.476 420.769 li
376.476 442.915 li
354.331 442.915 li
354.331 420.769 li
354.331 420.769 li
cp
ef
354.331 376.476 mo
376.476 376.476 li
376.476 398.622 li
354.331 398.622 li
354.331 376.476 li
354.331 376.476 li
cp
ef
354.331 332.186 mo
376.476 332.186 li
376.476 354.332 li
354.331 354.332 li
354.331 332.186 li
354.331 332.186 li
cp
ef
354.331 287.895 mo
376.476 287.895 li
376.476 310.041 li
354.331 310.041 li
354.331 287.895 li
354.331 287.895 li
cp
ef
354.331 243.603 mo
376.476 243.603 li
376.476 265.749 li
354.331 265.749 li
354.331 243.603 li
354.331 243.603 li
cp
ef
354.331 199.312 mo
376.476 199.312 li
376.476 221.458 li
354.331 221.458 li
354.331 199.312 li
354.331 199.312 li
cp
ef
354.331 155.02 mo
376.476 155.02 li
376.476 177.166 li
354.331 177.166 li
354.331 155.02 li
354.331 155.02 li
cp
ef
354.331 110.729 mo
376.476 110.729 li
376.476 132.875 li
354.331 132.875 li
354.331 110.729 li
354.331 110.729 li
cp
ef
354.331 66.4387 mo
376.476 66.4387 li
376.476 88.5849 li
354.331 88.5849 li
354.331 66.4387 li
354.331 66.4387 li
cp
ef
354.331 22.1463 mo
376.476 22.1463 li
376.476 44.2923 li
354.331 44.2923 li
354.331 22.1463 li
354.331 22.1463 li
cp
ef
509.351 841.535 mo
531.496 841.535 li
531.496 863.682 li
509.351 863.682 li
509.351 841.535 li
509.351 841.535 li
cp
ef
509.351 797.245 mo
531.496 797.245 li
531.496 819.391 li
509.351 819.391 li
509.351 797.245 li
509.351 797.245 li
cp
ef
509.351 752.952 mo
531.496 752.952 li
531.496 775.101 li
509.351 775.101 li
509.351 752.952 li
509.351 752.952 li
cp
ef
509.351 708.662 mo
531.496 708.662 li
531.496 730.808 li
509.351 730.808 li
509.351 708.662 li
509.351 708.662 li
cp
ef
509.351 664.371 mo
531.496 664.371 li
531.496 686.518 li
509.351 686.518 li
509.351 664.371 li
509.351 664.371 li
cp
ef
509.351 620.079 mo
531.496 620.079 li
531.496 642.225 li
509.351 642.225 li
509.351 620.079 li
509.351 620.079 li
cp
ef
509.351 575.788 mo
531.496 575.788 li
531.496 597.935 li
509.351 597.935 li
509.351 575.788 li
509.351 575.788 li
cp
ef
509.351 531.496 mo
531.496 531.496 li
531.496 553.642 li
509.351 553.642 li
509.351 531.496 li
509.351 531.496 li
cp
ef
509.351 487.205 mo
531.496 487.205 li
531.496 509.352 li
509.351 509.352 li
509.351 487.205 li
509.351 487.205 li
cp
ef
509.351 442.915 mo
531.496 442.915 li
531.496 465.061 li
509.351 465.061 li
509.351 442.915 li
509.351 442.915 li
cp
ef
509.351 398.622 mo
531.496 398.622 li
531.496 420.769 li
509.351 420.769 li
509.351 398.622 li
509.351 398.622 li
cp
ef
509.351 354.332 mo
531.496 354.332 li
531.496 376.478 li
509.351 376.478 li
509.351 354.332 li
509.351 354.332 li
cp
ef
509.351 310.039 mo
531.496 310.039 li
531.496 332.186 li
509.351 332.186 li
509.351 310.039 li
509.351 310.039 li
cp
ef
509.351 265.749 mo
531.496 265.749 li
531.496 287.895 li
509.351 287.895 li
509.351 265.749 li
509.351 265.749 li
cp
ef
509.351 221.458 mo
531.496 221.458 li
531.496 243.603 li
509.351 243.603 li
509.351 221.458 li
509.351 221.458 li
cp
ef
509.351 177.166 mo
531.496 177.166 li
531.496 199.312 li
509.351 199.312 li
509.351 177.166 li
509.351 177.166 li
cp
ef
509.351 132.875 mo
531.496 132.875 li
531.496 155.022 li
509.351 155.022 li
509.351 132.875 li
509.351 132.875 li
cp
ef
509.351 88.583 mo
531.496 88.583 li
531.496 110.729 li
509.351 110.729 li
509.351 88.583 li
509.351 88.583 li
cp
ef
509.351 44.2923 mo
531.496 44.2923 li
531.496 66.4387 li
509.351 66.4387 li
509.351 44.2923 li
509.351 44.2923 li
cp
ef
509.351 0 mo
531.496 0 li
531.496 22.1463 li
509.351 22.1463 li
509.351 0 li
509.351 0 li
cp
ef
487.205 863.682 mo
509.351 863.682 li
509.351 885.828 li
487.205 885.828 li
487.205 863.682 li
487.205 863.682 li
cp
ef
487.205 819.391 mo
509.351 819.391 li
509.351 841.537 li
487.205 841.537 li
487.205 819.391 li
487.205 819.391 li
cp
ef
487.205 775.099 mo
509.351 775.099 li
509.351 797.245 li
487.205 797.245 li
487.205 775.099 li
487.205 775.099 li
cp
ef
487.205 730.808 mo
509.351 730.808 li
509.351 752.954 li
487.205 752.954 li
487.205 730.808 li
487.205 730.808 li
cp
ef
487.205 686.516 mo
509.351 686.516 li
509.351 708.662 li
487.205 708.662 li
487.205 686.516 li
487.205 686.516 li
cp
ef
487.205 642.225 mo
509.351 642.225 li
509.351 664.371 li
487.205 664.371 li
487.205 642.225 li
487.205 642.225 li
cp
ef
487.205 597.935 mo
509.351 597.935 li
509.351 620.081 li
487.205 620.081 li
487.205 597.935 li
487.205 597.935 li
cp
ef
487.205 553.642 mo
509.351 553.642 li
509.351 575.788 li
487.205 575.788 li
487.205 553.642 li
487.205 553.642 li
cp
ef
487.205 509.352 mo
509.351 509.352 li
509.351 531.498 li
487.205 531.498 li
487.205 509.352 li
487.205 509.352 li
cp
ef
487.205 465.059 mo
509.351 465.059 li
509.351 487.205 li
487.205 487.205 li
487.205 465.059 li
487.205 465.059 li
cp
ef
487.205 420.769 mo
509.351 420.769 li
509.351 442.915 li
487.205 442.915 li
487.205 420.769 li
487.205 420.769 li
cp
ef
487.205 376.476 mo
509.351 376.476 li
509.351 398.622 li
487.205 398.622 li
487.205 376.476 li
487.205 376.476 li
cp
ef
487.205 332.186 mo
509.351 332.186 li
509.351 354.332 li
487.205 354.332 li
487.205 332.186 li
487.205 332.186 li
cp
ef
487.205 287.895 mo
509.351 287.895 li
509.351 310.041 li
487.205 310.041 li
487.205 287.895 li
487.205 287.895 li
cp
ef
487.205 243.603 mo
509.351 243.603 li
509.351 265.749 li
487.205 265.749 li
487.205 243.603 li
487.205 243.603 li
cp
ef
487.205 199.312 mo
509.351 199.312 li
509.351 221.458 li
487.205 221.458 li
487.205 199.312 li
487.205 199.312 li
cp
ef
487.205 155.02 mo
509.351 155.02 li
509.351 177.166 li
487.205 177.166 li
487.205 155.02 li
487.205 155.02 li
cp
ef
487.205 110.729 mo
509.351 110.729 li
509.351 132.875 li
487.205 132.875 li
487.205 110.729 li
487.205 110.729 li
cp
ef
487.205 66.4387 mo
509.351 66.4387 li
509.351 88.5849 li
487.205 88.5849 li
487.205 66.4387 li
487.205 66.4387 li
cp
ef
487.205 22.1463 mo
509.351 22.1463 li
509.351 44.2923 li
487.205 44.2923 li
487.205 22.1463 li
487.205 22.1463 li
cp
ef
465.059 841.535 mo
487.204 841.535 li
487.204 863.682 li
465.059 863.682 li
465.059 841.535 li
465.059 841.535 li
cp
ef
465.059 797.245 mo
487.204 797.245 li
487.204 819.391 li
465.059 819.391 li
465.059 797.245 li
465.059 797.245 li
cp
ef
465.059 752.952 mo
487.204 752.952 li
487.204 775.101 li
465.059 775.101 li
465.059 752.952 li
465.059 752.952 li
cp
ef
465.059 708.662 mo
487.204 708.662 li
487.204 730.808 li
465.059 730.808 li
465.059 708.662 li
465.059 708.662 li
cp
ef
465.059 664.371 mo
487.204 664.371 li
487.204 686.518 li
465.059 686.518 li
465.059 664.371 li
465.059 664.371 li
cp
ef
465.059 620.079 mo
487.204 620.079 li
487.204 642.225 li
465.059 642.225 li
465.059 620.079 li
465.059 620.079 li
cp
ef
465.059 575.788 mo
487.204 575.788 li
487.204 597.935 li
465.059 597.935 li
465.059 575.788 li
465.059 575.788 li
cp
ef
465.059 531.496 mo
487.204 531.496 li
487.204 553.642 li
465.059 553.642 li
465.059 531.496 li
465.059 531.496 li
cp
ef
465.059 487.205 mo
487.204 487.205 li
487.204 509.352 li
465.059 509.352 li
465.059 487.205 li
465.059 487.205 li
cp
ef
465.059 442.915 mo
487.204 442.915 li
487.204 465.061 li
465.059 465.061 li
465.059 442.915 li
465.059 442.915 li
cp
ef
465.059 398.622 mo
487.204 398.622 li
487.204 420.769 li
465.059 420.769 li
465.059 398.622 li
465.059 398.622 li
cp
ef
465.059 354.332 mo
487.204 354.332 li
487.204 376.478 li
465.059 376.478 li
465.059 354.332 li
465.059 354.332 li
cp
ef
465.059 310.039 mo
487.204 310.039 li
487.204 332.186 li
465.059 332.186 li
465.059 310.039 li
465.059 310.039 li
cp
ef
465.059 265.749 mo
487.204 265.749 li
487.204 287.895 li
465.059 287.895 li
465.059 265.749 li
465.059 265.749 li
cp
ef
465.059 221.458 mo
487.204 221.458 li
487.204 243.603 li
465.059 243.603 li
465.059 221.458 li
465.059 221.458 li
cp
ef
465.059 177.166 mo
487.204 177.166 li
487.204 199.312 li
465.059 199.312 li
465.059 177.166 li
465.059 177.166 li
cp
ef
465.059 132.875 mo
487.204 132.875 li
487.204 155.022 li
465.059 155.022 li
465.059 132.875 li
465.059 132.875 li
cp
ef
465.059 88.583 mo
487.204 88.583 li
487.204 110.729 li
465.059 110.729 li
465.059 88.583 li
465.059 88.583 li
cp
ef
465.059 44.2923 mo
487.204 44.2923 li
487.204 66.4387 li
465.059 66.4387 li
465.059 44.2923 li
465.059 44.2923 li
cp
ef
465.059 0 mo
487.204 0 li
487.204 22.1463 li
465.059 22.1463 li
465.059 0 li
465.059 0 li
cp
ef
442.914 863.682 mo
465.059 863.682 li
465.059 885.828 li
442.914 885.828 li
442.914 863.682 li
442.914 863.682 li
cp
ef
442.914 819.391 mo
465.059 819.391 li
465.059 841.537 li
442.914 841.537 li
442.914 819.391 li
442.914 819.391 li
cp
ef
442.914 775.099 mo
465.059 775.099 li
465.059 797.245 li
442.914 797.245 li
442.914 775.099 li
442.914 775.099 li
cp
ef
442.914 730.808 mo
465.059 730.808 li
465.059 752.954 li
442.914 752.954 li
442.914 730.808 li
442.914 730.808 li
cp
ef
442.914 686.516 mo
465.059 686.516 li
465.059 708.662 li
442.914 708.662 li
442.914 686.516 li
442.914 686.516 li
cp
ef
442.914 642.225 mo
465.059 642.225 li
465.059 664.371 li
442.914 664.371 li
442.914 642.225 li
442.914 642.225 li
cp
ef
442.914 597.935 mo
465.059 597.935 li
465.059 620.081 li
442.914 620.081 li
442.914 597.935 li
442.914 597.935 li
cp
ef
442.914 553.642 mo
465.059 553.642 li
465.059 575.788 li
442.914 575.788 li
442.914 553.642 li
442.914 553.642 li
cp
ef
442.914 509.352 mo
465.059 509.352 li
465.059 531.498 li
442.914 531.498 li
442.914 509.352 li
442.914 509.352 li
cp
ef
442.914 465.059 mo
465.059 465.059 li
465.059 487.205 li
442.914 487.205 li
442.914 465.059 li
442.914 465.059 li
cp
ef
442.914 420.769 mo
465.059 420.769 li
465.059 442.915 li
442.914 442.915 li
442.914 420.769 li
442.914 420.769 li
cp
ef
442.914 376.476 mo
465.059 376.476 li
465.059 398.622 li
442.914 398.622 li
442.914 376.476 li
442.914 376.476 li
cp
ef
442.914 332.186 mo
465.059 332.186 li
465.059 354.332 li
442.914 354.332 li
442.914 332.186 li
442.914 332.186 li
cp
ef
442.914 287.895 mo
465.059 287.895 li
465.059 310.041 li
442.914 310.041 li
442.914 287.895 li
442.914 287.895 li
cp
ef
442.914 243.603 mo
465.059 243.603 li
465.059 265.749 li
442.914 265.749 li
442.914 243.603 li
442.914 243.603 li
cp
ef
442.914 199.312 mo
465.059 199.312 li
465.059 221.458 li
442.914 221.458 li
442.914 199.312 li
442.914 199.312 li
cp
ef
442.914 155.02 mo
465.059 155.02 li
465.059 177.166 li
442.914 177.166 li
442.914 155.02 li
442.914 155.02 li
cp
ef
442.914 110.729 mo
465.059 110.729 li
465.059 132.875 li
442.914 132.875 li
442.914 110.729 li
442.914 110.729 li
cp
ef
442.914 66.4387 mo
465.059 66.4387 li
465.059 88.5849 li
442.914 88.5849 li
442.914 66.4387 li
442.914 66.4387 li
cp
ef
442.914 22.1463 mo
465.059 22.1463 li
465.059 44.2923 li
442.914 44.2923 li
442.914 22.1463 li
442.914 22.1463 li
cp
ef
597.933 841.535 mo
620.078 841.535 li
620.078 863.682 li
597.933 863.682 li
597.933 841.535 li
597.933 841.535 li
cp
ef
597.933 797.245 mo
620.078 797.245 li
620.078 819.391 li
597.933 819.391 li
597.933 797.245 li
597.933 797.245 li
cp
ef
597.933 752.952 mo
620.078 752.952 li
620.078 775.101 li
597.933 775.101 li
597.933 752.952 li
597.933 752.952 li
cp
ef
597.933 708.662 mo
620.078 708.662 li
620.078 730.808 li
597.933 730.808 li
597.933 708.662 li
597.933 708.662 li
cp
ef
597.933 664.371 mo
620.078 664.371 li
620.078 686.518 li
597.933 686.518 li
597.933 664.371 li
597.933 664.371 li
cp
ef
597.933 620.079 mo
620.078 620.079 li
620.078 642.225 li
597.933 642.225 li
597.933 620.079 li
597.933 620.079 li
cp
ef
597.933 575.788 mo
620.078 575.788 li
620.078 597.935 li
597.933 597.935 li
597.933 575.788 li
597.933 575.788 li
cp
ef
597.933 531.496 mo
620.078 531.496 li
620.078 553.642 li
597.933 553.642 li
597.933 531.496 li
597.933 531.496 li
cp
ef
597.933 487.205 mo
620.078 487.205 li
620.078 509.352 li
597.933 509.352 li
597.933 487.205 li
597.933 487.205 li
cp
ef
597.933 442.915 mo
620.078 442.915 li
620.078 465.061 li
597.933 465.061 li
597.933 442.915 li
597.933 442.915 li
cp
ef
597.933 398.622 mo
620.078 398.622 li
620.078 420.769 li
597.933 420.769 li
597.933 398.622 li
597.933 398.622 li
cp
ef
597.933 354.332 mo
620.078 354.332 li
620.078 376.478 li
597.933 376.478 li
597.933 354.332 li
597.933 354.332 li
cp
ef
597.933 310.039 mo
620.078 310.039 li
620.078 332.186 li
597.933 332.186 li
597.933 310.039 li
597.933 310.039 li
cp
ef
597.933 265.749 mo
620.078 265.749 li
620.078 287.895 li
597.933 287.895 li
597.933 265.749 li
597.933 265.749 li
cp
ef
597.933 221.458 mo
620.078 221.458 li
620.078 243.603 li
597.933 243.603 li
597.933 221.458 li
597.933 221.458 li
cp
ef
597.933 177.166 mo
620.078 177.166 li
620.078 199.312 li
597.933 199.312 li
597.933 177.166 li
597.933 177.166 li
cp
ef
597.933 132.875 mo
620.078 132.875 li
620.078 155.022 li
597.933 155.022 li
597.933 132.875 li
597.933 132.875 li
cp
ef
597.933 88.583 mo
620.078 88.583 li
620.078 110.729 li
597.933 110.729 li
597.933 88.583 li
597.933 88.583 li
cp
ef
597.933 44.2923 mo
620.078 44.2923 li
620.078 66.4387 li
597.933 66.4387 li
597.933 44.2923 li
597.933 44.2923 li
cp
ef
597.933 0 mo
620.078 0 li
620.078 22.1463 li
597.933 22.1463 li
597.933 0 li
597.933 0 li
cp
ef
575.786 863.682 mo
597.933 863.682 li
597.933 885.828 li
575.786 885.828 li
575.786 863.682 li
575.786 863.682 li
cp
ef
575.786 819.391 mo
597.933 819.391 li
597.933 841.537 li
575.786 841.537 li
575.786 819.391 li
575.786 819.391 li
cp
ef
575.786 775.099 mo
597.933 775.099 li
597.933 797.245 li
575.786 797.245 li
575.786 775.099 li
575.786 775.099 li
cp
ef
575.786 730.808 mo
597.933 730.808 li
597.933 752.954 li
575.786 752.954 li
575.786 730.808 li
575.786 730.808 li
cp
ef
575.786 686.516 mo
597.933 686.516 li
597.933 708.662 li
575.786 708.662 li
575.786 686.516 li
575.786 686.516 li
cp
ef
575.786 642.225 mo
597.933 642.225 li
597.933 664.371 li
575.786 664.371 li
575.786 642.225 li
575.786 642.225 li
cp
ef
575.786 597.935 mo
597.933 597.935 li
597.933 620.081 li
575.786 620.081 li
575.786 597.935 li
575.786 597.935 li
cp
ef
575.786 553.642 mo
597.933 553.642 li
597.933 575.788 li
575.786 575.788 li
575.786 553.642 li
575.786 553.642 li
cp
ef
575.786 509.352 mo
597.933 509.352 li
597.933 531.498 li
575.786 531.498 li
575.786 509.352 li
575.786 509.352 li
cp
ef
575.786 465.059 mo
597.933 465.059 li
597.933 487.205 li
575.786 487.205 li
575.786 465.059 li
575.786 465.059 li
cp
ef
575.786 420.769 mo
597.933 420.769 li
597.933 442.915 li
575.786 442.915 li
575.786 420.769 li
575.786 420.769 li
cp
ef
575.786 376.476 mo
597.933 376.476 li
597.933 398.622 li
575.786 398.622 li
575.786 376.476 li
575.786 376.476 li
cp
ef
575.786 332.186 mo
597.933 332.186 li
597.933 354.332 li
575.786 354.332 li
575.786 332.186 li
575.786 332.186 li
cp
ef
575.786 287.895 mo
597.933 287.895 li
597.933 310.041 li
575.786 310.041 li
575.786 287.895 li
575.786 287.895 li
cp
ef
575.786 243.603 mo
597.933 243.603 li
597.933 265.749 li
575.786 265.749 li
575.786 243.603 li
575.786 243.603 li
cp
ef
575.786 199.312 mo
597.933 199.312 li
597.933 221.458 li
575.786 221.458 li
575.786 199.312 li
575.786 199.312 li
cp
ef
575.786 155.02 mo
597.933 155.02 li
597.933 177.166 li
575.786 177.166 li
575.786 155.02 li
575.786 155.02 li
cp
ef
575.786 110.729 mo
597.933 110.729 li
597.933 132.875 li
575.786 132.875 li
575.786 110.729 li
575.786 110.729 li
cp
ef
575.786 66.4387 mo
597.933 66.4387 li
597.933 88.5849 li
575.786 88.5849 li
575.786 66.4387 li
575.786 66.4387 li
cp
ef
575.786 22.1463 mo
597.933 22.1463 li
597.933 44.2923 li
575.786 44.2923 li
575.786 22.1463 li
575.786 22.1463 li
cp
ef
553.642 841.535 mo
575.786 841.535 li
575.786 863.682 li
553.642 863.682 li
553.642 841.535 li
553.642 841.535 li
cp
ef
553.642 797.245 mo
575.786 797.245 li
575.786 819.391 li
553.642 819.391 li
553.642 797.245 li
553.642 797.245 li
cp
ef
553.642 752.952 mo
575.786 752.952 li
575.786 775.101 li
553.642 775.101 li
553.642 752.952 li
553.642 752.952 li
cp
ef
553.642 708.662 mo
575.786 708.662 li
575.786 730.808 li
553.642 730.808 li
553.642 708.662 li
553.642 708.662 li
cp
ef
553.642 664.371 mo
575.786 664.371 li
575.786 686.518 li
553.642 686.518 li
553.642 664.371 li
553.642 664.371 li
cp
ef
553.642 620.079 mo
575.786 620.079 li
575.786 642.225 li
553.642 642.225 li
553.642 620.079 li
553.642 620.079 li
cp
ef
553.642 575.788 mo
575.786 575.788 li
575.786 597.935 li
553.642 597.935 li
553.642 575.788 li
553.642 575.788 li
cp
ef
553.642 531.496 mo
575.786 531.496 li
575.786 553.642 li
553.642 553.642 li
553.642 531.496 li
553.642 531.496 li
cp
ef
553.642 487.205 mo
575.786 487.205 li
575.786 509.352 li
553.642 509.352 li
553.642 487.205 li
553.642 487.205 li
cp
ef
553.642 442.915 mo
575.786 442.915 li
575.786 465.061 li
553.642 465.061 li
553.642 442.915 li
553.642 442.915 li
cp
ef
553.642 398.622 mo
575.786 398.622 li
575.786 420.769 li
553.642 420.769 li
553.642 398.622 li
553.642 398.622 li
cp
ef
553.642 354.332 mo
575.786 354.332 li
575.786 376.478 li
553.642 376.478 li
553.642 354.332 li
553.642 354.332 li
cp
ef
553.642 310.039 mo
575.786 310.039 li
575.786 332.186 li
553.642 332.186 li
553.642 310.039 li
553.642 310.039 li
cp
ef
553.642 265.749 mo
575.786 265.749 li
575.786 287.895 li
553.642 287.895 li
553.642 265.749 li
553.642 265.749 li
cp
ef
553.642 221.458 mo
575.786 221.458 li
575.786 243.603 li
553.642 243.603 li
553.642 221.458 li
553.642 221.458 li
cp
ef
553.642 177.166 mo
575.786 177.166 li
575.786 199.312 li
553.642 199.312 li
553.642 177.166 li
553.642 177.166 li
cp
ef
553.642 132.875 mo
575.786 132.875 li
575.786 155.022 li
553.642 155.022 li
553.642 132.875 li
553.642 132.875 li
cp
ef
553.642 88.583 mo
575.786 88.583 li
575.786 110.729 li
553.642 110.729 li
553.642 88.583 li
553.642 88.583 li
cp
ef
553.642 44.2923 mo
575.786 44.2923 li
575.786 66.4387 li
553.642 66.4387 li
553.642 44.2923 li
553.642 44.2923 li
cp
ef
553.642 0 mo
575.786 0 li
575.786 22.1463 li
553.642 22.1463 li
553.642 0 li
553.642 0 li
cp
ef
531.497 863.682 mo
553.642 863.682 li
553.642 885.828 li
531.497 885.828 li
531.497 863.682 li
531.497 863.682 li
cp
ef
531.497 819.391 mo
553.642 819.391 li
553.642 841.537 li
531.497 841.537 li
531.497 819.391 li
531.497 819.391 li
cp
ef
531.497 775.099 mo
553.642 775.099 li
553.642 797.245 li
531.497 797.245 li
531.497 775.099 li
531.497 775.099 li
cp
ef
531.497 730.808 mo
553.642 730.808 li
553.642 752.954 li
531.497 752.954 li
531.497 730.808 li
531.497 730.808 li
cp
ef
531.497 686.516 mo
553.642 686.516 li
553.642 708.662 li
531.497 708.662 li
531.497 686.516 li
531.497 686.516 li
cp
ef
531.497 642.225 mo
553.642 642.225 li
553.642 664.371 li
531.497 664.371 li
531.497 642.225 li
531.497 642.225 li
cp
ef
531.497 597.935 mo
553.642 597.935 li
553.642 620.081 li
531.497 620.081 li
531.497 597.935 li
531.497 597.935 li
cp
ef
531.497 553.642 mo
553.642 553.642 li
553.642 575.788 li
531.497 575.788 li
531.497 553.642 li
531.497 553.642 li
cp
ef
531.497 509.352 mo
553.642 509.352 li
553.642 531.498 li
531.497 531.498 li
531.497 509.352 li
531.497 509.352 li
cp
ef
531.497 465.059 mo
553.642 465.059 li
553.642 487.205 li
531.497 487.205 li
531.497 465.059 li
531.497 465.059 li
cp
ef
531.497 420.769 mo
553.642 420.769 li
553.642 442.915 li
531.497 442.915 li
531.497 420.769 li
531.497 420.769 li
cp
ef
531.497 376.476 mo
553.642 376.476 li
553.642 398.622 li
531.497 398.622 li
531.497 376.476 li
531.497 376.476 li
cp
ef
531.497 332.186 mo
553.642 332.186 li
553.642 354.332 li
531.497 354.332 li
531.497 332.186 li
531.497 332.186 li
cp
ef
531.497 287.895 mo
553.642 287.895 li
553.642 310.041 li
531.497 310.041 li
531.497 287.895 li
531.497 287.895 li
cp
ef
531.497 243.603 mo
553.642 243.603 li
553.642 265.749 li
531.497 265.749 li
531.497 243.603 li
531.497 243.603 li
cp
ef
531.497 199.312 mo
553.642 199.312 li
553.642 221.458 li
531.497 221.458 li
531.497 199.312 li
531.497 199.312 li
cp
ef
531.497 155.02 mo
553.642 155.02 li
553.642 177.166 li
531.497 177.166 li
531.497 155.02 li
531.497 155.02 li
cp
ef
531.497 110.729 mo
553.642 110.729 li
553.642 132.875 li
531.497 132.875 li
531.497 110.729 li
531.497 110.729 li
cp
ef
531.497 66.4387 mo
553.642 66.4387 li
553.642 88.5849 li
531.497 88.5849 li
531.497 66.4387 li
531.497 66.4387 li
cp
ef
531.497 22.1463 mo
553.642 22.1463 li
553.642 44.2923 li
531.497 44.2923 li
531.497 22.1463 li
531.497 22.1463 li
cp
ef
686.516 841.535 mo
708.661 841.535 li
708.661 863.682 li
686.516 863.682 li
686.516 841.535 li
686.516 841.535 li
cp
ef
686.516 797.245 mo
708.661 797.245 li
708.661 819.391 li
686.516 819.391 li
686.516 797.245 li
686.516 797.245 li
cp
ef
686.516 752.952 mo
708.661 752.952 li
708.661 775.101 li
686.516 775.101 li
686.516 752.952 li
686.516 752.952 li
cp
ef
686.516 708.662 mo
708.661 708.662 li
708.661 730.808 li
686.516 730.808 li
686.516 708.662 li
686.516 708.662 li
cp
ef
686.516 664.371 mo
708.661 664.371 li
708.661 686.518 li
686.516 686.518 li
686.516 664.371 li
686.516 664.371 li
cp
ef
686.516 620.079 mo
708.661 620.079 li
708.661 642.225 li
686.516 642.225 li
686.516 620.079 li
686.516 620.079 li
cp
ef
686.516 575.788 mo
708.661 575.788 li
708.661 597.935 li
686.516 597.935 li
686.516 575.788 li
686.516 575.788 li
cp
ef
686.516 531.496 mo
708.661 531.496 li
708.661 553.642 li
686.516 553.642 li
686.516 531.496 li
686.516 531.496 li
cp
ef
686.516 487.205 mo
708.661 487.205 li
708.661 509.352 li
686.516 509.352 li
686.516 487.205 li
686.516 487.205 li
cp
ef
686.516 442.915 mo
708.661 442.915 li
708.661 465.061 li
686.516 465.061 li
686.516 442.915 li
686.516 442.915 li
cp
ef
686.516 398.622 mo
708.661 398.622 li
708.661 420.769 li
686.516 420.769 li
686.516 398.622 li
686.516 398.622 li
cp
ef
686.516 354.332 mo
708.661 354.332 li
708.661 376.478 li
686.516 376.478 li
686.516 354.332 li
686.516 354.332 li
cp
ef
686.516 310.039 mo
708.661 310.039 li
708.661 332.186 li
686.516 332.186 li
686.516 310.039 li
686.516 310.039 li
cp
ef
686.516 265.749 mo
708.661 265.749 li
708.661 287.895 li
686.516 287.895 li
686.516 265.749 li
686.516 265.749 li
cp
ef
686.516 221.458 mo
708.661 221.458 li
708.661 243.603 li
686.516 243.603 li
686.516 221.458 li
686.516 221.458 li
cp
ef
686.516 177.166 mo
708.661 177.166 li
708.661 199.312 li
686.516 199.312 li
686.516 177.166 li
686.516 177.166 li
cp
ef
686.516 132.875 mo
708.661 132.875 li
708.661 155.022 li
686.516 155.022 li
686.516 132.875 li
686.516 132.875 li
cp
ef
686.516 88.583 mo
708.661 88.583 li
708.661 110.729 li
686.516 110.729 li
686.516 88.583 li
686.516 88.583 li
cp
ef
686.516 44.2923 mo
708.661 44.2923 li
708.661 66.4387 li
686.516 66.4387 li
686.516 44.2923 li
686.516 44.2923 li
cp
ef
686.516 0 mo
708.661 0 li
708.661 22.1463 li
686.516 22.1463 li
686.516 0 li
686.516 0 li
cp
ef
664.37 863.682 mo
686.515 863.682 li
686.515 885.828 li
664.37 885.828 li
664.37 863.682 li
664.37 863.682 li
cp
ef
664.37 819.391 mo
686.515 819.391 li
686.515 841.537 li
664.37 841.537 li
664.37 819.391 li
664.37 819.391 li
cp
ef
664.37 775.099 mo
686.515 775.099 li
686.515 797.245 li
664.37 797.245 li
664.37 775.099 li
664.37 775.099 li
cp
ef
664.37 730.808 mo
686.515 730.808 li
686.515 752.954 li
664.37 752.954 li
664.37 730.808 li
664.37 730.808 li
cp
ef
664.37 686.516 mo
686.515 686.516 li
686.515 708.662 li
664.37 708.662 li
664.37 686.516 li
664.37 686.516 li
cp
ef
664.37 642.225 mo
686.515 642.225 li
686.515 664.371 li
664.37 664.371 li
664.37 642.225 li
664.37 642.225 li
cp
ef
664.37 597.935 mo
686.515 597.935 li
686.515 620.081 li
664.37 620.081 li
664.37 597.935 li
664.37 597.935 li
cp
ef
664.37 553.642 mo
686.515 553.642 li
686.515 575.788 li
664.37 575.788 li
664.37 553.642 li
664.37 553.642 li
cp
ef
664.37 509.352 mo
686.515 509.352 li
686.515 531.498 li
664.37 531.498 li
664.37 509.352 li
664.37 509.352 li
cp
ef
664.37 465.059 mo
686.515 465.059 li
686.515 487.205 li
664.37 487.205 li
664.37 465.059 li
664.37 465.059 li
cp
ef
664.37 420.769 mo
686.515 420.769 li
686.515 442.915 li
664.37 442.915 li
664.37 420.769 li
664.37 420.769 li
cp
ef
664.37 376.476 mo
686.515 376.476 li
686.515 398.622 li
664.37 398.622 li
664.37 376.476 li
664.37 376.476 li
cp
ef
664.37 332.186 mo
686.515 332.186 li
686.515 354.332 li
664.37 354.332 li
664.37 332.186 li
664.37 332.186 li
cp
ef
664.37 287.895 mo
686.515 287.895 li
686.515 310.041 li
664.37 310.041 li
664.37 287.895 li
664.37 287.895 li
cp
ef
664.37 243.603 mo
686.515 243.603 li
686.515 265.749 li
664.37 265.749 li
664.37 243.603 li
664.37 243.603 li
cp
ef
664.37 199.312 mo
686.515 199.312 li
686.515 221.458 li
664.37 221.458 li
664.37 199.312 li
664.37 199.312 li
cp
ef
664.37 155.02 mo
686.515 155.02 li
686.515 177.166 li
664.37 177.166 li
664.37 155.02 li
664.37 155.02 li
cp
ef
664.37 110.729 mo
686.515 110.729 li
686.515 132.875 li
664.37 132.875 li
664.37 110.729 li
664.37 110.729 li
cp
ef
664.37 66.4387 mo
686.515 66.4387 li
686.515 88.5849 li
664.37 88.5849 li
664.37 66.4387 li
664.37 66.4387 li
cp
ef
664.37 22.1463 mo
686.515 22.1463 li
686.515 44.2923 li
664.37 44.2923 li
664.37 22.1463 li
664.37 22.1463 li
cp
ef
642.224 841.535 mo
664.37 841.535 li
664.37 863.682 li
642.224 863.682 li
642.224 841.535 li
642.224 841.535 li
cp
ef
642.224 797.245 mo
664.37 797.245 li
664.37 819.391 li
642.224 819.391 li
642.224 797.245 li
642.224 797.245 li
cp
ef
642.224 752.952 mo
664.37 752.952 li
664.37 775.101 li
642.224 775.101 li
642.224 752.952 li
642.224 752.952 li
cp
ef
642.224 708.662 mo
664.37 708.662 li
664.37 730.808 li
642.224 730.808 li
642.224 708.662 li
642.224 708.662 li
cp
ef
642.224 664.371 mo
664.37 664.371 li
664.37 686.518 li
642.224 686.518 li
642.224 664.371 li
642.224 664.371 li
cp
ef
642.224 620.079 mo
664.37 620.079 li
664.37 642.225 li
642.224 642.225 li
642.224 620.079 li
642.224 620.079 li
cp
ef
642.224 575.788 mo
664.37 575.788 li
664.37 597.935 li
642.224 597.935 li
642.224 575.788 li
642.224 575.788 li
cp
ef
642.224 531.496 mo
664.37 531.496 li
664.37 553.642 li
642.224 553.642 li
642.224 531.496 li
642.224 531.496 li
cp
ef
642.224 487.205 mo
664.37 487.205 li
664.37 509.352 li
642.224 509.352 li
642.224 487.205 li
642.224 487.205 li
cp
ef
642.224 442.915 mo
664.37 442.915 li
664.37 465.061 li
642.224 465.061 li
642.224 442.915 li
642.224 442.915 li
cp
ef
642.224 398.622 mo
664.37 398.622 li
664.37 420.769 li
642.224 420.769 li
642.224 398.622 li
642.224 398.622 li
cp
ef
642.224 354.332 mo
664.37 354.332 li
664.37 376.478 li
642.224 376.478 li
642.224 354.332 li
642.224 354.332 li
cp
ef
642.224 310.039 mo
664.37 310.039 li
664.37 332.186 li
642.224 332.186 li
642.224 310.039 li
642.224 310.039 li
cp
ef
642.224 265.749 mo
664.37 265.749 li
664.37 287.895 li
642.224 287.895 li
642.224 265.749 li
642.224 265.749 li
cp
ef
642.224 221.458 mo
664.37 221.458 li
664.37 243.603 li
642.224 243.603 li
642.224 221.458 li
642.224 221.458 li
cp
ef
642.224 177.166 mo
664.37 177.166 li
664.37 199.312 li
642.224 199.312 li
642.224 177.166 li
642.224 177.166 li
cp
ef
642.224 132.875 mo
664.37 132.875 li
664.37 155.022 li
642.224 155.022 li
642.224 132.875 li
642.224 132.875 li
cp
ef
642.224 88.583 mo
664.37 88.583 li
664.37 110.729 li
642.224 110.729 li
642.224 88.583 li
642.224 88.583 li
cp
ef
642.224 44.2923 mo
664.37 44.2923 li
664.37 66.4387 li
642.224 66.4387 li
642.224 44.2923 li
642.224 44.2923 li
cp
ef
642.224 0 mo
664.37 0 li
664.37 22.1463 li
642.224 22.1463 li
642.224 0 li
642.224 0 li
cp
ef
620.078 863.682 mo
642.223 863.682 li
642.223 885.828 li
620.078 885.828 li
620.078 863.682 li
620.078 863.682 li
cp
ef
620.078 819.391 mo
642.223 819.391 li
642.223 841.537 li
620.078 841.537 li
620.078 819.391 li
620.078 819.391 li
cp
ef
620.078 775.099 mo
642.223 775.099 li
642.223 797.245 li
620.078 797.245 li
620.078 775.099 li
620.078 775.099 li
cp
ef
620.078 730.808 mo
642.223 730.808 li
642.223 752.954 li
620.078 752.954 li
620.078 730.808 li
620.078 730.808 li
cp
ef
620.078 686.516 mo
642.223 686.516 li
642.223 708.662 li
620.078 708.662 li
620.078 686.516 li
620.078 686.516 li
cp
ef
620.078 642.225 mo
642.223 642.225 li
642.223 664.371 li
620.078 664.371 li
620.078 642.225 li
620.078 642.225 li
cp
ef
620.078 597.935 mo
642.223 597.935 li
642.223 620.081 li
620.078 620.081 li
620.078 597.935 li
620.078 597.935 li
cp
ef
620.078 553.642 mo
642.223 553.642 li
642.223 575.788 li
620.078 575.788 li
620.078 553.642 li
620.078 553.642 li
cp
ef
620.078 509.352 mo
642.223 509.352 li
642.223 531.498 li
620.078 531.498 li
620.078 509.352 li
620.078 509.352 li
cp
ef
620.078 465.059 mo
642.223 465.059 li
642.223 487.205 li
620.078 487.205 li
620.078 465.059 li
620.078 465.059 li
cp
ef
620.078 420.769 mo
642.223 420.769 li
642.223 442.915 li
620.078 442.915 li
620.078 420.769 li
620.078 420.769 li
cp
ef
620.078 376.476 mo
642.223 376.476 li
642.223 398.622 li
620.078 398.622 li
620.078 376.476 li
620.078 376.476 li
cp
ef
620.078 332.186 mo
642.223 332.186 li
642.223 354.332 li
620.078 354.332 li
620.078 332.186 li
620.078 332.186 li
cp
ef
620.078 287.895 mo
642.223 287.895 li
642.223 310.041 li
620.078 310.041 li
620.078 287.895 li
620.078 287.895 li
cp
ef
620.078 243.603 mo
642.223 243.603 li
642.223 265.749 li
620.078 265.749 li
620.078 243.603 li
620.078 243.603 li
cp
ef
620.078 199.312 mo
642.223 199.312 li
642.223 221.458 li
620.078 221.458 li
620.078 199.312 li
620.078 199.312 li
cp
ef
620.078 155.02 mo
642.223 155.02 li
642.223 177.166 li
620.078 177.166 li
620.078 155.02 li
620.078 155.02 li
cp
ef
620.078 110.729 mo
642.223 110.729 li
642.223 132.875 li
620.078 132.875 li
620.078 110.729 li
620.078 110.729 li
cp
ef
620.078 66.4387 mo
642.223 66.4387 li
642.223 88.5849 li
620.078 88.5849 li
620.078 66.4387 li
620.078 66.4387 li
cp
ef
620.078 22.1463 mo
642.223 22.1463 li
642.223 44.2923 li
620.078 44.2923 li
620.078 22.1463 li
620.078 22.1463 li
cp
ef
775.098 841.535 mo
797.244 841.535 li
797.244 863.682 li
775.098 863.682 li
775.098 841.535 li
775.098 841.535 li
cp
ef
775.098 797.245 mo
797.244 797.245 li
797.244 819.391 li
775.098 819.391 li
775.098 797.245 li
775.098 797.245 li
cp
ef
775.098 752.952 mo
797.244 752.952 li
797.244 775.101 li
775.098 775.101 li
775.098 752.952 li
775.098 752.952 li
cp
ef
775.098 708.662 mo
797.244 708.662 li
797.244 730.808 li
775.098 730.808 li
775.098 708.662 li
775.098 708.662 li
cp
ef
775.098 664.371 mo
797.244 664.371 li
797.244 686.518 li
775.098 686.518 li
775.098 664.371 li
775.098 664.371 li
cp
ef
775.098 620.079 mo
797.244 620.079 li
797.244 642.225 li
775.098 642.225 li
775.098 620.079 li
775.098 620.079 li
cp
ef
775.098 575.788 mo
797.244 575.788 li
797.244 597.935 li
775.098 597.935 li
775.098 575.788 li
775.098 575.788 li
cp
ef
775.098 531.496 mo
797.244 531.496 li
797.244 553.642 li
775.098 553.642 li
775.098 531.496 li
775.098 531.496 li
cp
ef
775.098 487.205 mo
797.244 487.205 li
797.244 509.352 li
775.098 509.352 li
775.098 487.205 li
775.098 487.205 li
cp
ef
775.098 442.915 mo
797.244 442.915 li
797.244 465.061 li
775.098 465.061 li
775.098 442.915 li
775.098 442.915 li
cp
ef
775.098 398.622 mo
797.244 398.622 li
797.244 420.769 li
775.098 420.769 li
775.098 398.622 li
775.098 398.622 li
cp
ef
775.098 354.332 mo
797.244 354.332 li
797.244 376.478 li
775.098 376.478 li
775.098 354.332 li
775.098 354.332 li
cp
ef
775.098 310.039 mo
797.244 310.039 li
797.244 332.186 li
775.098 332.186 li
775.098 310.039 li
775.098 310.039 li
cp
ef
775.098 265.749 mo
797.244 265.749 li
797.244 287.895 li
775.098 287.895 li
775.098 265.749 li
775.098 265.749 li
cp
ef
775.098 221.458 mo
797.244 221.458 li
797.244 243.603 li
775.098 243.603 li
775.098 221.458 li
775.098 221.458 li
cp
ef
775.098 177.166 mo
797.244 177.166 li
797.244 199.312 li
775.098 199.312 li
775.098 177.166 li
775.098 177.166 li
cp
ef
775.098 132.875 mo
797.244 132.875 li
797.244 155.022 li
775.098 155.022 li
775.098 132.875 li
775.098 132.875 li
cp
ef
775.098 88.583 mo
797.244 88.583 li
797.244 110.729 li
775.098 110.729 li
775.098 88.583 li
775.098 88.583 li
cp
ef
775.098 44.2923 mo
797.244 44.2923 li
797.244 66.4387 li
775.098 66.4387 li
775.098 44.2923 li
775.098 44.2923 li
cp
ef
775.098 0 mo
797.244 0 li
797.244 22.1463 li
775.098 22.1463 li
775.098 0 li
775.098 0 li
cp
ef
752.951 863.682 mo
775.098 863.682 li
775.098 885.828 li
752.951 885.828 li
752.951 863.682 li
752.951 863.682 li
cp
ef
752.951 819.391 mo
775.098 819.391 li
775.098 841.537 li
752.951 841.537 li
752.951 819.391 li
752.951 819.391 li
cp
ef
752.951 775.099 mo
775.098 775.099 li
775.098 797.245 li
752.951 797.245 li
752.951 775.099 li
752.951 775.099 li
cp
ef
752.951 730.808 mo
775.098 730.808 li
775.098 752.954 li
752.951 752.954 li
752.951 730.808 li
752.951 730.808 li
cp
ef
752.951 686.516 mo
775.098 686.516 li
775.098 708.662 li
752.951 708.662 li
752.951 686.516 li
752.951 686.516 li
cp
ef
752.951 642.225 mo
775.098 642.225 li
775.098 664.371 li
752.951 664.371 li
752.951 642.225 li
752.951 642.225 li
cp
ef
752.951 597.935 mo
775.098 597.935 li
775.098 620.081 li
752.951 620.081 li
752.951 597.935 li
752.951 597.935 li
cp
ef
752.951 553.642 mo
775.098 553.642 li
775.098 575.788 li
752.951 575.788 li
752.951 553.642 li
752.951 553.642 li
cp
ef
752.951 509.352 mo
775.098 509.352 li
775.098 531.498 li
752.951 531.498 li
752.951 509.352 li
752.951 509.352 li
cp
ef
752.951 465.059 mo
775.098 465.059 li
775.098 487.205 li
752.951 487.205 li
752.951 465.059 li
752.951 465.059 li
cp
ef
752.951 420.769 mo
775.098 420.769 li
775.098 442.915 li
752.951 442.915 li
752.951 420.769 li
752.951 420.769 li
cp
ef
752.951 376.476 mo
775.098 376.476 li
775.098 398.622 li
752.951 398.622 li
752.951 376.476 li
752.951 376.476 li
cp
ef
752.951 332.186 mo
775.098 332.186 li
775.098 354.332 li
752.951 354.332 li
752.951 332.186 li
752.951 332.186 li
cp
ef
752.951 287.895 mo
775.098 287.895 li
775.098 310.041 li
752.951 310.041 li
752.951 287.895 li
752.951 287.895 li
cp
ef
752.951 243.603 mo
775.098 243.603 li
775.098 265.749 li
752.951 265.749 li
752.951 243.603 li
752.951 243.603 li
cp
ef
752.951 199.312 mo
775.098 199.312 li
775.098 221.458 li
752.951 221.458 li
752.951 199.312 li
752.951 199.312 li
cp
ef
752.951 155.02 mo
775.098 155.02 li
775.098 177.166 li
752.951 177.166 li
752.951 155.02 li
752.951 155.02 li
cp
ef
752.951 110.729 mo
775.098 110.729 li
775.098 132.875 li
752.951 132.875 li
752.951 110.729 li
752.951 110.729 li
cp
ef
752.951 66.4387 mo
775.098 66.4387 li
775.098 88.5849 li
752.951 88.5849 li
752.951 66.4387 li
752.951 66.4387 li
cp
ef
752.951 22.1463 mo
775.098 22.1463 li
775.098 44.2923 li
752.951 44.2923 li
752.951 22.1463 li
752.951 22.1463 li
cp
ef
730.805 841.535 mo
752.95 841.535 li
752.95 863.682 li
730.805 863.682 li
730.805 841.535 li
730.805 841.535 li
cp
ef
730.805 797.245 mo
752.95 797.245 li
752.95 819.391 li
730.805 819.391 li
730.805 797.245 li
730.805 797.245 li
cp
ef
730.805 752.952 mo
752.95 752.952 li
752.95 775.101 li
730.805 775.101 li
730.805 752.952 li
730.805 752.952 li
cp
ef
730.805 708.662 mo
752.95 708.662 li
752.95 730.808 li
730.805 730.808 li
730.805 708.662 li
730.805 708.662 li
cp
ef
730.805 664.371 mo
752.95 664.371 li
752.95 686.518 li
730.805 686.518 li
730.805 664.371 li
730.805 664.371 li
cp
ef
730.805 620.079 mo
752.95 620.079 li
752.95 642.225 li
730.805 642.225 li
730.805 620.079 li
730.805 620.079 li
cp
ef
730.805 575.788 mo
752.95 575.788 li
752.95 597.935 li
730.805 597.935 li
730.805 575.788 li
730.805 575.788 li
cp
ef
730.805 531.496 mo
752.95 531.496 li
752.95 553.642 li
730.805 553.642 li
730.805 531.496 li
730.805 531.496 li
cp
ef
730.805 487.205 mo
752.95 487.205 li
752.95 509.352 li
730.805 509.352 li
730.805 487.205 li
730.805 487.205 li
cp
ef
730.805 442.915 mo
752.95 442.915 li
752.95 465.061 li
730.805 465.061 li
730.805 442.915 li
730.805 442.915 li
cp
ef
730.805 398.622 mo
752.95 398.622 li
752.95 420.769 li
730.805 420.769 li
730.805 398.622 li
730.805 398.622 li
cp
ef
730.805 354.332 mo
752.95 354.332 li
752.95 376.478 li
730.805 376.478 li
730.805 354.332 li
730.805 354.332 li
cp
ef
730.805 310.039 mo
752.95 310.039 li
752.95 332.186 li
730.805 332.186 li
730.805 310.039 li
730.805 310.039 li
cp
ef
730.805 265.749 mo
752.95 265.749 li
752.95 287.895 li
730.805 287.895 li
730.805 265.749 li
730.805 265.749 li
cp
ef
730.805 221.458 mo
752.95 221.458 li
752.95 243.603 li
730.805 243.603 li
730.805 221.458 li
730.805 221.458 li
cp
ef
730.805 177.166 mo
752.95 177.166 li
752.95 199.312 li
730.805 199.312 li
730.805 177.166 li
730.805 177.166 li
cp
ef
730.805 132.875 mo
752.95 132.875 li
752.95 155.022 li
730.805 155.022 li
730.805 132.875 li
730.805 132.875 li
cp
ef
730.805 88.583 mo
752.95 88.583 li
752.95 110.729 li
730.805 110.729 li
730.805 88.583 li
730.805 88.583 li
cp
ef
730.805 44.2923 mo
752.95 44.2923 li
752.95 66.4387 li
730.805 66.4387 li
730.805 44.2923 li
730.805 44.2923 li
cp
ef
730.805 0 mo
752.95 0 li
752.95 22.1463 li
730.805 22.1463 li
730.805 0 li
730.805 0 li
cp
ef
708.661 863.682 mo
730.805 863.682 li
730.805 885.828 li
708.661 885.828 li
708.661 863.682 li
708.661 863.682 li
cp
ef
708.661 819.391 mo
730.805 819.391 li
730.805 841.537 li
708.661 841.537 li
708.661 819.391 li
708.661 819.391 li
cp
ef
708.661 775.099 mo
730.805 775.099 li
730.805 797.245 li
708.661 797.245 li
708.661 775.099 li
708.661 775.099 li
cp
ef
708.661 730.808 mo
730.805 730.808 li
730.805 752.954 li
708.661 752.954 li
708.661 730.808 li
708.661 730.808 li
cp
ef
708.661 686.516 mo
730.805 686.516 li
730.805 708.662 li
708.661 708.662 li
708.661 686.516 li
708.661 686.516 li
cp
ef
708.661 642.225 mo
730.805 642.225 li
730.805 664.371 li
708.661 664.371 li
708.661 642.225 li
708.661 642.225 li
cp
ef
708.661 597.935 mo
730.805 597.935 li
730.805 620.081 li
708.661 620.081 li
708.661 597.935 li
708.661 597.935 li
cp
ef
708.661 553.642 mo
730.805 553.642 li
730.805 575.788 li
708.661 575.788 li
708.661 553.642 li
708.661 553.642 li
cp
ef
708.661 509.352 mo
730.805 509.352 li
730.805 531.498 li
708.661 531.498 li
708.661 509.352 li
708.661 509.352 li
cp
ef
708.661 465.059 mo
730.805 465.059 li
730.805 487.205 li
708.661 487.205 li
708.661 465.059 li
708.661 465.059 li
cp
ef
708.661 420.769 mo
730.805 420.769 li
730.805 442.915 li
708.661 442.915 li
708.661 420.769 li
708.661 420.769 li
cp
ef
708.661 376.476 mo
730.805 376.476 li
730.805 398.622 li
708.661 398.622 li
708.661 376.476 li
708.661 376.476 li
cp
ef
708.661 332.186 mo
730.805 332.186 li
730.805 354.332 li
708.661 354.332 li
708.661 332.186 li
708.661 332.186 li
cp
ef
708.661 287.895 mo
730.805 287.895 li
730.805 310.041 li
708.661 310.041 li
708.661 287.895 li
708.661 287.895 li
cp
ef
708.661 243.603 mo
730.805 243.603 li
730.805 265.749 li
708.661 265.749 li
708.661 243.603 li
708.661 243.603 li
cp
ef
708.661 199.312 mo
730.805 199.312 li
730.805 221.458 li
708.661 221.458 li
708.661 199.312 li
708.661 199.312 li
cp
ef
708.661 155.02 mo
730.805 155.02 li
730.805 177.166 li
708.661 177.166 li
708.661 155.02 li
708.661 155.02 li
cp
ef
708.661 110.729 mo
730.805 110.729 li
730.805 132.875 li
708.661 132.875 li
708.661 110.729 li
708.661 110.729 li
cp
ef
708.661 66.4387 mo
730.805 66.4387 li
730.805 88.5849 li
708.661 88.5849 li
708.661 66.4387 li
708.661 66.4387 li
cp
ef
708.661 22.1463 mo
730.805 22.1463 li
730.805 44.2923 li
708.661 44.2923 li
708.661 22.1463 li
708.661 22.1463 li
cp
ef
863.679 841.535 mo
885.827 841.535 li
885.827 863.682 li
863.679 863.682 li
863.679 841.535 li
863.679 841.535 li
cp
ef
863.679 797.245 mo
885.827 797.245 li
885.827 819.391 li
863.679 819.391 li
863.679 797.245 li
863.679 797.245 li
cp
ef
863.679 752.952 mo
885.827 752.952 li
885.827 775.101 li
863.679 775.101 li
863.679 752.952 li
863.679 752.952 li
cp
ef
863.679 708.662 mo
885.827 708.662 li
885.827 730.808 li
863.679 730.808 li
863.679 708.662 li
863.679 708.662 li
cp
ef
863.679 664.371 mo
885.827 664.371 li
885.827 686.518 li
863.679 686.518 li
863.679 664.371 li
863.679 664.371 li
cp
ef
863.679 620.079 mo
885.827 620.079 li
885.827 642.225 li
863.679 642.225 li
863.679 620.079 li
863.679 620.079 li
cp
ef
863.679 575.788 mo
885.827 575.788 li
885.827 597.935 li
863.679 597.935 li
863.679 575.788 li
863.679 575.788 li
cp
ef
863.679 531.496 mo
885.827 531.496 li
885.827 553.642 li
863.679 553.642 li
863.679 531.496 li
863.679 531.496 li
cp
ef
863.679 487.205 mo
885.827 487.205 li
885.827 509.352 li
863.679 509.352 li
863.679 487.205 li
863.679 487.205 li
cp
ef
863.679 442.915 mo
885.827 442.915 li
885.827 465.061 li
863.679 465.061 li
863.679 442.915 li
863.679 442.915 li
cp
ef
863.679 398.622 mo
885.827 398.622 li
885.827 420.769 li
863.679 420.769 li
863.679 398.622 li
863.679 398.622 li
cp
ef
863.679 354.332 mo
885.827 354.332 li
885.827 376.478 li
863.679 376.478 li
863.679 354.332 li
863.679 354.332 li
cp
ef
863.679 310.039 mo
885.827 310.039 li
885.827 332.186 li
863.679 332.186 li
863.679 310.039 li
863.679 310.039 li
cp
ef
863.679 265.749 mo
885.827 265.749 li
885.827 287.895 li
863.679 287.895 li
863.679 265.749 li
863.679 265.749 li
cp
ef
863.679 221.458 mo
885.827 221.458 li
885.827 243.603 li
863.679 243.603 li
863.679 221.458 li
863.679 221.458 li
cp
ef
863.679 177.166 mo
885.827 177.166 li
885.827 199.312 li
863.679 199.312 li
863.679 177.166 li
863.679 177.166 li
cp
ef
863.679 132.875 mo
885.827 132.875 li
885.827 155.022 li
863.679 155.022 li
863.679 132.875 li
863.679 132.875 li
cp
ef
863.679 88.583 mo
885.827 88.583 li
885.827 110.729 li
863.679 110.729 li
863.679 88.583 li
863.679 88.583 li
cp
ef
863.679 44.2923 mo
885.827 44.2923 li
885.827 66.4387 li
863.679 66.4387 li
863.679 44.2923 li
863.679 44.2923 li
cp
ef
863.679 0 mo
885.827 0 li
885.827 22.1463 li
863.679 22.1463 li
863.679 0 li
863.679 0 li
cp
ef
841.534 863.682 mo
863.679 863.682 li
863.679 885.828 li
841.534 885.828 li
841.534 863.682 li
841.534 863.682 li
cp
ef
841.534 819.391 mo
863.679 819.391 li
863.679 841.537 li
841.534 841.537 li
841.534 819.391 li
841.534 819.391 li
cp
ef
841.534 775.099 mo
863.679 775.099 li
863.679 797.245 li
841.534 797.245 li
841.534 775.099 li
841.534 775.099 li
cp
ef
841.534 730.808 mo
863.679 730.808 li
863.679 752.954 li
841.534 752.954 li
841.534 730.808 li
841.534 730.808 li
cp
ef
841.534 686.516 mo
863.679 686.516 li
863.679 708.662 li
841.534 708.662 li
841.534 686.516 li
841.534 686.516 li
cp
ef
841.534 642.225 mo
863.679 642.225 li
863.679 664.371 li
841.534 664.371 li
841.534 642.225 li
841.534 642.225 li
cp
ef
841.534 597.935 mo
863.679 597.935 li
863.679 620.081 li
841.534 620.081 li
841.534 597.935 li
841.534 597.935 li
cp
ef
841.534 553.642 mo
863.679 553.642 li
863.679 575.788 li
841.534 575.788 li
841.534 553.642 li
841.534 553.642 li
cp
ef
841.534 509.352 mo
863.679 509.352 li
863.679 531.498 li
841.534 531.498 li
841.534 509.352 li
841.534 509.352 li
cp
ef
841.534 465.059 mo
863.679 465.059 li
863.679 487.205 li
841.534 487.205 li
841.534 465.059 li
841.534 465.059 li
cp
ef
841.534 420.769 mo
863.679 420.769 li
863.679 442.915 li
841.534 442.915 li
841.534 420.769 li
841.534 420.769 li
cp
ef
841.534 376.476 mo
863.679 376.476 li
863.679 398.622 li
841.534 398.622 li
841.534 376.476 li
841.534 376.476 li
cp
ef
841.534 332.186 mo
863.679 332.186 li
863.679 354.332 li
841.534 354.332 li
841.534 332.186 li
841.534 332.186 li
cp
ef
841.534 287.895 mo
863.679 287.895 li
863.679 310.041 li
841.534 310.041 li
841.534 287.895 li
841.534 287.895 li
cp
ef
841.534 243.603 mo
863.679 243.603 li
863.679 265.749 li
841.534 265.749 li
841.534 243.603 li
841.534 243.603 li
cp
ef
841.534 199.312 mo
863.679 199.312 li
863.679 221.458 li
841.534 221.458 li
841.534 199.312 li
841.534 199.312 li
cp
ef
841.534 155.02 mo
863.679 155.02 li
863.679 177.166 li
841.534 177.166 li
841.534 155.02 li
841.534 155.02 li
cp
ef
841.534 110.729 mo
863.679 110.729 li
863.679 132.875 li
841.534 132.875 li
841.534 110.729 li
841.534 110.729 li
cp
ef
841.534 66.4387 mo
863.679 66.4387 li
863.679 88.5849 li
841.534 88.5849 li
841.534 66.4387 li
841.534 66.4387 li
cp
ef
841.534 22.1463 mo
863.679 22.1463 li
863.679 44.2923 li
841.534 44.2923 li
841.534 22.1463 li
841.534 22.1463 li
cp
ef
819.388 841.535 mo
841.533 841.535 li
841.533 863.682 li
819.388 863.682 li
819.388 841.535 li
819.388 841.535 li
cp
ef
819.388 797.245 mo
841.533 797.245 li
841.533 819.391 li
819.388 819.391 li
819.388 797.245 li
819.388 797.245 li
cp
ef
819.388 752.952 mo
841.533 752.952 li
841.533 775.101 li
819.388 775.101 li
819.388 752.952 li
819.388 752.952 li
cp
ef
819.388 708.662 mo
841.533 708.662 li
841.533 730.808 li
819.388 730.808 li
819.388 708.662 li
819.388 708.662 li
cp
ef
819.388 664.371 mo
841.533 664.371 li
841.533 686.518 li
819.388 686.518 li
819.388 664.371 li
819.388 664.371 li
cp
ef
819.388 620.079 mo
841.533 620.079 li
841.533 642.225 li
819.388 642.225 li
819.388 620.079 li
819.388 620.079 li
cp
ef
819.388 575.788 mo
841.533 575.788 li
841.533 597.935 li
819.388 597.935 li
819.388 575.788 li
819.388 575.788 li
cp
ef
819.388 531.496 mo
841.533 531.496 li
841.533 553.642 li
819.388 553.642 li
819.388 531.496 li
819.388 531.496 li
cp
ef
819.388 487.205 mo
841.533 487.205 li
841.533 509.352 li
819.388 509.352 li
819.388 487.205 li
819.388 487.205 li
cp
ef
819.388 442.915 mo
841.533 442.915 li
841.533 465.061 li
819.388 465.061 li
819.388 442.915 li
819.388 442.915 li
cp
ef
819.388 398.622 mo
841.533 398.622 li
841.533 420.769 li
819.388 420.769 li
819.388 398.622 li
819.388 398.622 li
cp
ef
819.388 354.332 mo
841.533 354.332 li
841.533 376.478 li
819.388 376.478 li
819.388 354.332 li
819.388 354.332 li
cp
ef
819.388 310.039 mo
841.533 310.039 li
841.533 332.186 li
819.388 332.186 li
819.388 310.039 li
819.388 310.039 li
cp
ef
819.388 265.749 mo
841.533 265.749 li
841.533 287.895 li
819.388 287.895 li
819.388 265.749 li
819.388 265.749 li
cp
ef
819.388 221.458 mo
841.533 221.458 li
841.533 243.603 li
819.388 243.603 li
819.388 221.458 li
819.388 221.458 li
cp
ef
819.388 177.166 mo
841.533 177.166 li
841.533 199.312 li
819.388 199.312 li
819.388 177.166 li
819.388 177.166 li
cp
ef
819.388 132.875 mo
841.533 132.875 li
841.533 155.022 li
819.388 155.022 li
819.388 132.875 li
819.388 132.875 li
cp
ef
819.388 88.583 mo
841.533 88.583 li
841.533 110.729 li
819.388 110.729 li
819.388 88.583 li
819.388 88.583 li
cp
ef
819.388 44.2923 mo
841.533 44.2923 li
841.533 66.4387 li
819.388 66.4387 li
819.388 44.2923 li
819.388 44.2923 li
cp
ef
819.388 0 mo
841.533 0 li
841.533 22.1463 li
819.388 22.1463 li
819.388 0 li
819.388 0 li
cp
ef
797.244 863.682 mo
819.388 863.682 li
819.388 885.828 li
797.244 885.828 li
797.244 863.682 li
797.244 863.682 li
cp
ef
797.244 819.391 mo
819.388 819.391 li
819.388 841.537 li
797.244 841.537 li
797.244 819.391 li
797.244 819.391 li
cp
ef
797.244 775.099 mo
819.388 775.099 li
819.388 797.245 li
797.244 797.245 li
797.244 775.099 li
797.244 775.099 li
cp
ef
797.244 730.808 mo
819.388 730.808 li
819.388 752.954 li
797.244 752.954 li
797.244 730.808 li
797.244 730.808 li
cp
ef
797.244 686.516 mo
819.388 686.516 li
819.388 708.662 li
797.244 708.662 li
797.244 686.516 li
797.244 686.516 li
cp
ef
797.244 642.225 mo
819.388 642.225 li
819.388 664.371 li
797.244 664.371 li
797.244 642.225 li
797.244 642.225 li
cp
ef
797.244 597.935 mo
819.388 597.935 li
819.388 620.081 li
797.244 620.081 li
797.244 597.935 li
797.244 597.935 li
cp
ef
797.244 553.642 mo
819.388 553.642 li
819.388 575.788 li
797.244 575.788 li
797.244 553.642 li
797.244 553.642 li
cp
ef
797.244 509.352 mo
819.388 509.352 li
819.388 531.498 li
797.244 531.498 li
797.244 509.352 li
797.244 509.352 li
cp
ef
797.244 465.059 mo
819.388 465.059 li
819.388 487.205 li
797.244 487.205 li
797.244 465.059 li
797.244 465.059 li
cp
ef
797.244 420.769 mo
819.388 420.769 li
819.388 442.915 li
797.244 442.915 li
797.244 420.769 li
797.244 420.769 li
cp
ef
797.244 376.476 mo
819.388 376.476 li
819.388 398.622 li
797.244 398.622 li
797.244 376.476 li
797.244 376.476 li
cp
ef
797.244 332.186 mo
819.388 332.186 li
819.388 354.332 li
797.244 354.332 li
797.244 332.186 li
797.244 332.186 li
cp
ef
797.244 287.895 mo
819.388 287.895 li
819.388 310.041 li
797.244 310.041 li
797.244 287.895 li
797.244 287.895 li
cp
ef
797.244 243.603 mo
819.388 243.603 li
819.388 265.749 li
797.244 265.749 li
797.244 243.603 li
797.244 243.603 li
cp
ef
797.244 199.312 mo
819.388 199.312 li
819.388 221.458 li
797.244 221.458 li
797.244 199.312 li
797.244 199.312 li
cp
ef
797.244 155.02 mo
819.388 155.02 li
819.388 177.166 li
797.244 177.166 li
797.244 155.02 li
797.244 155.02 li
cp
ef
797.244 110.729 mo
819.388 110.729 li
819.388 132.875 li
797.244 132.875 li
797.244 110.729 li
797.244 110.729 li
cp
ef
797.244 66.4387 mo
819.388 66.4387 li
819.388 88.5849 li
797.244 88.5849 li
797.244 66.4387 li
797.244 66.4387 li
cp
ef
797.244 22.1463 mo
819.388 22.1463 li
819.388 44.2923 li
797.244 44.2923 li
797.244 22.1463 li
797.244 22.1463 li
cp
ef
952.264 841.535 mo
974.408 841.535 li
974.408 863.682 li
952.264 863.682 li
952.264 841.535 li
952.264 841.535 li
cp
ef
952.264 797.245 mo
974.408 797.245 li
974.408 819.391 li
952.264 819.391 li
952.264 797.245 li
952.264 797.245 li
cp
ef
952.264 752.952 mo
974.408 752.952 li
974.408 775.101 li
952.264 775.101 li
952.264 752.952 li
952.264 752.952 li
cp
ef
952.264 708.662 mo
974.408 708.662 li
974.408 730.808 li
952.264 730.808 li
952.264 708.662 li
952.264 708.662 li
cp
ef
952.264 664.371 mo
974.408 664.371 li
974.408 686.518 li
952.264 686.518 li
952.264 664.371 li
952.264 664.371 li
cp
ef
952.264 620.079 mo
974.408 620.079 li
974.408 642.225 li
952.264 642.225 li
952.264 620.079 li
952.264 620.079 li
cp
ef
952.264 575.788 mo
974.408 575.788 li
974.408 597.935 li
952.264 597.935 li
952.264 575.788 li
952.264 575.788 li
cp
ef
952.264 531.496 mo
974.408 531.496 li
974.408 553.642 li
952.264 553.642 li
952.264 531.496 li
952.264 531.496 li
cp
ef
952.264 487.205 mo
974.408 487.205 li
974.408 509.352 li
952.264 509.352 li
952.264 487.205 li
952.264 487.205 li
cp
ef
952.264 442.915 mo
974.408 442.915 li
974.408 465.061 li
952.264 465.061 li
952.264 442.915 li
952.264 442.915 li
cp
ef
952.264 398.622 mo
974.408 398.622 li
974.408 420.769 li
952.264 420.769 li
952.264 398.622 li
952.264 398.622 li
cp
ef
952.264 354.332 mo
974.408 354.332 li
974.408 376.478 li
952.264 376.478 li
952.264 354.332 li
952.264 354.332 li
cp
ef
952.264 310.039 mo
974.408 310.039 li
974.408 332.186 li
952.264 332.186 li
952.264 310.039 li
952.264 310.039 li
cp
ef
952.264 265.749 mo
974.408 265.749 li
974.408 287.895 li
952.264 287.895 li
952.264 265.749 li
952.264 265.749 li
cp
ef
952.264 221.458 mo
974.408 221.458 li
974.408 243.603 li
952.264 243.603 li
952.264 221.458 li
952.264 221.458 li
cp
ef
952.264 177.166 mo
974.408 177.166 li
974.408 199.312 li
952.264 199.312 li
952.264 177.166 li
952.264 177.166 li
cp
ef
952.264 132.875 mo
974.408 132.875 li
974.408 155.022 li
952.264 155.022 li
952.264 132.875 li
952.264 132.875 li
cp
ef
952.264 88.583 mo
974.408 88.583 li
974.408 110.729 li
952.264 110.729 li
952.264 88.583 li
952.264 88.583 li
cp
ef
952.264 44.2923 mo
974.408 44.2923 li
974.408 66.4387 li
952.264 66.4387 li
952.264 44.2923 li
952.264 44.2923 li
cp
ef
952.264 0 mo
974.408 0 li
974.408 22.1463 li
952.264 22.1463 li
952.264 0 li
952.264 0 li
cp
ef
930.115 863.682 mo
952.264 863.682 li
952.264 885.828 li
930.115 885.828 li
930.115 863.682 li
930.115 863.682 li
cp
ef
930.115 819.391 mo
952.264 819.391 li
952.264 841.537 li
930.115 841.537 li
930.115 819.391 li
930.115 819.391 li
cp
ef
930.115 775.099 mo
952.264 775.099 li
952.264 797.245 li
930.115 797.245 li
930.115 775.099 li
930.115 775.099 li
cp
ef
930.115 730.808 mo
952.264 730.808 li
952.264 752.954 li
930.115 752.954 li
930.115 730.808 li
930.115 730.808 li
cp
ef
930.115 686.516 mo
952.264 686.516 li
952.264 708.662 li
930.115 708.662 li
930.115 686.516 li
930.115 686.516 li
cp
ef
930.115 642.225 mo
952.264 642.225 li
952.264 664.371 li
930.115 664.371 li
930.115 642.225 li
930.115 642.225 li
cp
ef
930.115 597.935 mo
952.264 597.935 li
952.264 620.081 li
930.115 620.081 li
930.115 597.935 li
930.115 597.935 li
cp
ef
930.115 553.642 mo
952.264 553.642 li
952.264 575.788 li
930.115 575.788 li
930.115 553.642 li
930.115 553.642 li
cp
ef
930.115 509.352 mo
952.264 509.352 li
952.264 531.498 li
930.115 531.498 li
930.115 509.352 li
930.115 509.352 li
cp
ef
930.115 465.059 mo
952.264 465.059 li
952.264 487.205 li
930.115 487.205 li
930.115 465.059 li
930.115 465.059 li
cp
ef
930.115 420.769 mo
952.264 420.769 li
952.264 442.915 li
930.115 442.915 li
930.115 420.769 li
930.115 420.769 li
cp
ef
930.115 376.476 mo
952.264 376.476 li
952.264 398.622 li
930.115 398.622 li
930.115 376.476 li
930.115 376.476 li
cp
ef
930.115 332.186 mo
952.264 332.186 li
952.264 354.332 li
930.115 354.332 li
930.115 332.186 li
930.115 332.186 li
cp
ef
930.115 287.895 mo
952.264 287.895 li
952.264 310.041 li
930.115 310.041 li
930.115 287.895 li
930.115 287.895 li
cp
ef
930.115 243.603 mo
952.264 243.603 li
952.264 265.749 li
930.115 265.749 li
930.115 243.603 li
930.115 243.603 li
cp
ef
930.115 199.312 mo
952.264 199.312 li
952.264 221.458 li
930.115 221.458 li
930.115 199.312 li
930.115 199.312 li
cp
ef
930.115 155.02 mo
952.264 155.02 li
952.264 177.166 li
930.115 177.166 li
930.115 155.02 li
930.115 155.02 li
cp
ef
930.115 110.729 mo
952.264 110.729 li
952.264 132.875 li
930.115 132.875 li
930.115 110.729 li
930.115 110.729 li
cp
ef
930.115 66.4387 mo
952.264 66.4387 li
952.264 88.5849 li
930.115 88.5849 li
930.115 66.4387 li
930.115 66.4387 li
cp
ef
930.115 22.1463 mo
952.264 22.1463 li
952.264 44.2923 li
930.115 44.2923 li
930.115 22.1463 li
930.115 22.1463 li
cp
ef
907.971 841.535 mo
930.115 841.535 li
930.115 863.682 li
907.971 863.682 li
907.971 841.535 li
907.971 841.535 li
cp
ef
907.971 797.245 mo
930.115 797.245 li
930.115 819.391 li
907.971 819.391 li
907.971 797.245 li
907.971 797.245 li
cp
ef
907.971 752.952 mo
930.115 752.952 li
930.115 775.101 li
907.971 775.101 li
907.971 752.952 li
907.971 752.952 li
cp
ef
907.971 708.662 mo
930.115 708.662 li
930.115 730.808 li
907.971 730.808 li
907.971 708.662 li
907.971 708.662 li
cp
ef
907.971 664.371 mo
930.115 664.371 li
930.115 686.518 li
907.971 686.518 li
907.971 664.371 li
907.971 664.371 li
cp
ef
907.971 620.079 mo
930.115 620.079 li
930.115 642.225 li
907.971 642.225 li
907.971 620.079 li
907.971 620.079 li
cp
ef
907.971 575.788 mo
930.115 575.788 li
930.115 597.935 li
907.971 597.935 li
907.971 575.788 li
907.971 575.788 li
cp
ef
907.971 531.496 mo
930.115 531.496 li
930.115 553.642 li
907.971 553.642 li
907.971 531.496 li
907.971 531.496 li
cp
ef
907.971 487.205 mo
930.115 487.205 li
930.115 509.352 li
907.971 509.352 li
907.971 487.205 li
907.971 487.205 li
cp
ef
907.971 442.915 mo
930.115 442.915 li
930.115 465.061 li
907.971 465.061 li
907.971 442.915 li
907.971 442.915 li
cp
ef
907.971 398.622 mo
930.115 398.622 li
930.115 420.769 li
907.971 420.769 li
907.971 398.622 li
907.971 398.622 li
cp
ef
907.971 354.332 mo
930.115 354.332 li
930.115 376.478 li
907.971 376.478 li
907.971 354.332 li
907.971 354.332 li
cp
ef
907.971 310.039 mo
930.115 310.039 li
930.115 332.186 li
907.971 332.186 li
907.971 310.039 li
907.971 310.039 li
cp
ef
907.971 265.749 mo
930.115 265.749 li
930.115 287.895 li
907.971 287.895 li
907.971 265.749 li
907.971 265.749 li
cp
ef
907.971 221.458 mo
930.115 221.458 li
930.115 243.603 li
907.971 243.603 li
907.971 221.458 li
907.971 221.458 li
cp
ef
907.971 177.166 mo
930.115 177.166 li
930.115 199.312 li
907.971 199.312 li
907.971 177.166 li
907.971 177.166 li
cp
ef
907.971 132.875 mo
930.115 132.875 li
930.115 155.022 li
907.971 155.022 li
907.971 132.875 li
907.971 132.875 li
cp
ef
907.971 88.583 mo
930.115 88.583 li
930.115 110.729 li
907.971 110.729 li
907.971 88.583 li
907.971 88.583 li
cp
ef
907.971 44.2923 mo
930.115 44.2923 li
930.115 66.4387 li
907.971 66.4387 li
907.971 44.2923 li
907.971 44.2923 li
cp
ef
907.971 0 mo
930.115 0 li
930.115 22.1463 li
907.971 22.1463 li
907.971 0 li
907.971 0 li
cp
ef
885.827 863.682 mo
907.969 863.682 li
907.969 885.828 li
885.827 885.828 li
885.827 863.682 li
885.827 863.682 li
cp
ef
885.827 819.391 mo
907.969 819.391 li
907.969 841.537 li
885.827 841.537 li
885.827 819.391 li
885.827 819.391 li
cp
ef
885.827 775.099 mo
907.969 775.099 li
907.969 797.245 li
885.827 797.245 li
885.827 775.099 li
885.827 775.099 li
cp
ef
885.827 730.808 mo
907.969 730.808 li
907.969 752.954 li
885.827 752.954 li
885.827 730.808 li
885.827 730.808 li
cp
ef
885.827 686.516 mo
907.969 686.516 li
907.969 708.662 li
885.827 708.662 li
885.827 686.516 li
885.827 686.516 li
cp
ef
885.827 642.225 mo
907.969 642.225 li
907.969 664.371 li
885.827 664.371 li
885.827 642.225 li
885.827 642.225 li
cp
ef
885.827 597.935 mo
907.969 597.935 li
907.969 620.081 li
885.827 620.081 li
885.827 597.935 li
885.827 597.935 li
cp
ef
885.827 553.642 mo
907.969 553.642 li
907.969 575.788 li
885.827 575.788 li
885.827 553.642 li
885.827 553.642 li
cp
ef
885.827 509.352 mo
907.969 509.352 li
907.969 531.498 li
885.827 531.498 li
885.827 509.352 li
885.827 509.352 li
cp
ef
885.827 465.059 mo
907.969 465.059 li
907.969 487.205 li
885.827 487.205 li
885.827 465.059 li
885.827 465.059 li
cp
ef
885.827 420.769 mo
907.969 420.769 li
907.969 442.915 li
885.827 442.915 li
885.827 420.769 li
885.827 420.769 li
cp
ef
885.827 376.476 mo
907.969 376.476 li
907.969 398.622 li
885.827 398.622 li
885.827 376.476 li
885.827 376.476 li
cp
ef
885.827 332.186 mo
907.969 332.186 li
907.969 354.332 li
885.827 354.332 li
885.827 332.186 li
885.827 332.186 li
cp
ef
885.827 287.895 mo
907.969 287.895 li
907.969 310.041 li
885.827 310.041 li
885.827 287.895 li
885.827 287.895 li
cp
ef
885.827 243.603 mo
907.969 243.603 li
907.969 265.749 li
885.827 265.749 li
885.827 243.603 li
885.827 243.603 li
cp
ef
885.827 199.312 mo
907.969 199.312 li
907.969 221.458 li
885.827 221.458 li
885.827 199.312 li
885.827 199.312 li
cp
ef
885.827 155.02 mo
907.969 155.02 li
907.969 177.166 li
885.827 177.166 li
885.827 155.02 li
885.827 155.02 li
cp
ef
885.827 110.729 mo
907.969 110.729 li
907.969 132.875 li
885.827 132.875 li
885.827 110.729 li
885.827 110.729 li
cp
ef
885.827 66.4387 mo
907.969 66.4387 li
907.969 88.5849 li
885.827 88.5849 li
885.827 66.4387 li
885.827 66.4387 li
cp
ef
885.827 22.1463 mo
907.969 22.1463 li
907.969 44.2923 li
885.827 44.2923 li
885.827 22.1463 li
885.827 22.1463 li
cp
ef
1040.84 841.535 mo
1062.99 841.535 li
1062.99 863.682 li
1040.84 863.682 li
1040.84 841.535 li
1040.84 841.535 li
cp
ef
1040.84 797.245 mo
1062.99 797.245 li
1062.99 819.391 li
1040.84 819.391 li
1040.84 797.245 li
1040.84 797.245 li
cp
ef
1040.84 752.952 mo
1062.99 752.952 li
1062.99 775.101 li
1040.84 775.101 li
1040.84 752.952 li
1040.84 752.952 li
cp
ef
1040.84 708.662 mo
1062.99 708.662 li
1062.99 730.808 li
1040.84 730.808 li
1040.84 708.662 li
1040.84 708.662 li
cp
ef
1040.84 664.371 mo
1062.99 664.371 li
1062.99 686.518 li
1040.84 686.518 li
1040.84 664.371 li
1040.84 664.371 li
cp
ef
1040.84 620.079 mo
1062.99 620.079 li
1062.99 642.225 li
1040.84 642.225 li
1040.84 620.079 li
1040.84 620.079 li
cp
ef
1040.84 575.788 mo
1062.99 575.788 li
1062.99 597.935 li
1040.84 597.935 li
1040.84 575.788 li
1040.84 575.788 li
cp
ef
1040.84 531.496 mo
1062.99 531.496 li
1062.99 553.642 li
1040.84 553.642 li
1040.84 531.496 li
1040.84 531.496 li
cp
ef
1040.84 487.205 mo
1062.99 487.205 li
1062.99 509.352 li
1040.84 509.352 li
1040.84 487.205 li
1040.84 487.205 li
cp
ef
1040.84 442.915 mo
1062.99 442.915 li
1062.99 465.061 li
1040.84 465.061 li
1040.84 442.915 li
1040.84 442.915 li
cp
ef
1040.84 398.622 mo
1062.99 398.622 li
1062.99 420.769 li
1040.84 420.769 li
1040.84 398.622 li
1040.84 398.622 li
cp
ef
1040.84 354.332 mo
1062.99 354.332 li
1062.99 376.478 li
1040.84 376.478 li
1040.84 354.332 li
1040.84 354.332 li
cp
ef
1040.84 310.039 mo
1062.99 310.039 li
1062.99 332.186 li
1040.84 332.186 li
1040.84 310.039 li
1040.84 310.039 li
cp
ef
1040.84 265.749 mo
1062.99 265.749 li
1062.99 287.895 li
1040.84 287.895 li
1040.84 265.749 li
1040.84 265.749 li
cp
ef
1040.84 221.458 mo
1062.99 221.458 li
1062.99 243.603 li
1040.84 243.603 li
1040.84 221.458 li
1040.84 221.458 li
cp
ef
1040.84 177.166 mo
1062.99 177.166 li
1062.99 199.312 li
1040.84 199.312 li
1040.84 177.166 li
1040.84 177.166 li
cp
ef
1040.84 132.875 mo
1062.99 132.875 li
1062.99 155.022 li
1040.84 155.022 li
1040.84 132.875 li
1040.84 132.875 li
cp
ef
1040.84 88.583 mo
1062.99 88.583 li
1062.99 110.729 li
1040.84 110.729 li
1040.84 88.583 li
1040.84 88.583 li
cp
ef
1040.84 44.2923 mo
1062.99 44.2923 li
1062.99 66.4387 li
1040.84 66.4387 li
1040.84 44.2923 li
1040.84 44.2923 li
cp
ef
1040.84 0 mo
1062.99 0 li
1062.99 22.1463 li
1040.84 22.1463 li
1040.84 0 li
1040.84 0 li
cp
ef
1018.7 863.682 mo
1040.84 863.682 li
1040.84 885.828 li
1018.7 885.828 li
1018.7 863.682 li
1018.7 863.682 li
cp
ef
1018.7 819.391 mo
1040.84 819.391 li
1040.84 841.537 li
1018.7 841.537 li
1018.7 819.391 li
1018.7 819.391 li
cp
ef
1018.7 775.099 mo
1040.84 775.099 li
1040.84 797.245 li
1018.7 797.245 li
1018.7 775.099 li
1018.7 775.099 li
cp
ef
1018.7 730.808 mo
1040.84 730.808 li
1040.84 752.954 li
1018.7 752.954 li
1018.7 730.808 li
1018.7 730.808 li
cp
ef
1018.7 686.516 mo
1040.84 686.516 li
1040.84 708.662 li
1018.7 708.662 li
1018.7 686.516 li
1018.7 686.516 li
cp
ef
1018.7 642.225 mo
1040.84 642.225 li
1040.84 664.371 li
1018.7 664.371 li
1018.7 642.225 li
1018.7 642.225 li
cp
ef
1018.7 597.935 mo
1040.84 597.935 li
1040.84 620.081 li
1018.7 620.081 li
1018.7 597.935 li
1018.7 597.935 li
cp
ef
1018.7 553.642 mo
1040.84 553.642 li
1040.84 575.788 li
1018.7 575.788 li
1018.7 553.642 li
1018.7 553.642 li
cp
ef
1018.7 509.352 mo
1040.84 509.352 li
1040.84 531.498 li
1018.7 531.498 li
1018.7 509.352 li
1018.7 509.352 li
cp
ef
1018.7 465.059 mo
1040.84 465.059 li
1040.84 487.205 li
1018.7 487.205 li
1018.7 465.059 li
1018.7 465.059 li
cp
ef
1018.7 420.769 mo
1040.84 420.769 li
1040.84 442.915 li
1018.7 442.915 li
1018.7 420.769 li
1018.7 420.769 li
cp
ef
1018.7 376.476 mo
1040.84 376.476 li
1040.84 398.622 li
1018.7 398.622 li
1018.7 376.476 li
1018.7 376.476 li
cp
ef
1018.7 332.186 mo
1040.84 332.186 li
1040.84 354.332 li
1018.7 354.332 li
1018.7 332.186 li
1018.7 332.186 li
cp
ef
1018.7 287.895 mo
1040.84 287.895 li
1040.84 310.041 li
1018.7 310.041 li
1018.7 287.895 li
1018.7 287.895 li
cp
ef
1018.7 243.603 mo
1040.84 243.603 li
1040.84 265.749 li
1018.7 265.749 li
1018.7 243.603 li
1018.7 243.603 li
cp
ef
1018.7 199.312 mo
1040.84 199.312 li
1040.84 221.458 li
1018.7 221.458 li
1018.7 199.312 li
1018.7 199.312 li
cp
ef
1018.7 155.02 mo
1040.84 155.02 li
1040.84 177.166 li
1018.7 177.166 li
1018.7 155.02 li
1018.7 155.02 li
cp
ef
1018.7 110.729 mo
1040.84 110.729 li
1040.84 132.875 li
1018.7 132.875 li
1018.7 110.729 li
1018.7 110.729 li
cp
ef
1018.7 66.4387 mo
1040.84 66.4387 li
1040.84 88.5849 li
1018.7 88.5849 li
1018.7 66.4387 li
1018.7 66.4387 li
cp
ef
1018.7 22.1463 mo
1040.84 22.1463 li
1040.84 44.2923 li
1018.7 44.2923 li
1018.7 22.1463 li
1018.7 22.1463 li
cp
ef
996.552 841.535 mo
1018.7 841.535 li
1018.7 863.682 li
996.552 863.682 li
996.552 841.535 li
996.552 841.535 li
cp
ef
996.552 797.245 mo
1018.7 797.245 li
1018.7 819.391 li
996.552 819.391 li
996.552 797.245 li
996.552 797.245 li
cp
ef
996.552 752.952 mo
1018.7 752.952 li
1018.7 775.101 li
996.552 775.101 li
996.552 752.952 li
996.552 752.952 li
cp
ef
996.552 708.662 mo
1018.7 708.662 li
1018.7 730.808 li
996.552 730.808 li
996.552 708.662 li
996.552 708.662 li
cp
ef
996.552 664.371 mo
1018.7 664.371 li
1018.7 686.518 li
996.552 686.518 li
996.552 664.371 li
996.552 664.371 li
cp
ef
996.552 620.079 mo
1018.7 620.079 li
1018.7 642.225 li
996.552 642.225 li
996.552 620.079 li
996.552 620.079 li
cp
ef
996.552 575.788 mo
1018.7 575.788 li
1018.7 597.935 li
996.552 597.935 li
996.552 575.788 li
996.552 575.788 li
cp
ef
996.552 531.496 mo
1018.7 531.496 li
1018.7 553.642 li
996.552 553.642 li
996.552 531.496 li
996.552 531.496 li
cp
ef
996.552 487.205 mo
1018.7 487.205 li
1018.7 509.352 li
996.552 509.352 li
996.552 487.205 li
996.552 487.205 li
cp
ef
996.552 442.915 mo
1018.7 442.915 li
1018.7 465.061 li
996.552 465.061 li
996.552 442.915 li
996.552 442.915 li
cp
ef
996.552 398.622 mo
1018.7 398.622 li
1018.7 420.769 li
996.552 420.769 li
996.552 398.622 li
996.552 398.622 li
cp
ef
996.552 354.332 mo
1018.7 354.332 li
1018.7 376.478 li
996.552 376.478 li
996.552 354.332 li
996.552 354.332 li
cp
ef
996.552 310.039 mo
1018.7 310.039 li
1018.7 332.186 li
996.552 332.186 li
996.552 310.039 li
996.552 310.039 li
cp
ef
996.552 265.749 mo
1018.7 265.749 li
1018.7 287.895 li
996.552 287.895 li
996.552 265.749 li
996.552 265.749 li
cp
ef
996.552 221.458 mo
1018.7 221.458 li
1018.7 243.603 li
996.552 243.603 li
996.552 221.458 li
996.552 221.458 li
cp
ef
996.552 177.166 mo
1018.7 177.166 li
1018.7 199.312 li
996.552 199.312 li
996.552 177.166 li
996.552 177.166 li
cp
ef
996.552 132.875 mo
1018.7 132.875 li
1018.7 155.022 li
996.552 155.022 li
996.552 132.875 li
996.552 132.875 li
cp
ef
996.552 88.583 mo
1018.7 88.583 li
1018.7 110.729 li
996.552 110.729 li
996.552 88.583 li
996.552 88.583 li
cp
ef
996.552 44.2923 mo
1018.7 44.2923 li
1018.7 66.4387 li
996.552 66.4387 li
996.552 44.2923 li
996.552 44.2923 li
cp
ef
996.552 0 mo
1018.7 0 li
1018.7 22.1463 li
996.552 22.1463 li
996.552 0 li
996.552 0 li
cp
ef
974.408 863.682 mo
996.552 863.682 li
996.552 885.828 li
974.408 885.828 li
974.408 863.682 li
974.408 863.682 li
cp
ef
974.408 819.391 mo
996.552 819.391 li
996.552 841.537 li
974.408 841.537 li
974.408 819.391 li
974.408 819.391 li
cp
ef
974.408 775.099 mo
996.552 775.099 li
996.552 797.245 li
974.408 797.245 li
974.408 775.099 li
974.408 775.099 li
cp
ef
974.408 730.808 mo
996.552 730.808 li
996.552 752.954 li
974.408 752.954 li
974.408 730.808 li
974.408 730.808 li
cp
ef
974.408 686.516 mo
996.552 686.516 li
996.552 708.662 li
974.408 708.662 li
974.408 686.516 li
974.408 686.516 li
cp
ef
974.408 642.225 mo
996.552 642.225 li
996.552 664.371 li
974.408 664.371 li
974.408 642.225 li
974.408 642.225 li
cp
ef
974.408 597.935 mo
996.552 597.935 li
996.552 620.081 li
974.408 620.081 li
974.408 597.935 li
974.408 597.935 li
cp
ef
974.408 553.642 mo
996.552 553.642 li
996.552 575.788 li
974.408 575.788 li
974.408 553.642 li
974.408 553.642 li
cp
ef
974.408 509.352 mo
996.552 509.352 li
996.552 531.498 li
974.408 531.498 li
974.408 509.352 li
974.408 509.352 li
cp
ef
974.408 465.059 mo
996.552 465.059 li
996.552 487.205 li
974.408 487.205 li
974.408 465.059 li
974.408 465.059 li
cp
ef
974.408 420.769 mo
996.552 420.769 li
996.552 442.915 li
974.408 442.915 li
974.408 420.769 li
974.408 420.769 li
cp
ef
974.408 376.476 mo
996.552 376.476 li
996.552 398.622 li
974.408 398.622 li
974.408 376.476 li
974.408 376.476 li
cp
ef
974.408 332.186 mo
996.552 332.186 li
996.552 354.332 li
974.408 354.332 li
974.408 332.186 li
974.408 332.186 li
cp
ef
974.408 287.895 mo
996.552 287.895 li
996.552 310.041 li
974.408 310.041 li
974.408 287.895 li
974.408 287.895 li
cp
ef
974.408 243.603 mo
996.552 243.603 li
996.552 265.749 li
974.408 265.749 li
974.408 243.603 li
974.408 243.603 li
cp
ef
974.408 199.312 mo
996.552 199.312 li
996.552 221.458 li
974.408 221.458 li
974.408 199.312 li
974.408 199.312 li
cp
ef
974.408 155.02 mo
996.552 155.02 li
996.552 177.166 li
974.408 177.166 li
974.408 155.02 li
974.408 155.02 li
cp
ef
974.408 110.729 mo
996.552 110.729 li
996.552 132.875 li
974.408 132.875 li
974.408 110.729 li
974.408 110.729 li
cp
ef
974.408 66.4387 mo
996.552 66.4387 li
996.552 88.5849 li
974.408 88.5849 li
974.408 66.4387 li
974.408 66.4387 li
cp
ef
974.408 22.1463 mo
996.552 22.1463 li
996.552 44.2923 li
974.408 44.2923 li
974.408 22.1463 li
974.408 22.1463 li
cp
ef
1129.43 841.535 mo
1151.57 841.535 li
1151.57 863.682 li
1129.43 863.682 li
1129.43 841.535 li
1129.43 841.535 li
cp
ef
1129.43 797.245 mo
1151.57 797.245 li
1151.57 819.391 li
1129.43 819.391 li
1129.43 797.245 li
1129.43 797.245 li
cp
ef
1129.43 752.952 mo
1151.57 752.952 li
1151.57 775.101 li
1129.43 775.101 li
1129.43 752.952 li
1129.43 752.952 li
cp
ef
1129.43 708.662 mo
1151.57 708.662 li
1151.57 730.808 li
1129.43 730.808 li
1129.43 708.662 li
1129.43 708.662 li
cp
ef
1129.43 664.371 mo
1151.57 664.371 li
1151.57 686.518 li
1129.43 686.518 li
1129.43 664.371 li
1129.43 664.371 li
cp
ef
1129.43 620.079 mo
1151.57 620.079 li
1151.57 642.225 li
1129.43 642.225 li
1129.43 620.079 li
1129.43 620.079 li
cp
ef
1129.43 575.788 mo
1151.57 575.788 li
1151.57 597.935 li
1129.43 597.935 li
1129.43 575.788 li
1129.43 575.788 li
cp
ef
1129.43 531.496 mo
1151.57 531.496 li
1151.57 553.642 li
1129.43 553.642 li
1129.43 531.496 li
1129.43 531.496 li
cp
ef
1129.43 487.205 mo
1151.57 487.205 li
1151.57 509.352 li
1129.43 509.352 li
1129.43 487.205 li
1129.43 487.205 li
cp
ef
1129.43 442.915 mo
1151.57 442.915 li
1151.57 465.061 li
1129.43 465.061 li
1129.43 442.915 li
1129.43 442.915 li
cp
ef
1129.43 398.622 mo
1151.57 398.622 li
1151.57 420.769 li
1129.43 420.769 li
1129.43 398.622 li
1129.43 398.622 li
cp
ef
1129.43 354.332 mo
1151.57 354.332 li
1151.57 376.478 li
1129.43 376.478 li
1129.43 354.332 li
1129.43 354.332 li
cp
ef
1129.43 310.039 mo
1151.57 310.039 li
1151.57 332.186 li
1129.43 332.186 li
1129.43 310.039 li
1129.43 310.039 li
cp
ef
1129.43 265.749 mo
1151.57 265.749 li
1151.57 287.895 li
1129.43 287.895 li
1129.43 265.749 li
1129.43 265.749 li
cp
ef
1129.43 221.458 mo
1151.57 221.458 li
1151.57 243.603 li
1129.43 243.603 li
1129.43 221.458 li
1129.43 221.458 li
cp
ef
1129.43 177.166 mo
1151.57 177.166 li
1151.57 199.312 li
1129.43 199.312 li
1129.43 177.166 li
1129.43 177.166 li
cp
ef
1129.43 132.875 mo
1151.57 132.875 li
1151.57 155.022 li
1129.43 155.022 li
1129.43 132.875 li
1129.43 132.875 li
cp
ef
1129.43 88.583 mo
1151.57 88.583 li
1151.57 110.729 li
1129.43 110.729 li
1129.43 88.583 li
1129.43 88.583 li
cp
ef
1129.43 44.2923 mo
1151.57 44.2923 li
1151.57 66.4387 li
1129.43 66.4387 li
1129.43 44.2923 li
1129.43 44.2923 li
cp
ef
1129.43 0 mo
1151.57 0 li
1151.57 22.1463 li
1129.43 22.1463 li
1129.43 0 li
1129.43 0 li
cp
ef
1107.28 863.682 mo
1129.43 863.682 li
1129.43 885.828 li
1107.28 885.828 li
1107.28 863.682 li
1107.28 863.682 li
cp
ef
1107.28 819.391 mo
1129.43 819.391 li
1129.43 841.537 li
1107.28 841.537 li
1107.28 819.391 li
1107.28 819.391 li
cp
ef
1107.28 775.099 mo
1129.43 775.099 li
1129.43 797.245 li
1107.28 797.245 li
1107.28 775.099 li
1107.28 775.099 li
cp
ef
1107.28 730.808 mo
1129.43 730.808 li
1129.43 752.954 li
1107.28 752.954 li
1107.28 730.808 li
1107.28 730.808 li
cp
ef
1107.28 686.516 mo
1129.43 686.516 li
1129.43 708.662 li
1107.28 708.662 li
1107.28 686.516 li
1107.28 686.516 li
cp
ef
1107.28 642.225 mo
1129.43 642.225 li
1129.43 664.371 li
1107.28 664.371 li
1107.28 642.225 li
1107.28 642.225 li
cp
ef
1107.28 597.935 mo
1129.43 597.935 li
1129.43 620.081 li
1107.28 620.081 li
1107.28 597.935 li
1107.28 597.935 li
cp
ef
1107.28 553.642 mo
1129.43 553.642 li
1129.43 575.788 li
1107.28 575.788 li
1107.28 553.642 li
1107.28 553.642 li
cp
ef
1107.28 509.352 mo
1129.43 509.352 li
1129.43 531.498 li
1107.28 531.498 li
1107.28 509.352 li
1107.28 509.352 li
cp
ef
1107.28 465.059 mo
1129.43 465.059 li
1129.43 487.205 li
1107.28 487.205 li
1107.28 465.059 li
1107.28 465.059 li
cp
ef
1107.28 420.769 mo
1129.43 420.769 li
1129.43 442.915 li
1107.28 442.915 li
1107.28 420.769 li
1107.28 420.769 li
cp
ef
1107.28 376.476 mo
1129.43 376.476 li
1129.43 398.622 li
1107.28 398.622 li
1107.28 376.476 li
1107.28 376.476 li
cp
ef
1107.28 332.186 mo
1129.43 332.186 li
1129.43 354.332 li
1107.28 354.332 li
1107.28 332.186 li
1107.28 332.186 li
cp
ef
1107.28 287.895 mo
1129.43 287.895 li
1129.43 310.041 li
1107.28 310.041 li
1107.28 287.895 li
1107.28 287.895 li
cp
ef
1107.28 243.603 mo
1129.43 243.603 li
1129.43 265.749 li
1107.28 265.749 li
1107.28 243.603 li
1107.28 243.603 li
cp
ef
1107.28 199.312 mo
1129.43 199.312 li
1129.43 221.458 li
1107.28 221.458 li
1107.28 199.312 li
1107.28 199.312 li
cp
ef
1107.28 155.02 mo
1129.43 155.02 li
1129.43 177.166 li
1107.28 177.166 li
1107.28 155.02 li
1107.28 155.02 li
cp
ef
1107.28 110.729 mo
1129.43 110.729 li
1129.43 132.875 li
1107.28 132.875 li
1107.28 110.729 li
1107.28 110.729 li
cp
ef
1107.28 66.4387 mo
1129.43 66.4387 li
1129.43 88.5849 li
1107.28 88.5849 li
1107.28 66.4387 li
1107.28 66.4387 li
cp
ef
1107.28 22.1463 mo
1129.43 22.1463 li
1129.43 44.2923 li
1107.28 44.2923 li
1107.28 22.1463 li
1107.28 22.1463 li
cp
ef
1085.14 841.535 mo
1107.28 841.535 li
1107.28 863.682 li
1085.14 863.682 li
1085.14 841.535 li
1085.14 841.535 li
cp
ef
1085.14 797.245 mo
1107.28 797.245 li
1107.28 819.391 li
1085.14 819.391 li
1085.14 797.245 li
1085.14 797.245 li
cp
ef
1085.14 752.952 mo
1107.28 752.952 li
1107.28 775.101 li
1085.14 775.101 li
1085.14 752.952 li
1085.14 752.952 li
cp
ef
1085.14 708.662 mo
1107.28 708.662 li
1107.28 730.808 li
1085.14 730.808 li
1085.14 708.662 li
1085.14 708.662 li
cp
ef
1085.14 664.371 mo
1107.28 664.371 li
1107.28 686.518 li
1085.14 686.518 li
1085.14 664.371 li
1085.14 664.371 li
cp
ef
1085.14 620.079 mo
1107.28 620.079 li
1107.28 642.225 li
1085.14 642.225 li
1085.14 620.079 li
1085.14 620.079 li
cp
ef
1085.14 575.788 mo
1107.28 575.788 li
1107.28 597.935 li
1085.14 597.935 li
1085.14 575.788 li
1085.14 575.788 li
cp
ef
1085.14 531.496 mo
1107.28 531.496 li
1107.28 553.642 li
1085.14 553.642 li
1085.14 531.496 li
1085.14 531.496 li
cp
ef
1085.14 487.205 mo
1107.28 487.205 li
1107.28 509.352 li
1085.14 509.352 li
1085.14 487.205 li
1085.14 487.205 li
cp
ef
1085.14 442.915 mo
1107.28 442.915 li
1107.28 465.061 li
1085.14 465.061 li
1085.14 442.915 li
1085.14 442.915 li
cp
ef
1085.14 398.622 mo
1107.28 398.622 li
1107.28 420.769 li
1085.14 420.769 li
1085.14 398.622 li
1085.14 398.622 li
cp
ef
1085.14 354.332 mo
1107.28 354.332 li
1107.28 376.478 li
1085.14 376.478 li
1085.14 354.332 li
1085.14 354.332 li
cp
ef
1085.14 310.039 mo
1107.28 310.039 li
1107.28 332.186 li
1085.14 332.186 li
1085.14 310.039 li
1085.14 310.039 li
cp
ef
1085.14 265.749 mo
1107.28 265.749 li
1107.28 287.895 li
1085.14 287.895 li
1085.14 265.749 li
1085.14 265.749 li
cp
ef
1085.14 221.458 mo
1107.28 221.458 li
1107.28 243.603 li
1085.14 243.603 li
1085.14 221.458 li
1085.14 221.458 li
cp
ef
1085.14 177.166 mo
1107.28 177.166 li
1107.28 199.312 li
1085.14 199.312 li
1085.14 177.166 li
1085.14 177.166 li
cp
ef
1085.14 132.875 mo
1107.28 132.875 li
1107.28 155.022 li
1085.14 155.022 li
1085.14 132.875 li
1085.14 132.875 li
cp
ef
1085.14 88.583 mo
1107.28 88.583 li
1107.28 110.729 li
1085.14 110.729 li
1085.14 88.583 li
1085.14 88.583 li
cp
ef
1085.14 44.2923 mo
1107.28 44.2923 li
1107.28 66.4387 li
1085.14 66.4387 li
1085.14 44.2923 li
1085.14 44.2923 li
cp
ef
1085.14 0 mo
1107.28 0 li
1107.28 22.1463 li
1085.14 22.1463 li
1085.14 0 li
1085.14 0 li
cp
ef
1062.99 863.682 mo
1085.14 863.682 li
1085.14 885.828 li
1062.99 885.828 li
1062.99 863.682 li
1062.99 863.682 li
cp
ef
1062.99 819.391 mo
1085.14 819.391 li
1085.14 841.537 li
1062.99 841.537 li
1062.99 819.391 li
1062.99 819.391 li
cp
ef
1062.99 775.099 mo
1085.14 775.099 li
1085.14 797.245 li
1062.99 797.245 li
1062.99 775.099 li
1062.99 775.099 li
cp
ef
1062.99 730.808 mo
1085.14 730.808 li
1085.14 752.954 li
1062.99 752.954 li
1062.99 730.808 li
1062.99 730.808 li
cp
ef
1062.99 686.516 mo
1085.14 686.516 li
1085.14 708.662 li
1062.99 708.662 li
1062.99 686.516 li
1062.99 686.516 li
cp
ef
1062.99 642.225 mo
1085.14 642.225 li
1085.14 664.371 li
1062.99 664.371 li
1062.99 642.225 li
1062.99 642.225 li
cp
ef
1062.99 597.935 mo
1085.14 597.935 li
1085.14 620.081 li
1062.99 620.081 li
1062.99 597.935 li
1062.99 597.935 li
cp
ef
1062.99 553.642 mo
1085.14 553.642 li
1085.14 575.788 li
1062.99 575.788 li
1062.99 553.642 li
1062.99 553.642 li
cp
ef
1062.99 509.352 mo
1085.14 509.352 li
1085.14 531.498 li
1062.99 531.498 li
1062.99 509.352 li
1062.99 509.352 li
cp
ef
1062.99 465.059 mo
1085.14 465.059 li
1085.14 487.205 li
1062.99 487.205 li
1062.99 465.059 li
1062.99 465.059 li
cp
ef
1062.99 420.769 mo
1085.14 420.769 li
1085.14 442.915 li
1062.99 442.915 li
1062.99 420.769 li
1062.99 420.769 li
cp
ef
1062.99 376.476 mo
1085.14 376.476 li
1085.14 398.622 li
1062.99 398.622 li
1062.99 376.476 li
1062.99 376.476 li
cp
ef
1062.99 332.186 mo
1085.14 332.186 li
1085.14 354.332 li
1062.99 354.332 li
1062.99 332.186 li
1062.99 332.186 li
cp
ef
1062.99 287.895 mo
1085.14 287.895 li
1085.14 310.041 li
1062.99 310.041 li
1062.99 287.895 li
1062.99 287.895 li
cp
ef
1062.99 243.603 mo
1085.14 243.603 li
1085.14 265.749 li
1062.99 265.749 li
1062.99 243.603 li
1062.99 243.603 li
cp
ef
1062.99 199.312 mo
1085.14 199.312 li
1085.14 221.458 li
1062.99 221.458 li
1062.99 199.312 li
1062.99 199.312 li
cp
ef
1062.99 155.02 mo
1085.14 155.02 li
1085.14 177.166 li
1062.99 177.166 li
1062.99 155.02 li
1062.99 155.02 li
cp
ef
1062.99 110.729 mo
1085.14 110.729 li
1085.14 132.875 li
1062.99 132.875 li
1062.99 110.729 li
1062.99 110.729 li
cp
ef
1062.99 66.4387 mo
1085.14 66.4387 li
1085.14 88.5849 li
1062.99 88.5849 li
1062.99 66.4387 li
1062.99 66.4387 li
cp
ef
1062.99 22.1463 mo
1085.14 22.1463 li
1085.14 44.2923 li
1062.99 44.2923 li
1062.99 22.1463 li
1062.99 22.1463 li
cp
ef
1218.01 841.535 mo
1240.15 841.535 li
1240.15 863.682 li
1218.01 863.682 li
1218.01 841.535 li
1218.01 841.535 li
cp
ef
1218.01 797.245 mo
1240.15 797.245 li
1240.15 819.391 li
1218.01 819.391 li
1218.01 797.245 li
1218.01 797.245 li
cp
ef
1218.01 752.952 mo
1240.15 752.952 li
1240.15 775.101 li
1218.01 775.101 li
1218.01 752.952 li
1218.01 752.952 li
cp
ef
1218.01 708.662 mo
1240.15 708.662 li
1240.15 730.808 li
1218.01 730.808 li
1218.01 708.662 li
1218.01 708.662 li
cp
ef
1218.01 664.371 mo
1240.15 664.371 li
1240.15 686.518 li
1218.01 686.518 li
1218.01 664.371 li
1218.01 664.371 li
cp
ef
1218.01 620.079 mo
1240.15 620.079 li
1240.15 642.225 li
1218.01 642.225 li
1218.01 620.079 li
1218.01 620.079 li
cp
ef
1218.01 575.788 mo
1240.15 575.788 li
1240.15 597.935 li
1218.01 597.935 li
1218.01 575.788 li
1218.01 575.788 li
cp
ef
1218.01 531.496 mo
1240.15 531.496 li
1240.15 553.642 li
1218.01 553.642 li
1218.01 531.496 li
1218.01 531.496 li
cp
ef
1218.01 487.205 mo
1240.15 487.205 li
1240.15 509.352 li
1218.01 509.352 li
1218.01 487.205 li
1218.01 487.205 li
cp
ef
1218.01 442.915 mo
1240.15 442.915 li
1240.15 465.061 li
1218.01 465.061 li
1218.01 442.915 li
1218.01 442.915 li
cp
ef
1218.01 398.622 mo
1240.15 398.622 li
1240.15 420.769 li
1218.01 420.769 li
1218.01 398.622 li
1218.01 398.622 li
cp
ef
1218.01 354.332 mo
1240.15 354.332 li
1240.15 376.478 li
1218.01 376.478 li
1218.01 354.332 li
1218.01 354.332 li
cp
ef
1218.01 310.039 mo
1240.15 310.039 li
1240.15 332.186 li
1218.01 332.186 li
1218.01 310.039 li
1218.01 310.039 li
cp
ef
1218.01 265.749 mo
1240.15 265.749 li
1240.15 287.895 li
1218.01 287.895 li
1218.01 265.749 li
1218.01 265.749 li
cp
ef
1218.01 221.458 mo
1240.15 221.458 li
1240.15 243.603 li
1218.01 243.603 li
1218.01 221.458 li
1218.01 221.458 li
cp
ef
1218.01 177.166 mo
1240.15 177.166 li
1240.15 199.312 li
1218.01 199.312 li
1218.01 177.166 li
1218.01 177.166 li
cp
ef
1218.01 132.875 mo
1240.15 132.875 li
1240.15 155.022 li
1218.01 155.022 li
1218.01 132.875 li
1218.01 132.875 li
cp
ef
1218.01 88.583 mo
1240.15 88.583 li
1240.15 110.729 li
1218.01 110.729 li
1218.01 88.583 li
1218.01 88.583 li
cp
ef
1218.01 44.2923 mo
1240.15 44.2923 li
1240.15 66.4387 li
1218.01 66.4387 li
1218.01 44.2923 li
1218.01 44.2923 li
cp
ef
1218.01 0 mo
1240.15 0 li
1240.15 22.1463 li
1218.01 22.1463 li
1218.01 0 li
1218.01 0 li
cp
ef
1195.86 863.682 mo
1218.01 863.682 li
1218.01 885.828 li
1195.86 885.828 li
1195.86 863.682 li
1195.86 863.682 li
cp
ef
1195.86 819.391 mo
1218.01 819.391 li
1218.01 841.537 li
1195.86 841.537 li
1195.86 819.391 li
1195.86 819.391 li
cp
ef
1195.86 775.099 mo
1218.01 775.099 li
1218.01 797.245 li
1195.86 797.245 li
1195.86 775.099 li
1195.86 775.099 li
cp
ef
1195.86 730.808 mo
1218.01 730.808 li
1218.01 752.954 li
1195.86 752.954 li
1195.86 730.808 li
1195.86 730.808 li
cp
ef
1195.86 686.516 mo
1218.01 686.516 li
1218.01 708.662 li
1195.86 708.662 li
1195.86 686.516 li
1195.86 686.516 li
cp
ef
1195.86 642.225 mo
1218.01 642.225 li
1218.01 664.371 li
1195.86 664.371 li
1195.86 642.225 li
1195.86 642.225 li
cp
ef
1195.86 597.935 mo
1218.01 597.935 li
1218.01 620.081 li
1195.86 620.081 li
1195.86 597.935 li
1195.86 597.935 li
cp
ef
1195.86 553.642 mo
1218.01 553.642 li
1218.01 575.788 li
1195.86 575.788 li
1195.86 553.642 li
1195.86 553.642 li
cp
ef
1195.86 509.352 mo
1218.01 509.352 li
1218.01 531.498 li
1195.86 531.498 li
1195.86 509.352 li
1195.86 509.352 li
cp
ef
1195.86 465.059 mo
1218.01 465.059 li
1218.01 487.205 li
1195.86 487.205 li
1195.86 465.059 li
1195.86 465.059 li
cp
ef
1195.86 420.769 mo
1218.01 420.769 li
1218.01 442.915 li
1195.86 442.915 li
1195.86 420.769 li
1195.86 420.769 li
cp
ef
1195.86 376.476 mo
1218.01 376.476 li
1218.01 398.622 li
1195.86 398.622 li
1195.86 376.476 li
1195.86 376.476 li
cp
ef
1195.86 332.186 mo
1218.01 332.186 li
1218.01 354.332 li
1195.86 354.332 li
1195.86 332.186 li
1195.86 332.186 li
cp
ef
1195.86 287.895 mo
1218.01 287.895 li
1218.01 310.041 li
1195.86 310.041 li
1195.86 287.895 li
1195.86 287.895 li
cp
ef
1195.86 243.603 mo
1218.01 243.603 li
1218.01 265.749 li
1195.86 265.749 li
1195.86 243.603 li
1195.86 243.603 li
cp
ef
1195.86 199.312 mo
1218.01 199.312 li
1218.01 221.458 li
1195.86 221.458 li
1195.86 199.312 li
1195.86 199.312 li
cp
ef
1195.86 155.02 mo
1218.01 155.02 li
1218.01 177.166 li
1195.86 177.166 li
1195.86 155.02 li
1195.86 155.02 li
cp
ef
1195.86 110.729 mo
1218.01 110.729 li
1218.01 132.875 li
1195.86 132.875 li
1195.86 110.729 li
1195.86 110.729 li
cp
ef
1195.86 66.4387 mo
1218.01 66.4387 li
1218.01 88.5849 li
1195.86 88.5849 li
1195.86 66.4387 li
1195.86 66.4387 li
cp
ef
1195.86 22.1463 mo
1218.01 22.1463 li
1218.01 44.2923 li
1195.86 44.2923 li
1195.86 22.1463 li
1195.86 22.1463 li
cp
ef
1173.72 841.535 mo
1195.86 841.535 li
1195.86 863.682 li
1173.72 863.682 li
1173.72 841.535 li
1173.72 841.535 li
cp
ef
1173.72 797.245 mo
1195.86 797.245 li
1195.86 819.391 li
1173.72 819.391 li
1173.72 797.245 li
1173.72 797.245 li
cp
ef
1173.72 752.952 mo
1195.86 752.952 li
1195.86 775.101 li
1173.72 775.101 li
1173.72 752.952 li
1173.72 752.952 li
cp
ef
1173.72 708.662 mo
1195.86 708.662 li
1195.86 730.808 li
1173.72 730.808 li
1173.72 708.662 li
1173.72 708.662 li
cp
ef
1173.72 664.371 mo
1195.86 664.371 li
1195.86 686.518 li
1173.72 686.518 li
1173.72 664.371 li
1173.72 664.371 li
cp
ef
1173.72 620.079 mo
1195.86 620.079 li
1195.86 642.225 li
1173.72 642.225 li
1173.72 620.079 li
1173.72 620.079 li
cp
ef
1173.72 575.788 mo
1195.86 575.788 li
1195.86 597.935 li
1173.72 597.935 li
1173.72 575.788 li
1173.72 575.788 li
cp
ef
1173.72 531.496 mo
1195.86 531.496 li
1195.86 553.642 li
1173.72 553.642 li
1173.72 531.496 li
1173.72 531.496 li
cp
ef
1173.72 487.205 mo
1195.86 487.205 li
1195.86 509.352 li
1173.72 509.352 li
1173.72 487.205 li
1173.72 487.205 li
cp
ef
1173.72 442.915 mo
1195.86 442.915 li
1195.86 465.061 li
1173.72 465.061 li
1173.72 442.915 li
1173.72 442.915 li
cp
ef
1173.72 398.622 mo
1195.86 398.622 li
1195.86 420.769 li
1173.72 420.769 li
1173.72 398.622 li
1173.72 398.622 li
cp
ef
1173.72 354.332 mo
1195.86 354.332 li
1195.86 376.478 li
1173.72 376.478 li
1173.72 354.332 li
1173.72 354.332 li
cp
ef
1173.72 310.039 mo
1195.86 310.039 li
1195.86 332.186 li
1173.72 332.186 li
1173.72 310.039 li
1173.72 310.039 li
cp
ef
1173.72 265.749 mo
1195.86 265.749 li
1195.86 287.895 li
1173.72 287.895 li
1173.72 265.749 li
1173.72 265.749 li
cp
ef
1173.72 221.458 mo
1195.86 221.458 li
1195.86 243.603 li
1173.72 243.603 li
1173.72 221.458 li
1173.72 221.458 li
cp
ef
1173.72 177.166 mo
1195.86 177.166 li
1195.86 199.312 li
1173.72 199.312 li
1173.72 177.166 li
1173.72 177.166 li
cp
ef
1173.72 132.875 mo
1195.86 132.875 li
1195.86 155.022 li
1173.72 155.022 li
1173.72 132.875 li
1173.72 132.875 li
cp
ef
1173.72 88.583 mo
1195.86 88.583 li
1195.86 110.729 li
1173.72 110.729 li
1173.72 88.583 li
1173.72 88.583 li
cp
ef
1173.72 44.2923 mo
1195.86 44.2923 li
1195.86 66.4387 li
1173.72 66.4387 li
1173.72 44.2923 li
1173.72 44.2923 li
cp
ef
1173.72 0 mo
1195.86 0 li
1195.86 22.1463 li
1173.72 22.1463 li
1173.72 0 li
1173.72 0 li
cp
ef
1151.57 863.682 mo
1173.72 863.682 li
1173.72 885.828 li
1151.57 885.828 li
1151.57 863.682 li
1151.57 863.682 li
cp
ef
1151.57 819.391 mo
1173.72 819.391 li
1173.72 841.537 li
1151.57 841.537 li
1151.57 819.391 li
1151.57 819.391 li
cp
ef
1151.57 775.099 mo
1173.72 775.099 li
1173.72 797.245 li
1151.57 797.245 li
1151.57 775.099 li
1151.57 775.099 li
cp
ef
1151.57 730.808 mo
1173.72 730.808 li
1173.72 752.954 li
1151.57 752.954 li
1151.57 730.808 li
1151.57 730.808 li
cp
ef
1151.57 686.516 mo
1173.72 686.516 li
1173.72 708.662 li
1151.57 708.662 li
1151.57 686.516 li
1151.57 686.516 li
cp
ef
1151.57 642.225 mo
1173.72 642.225 li
1173.72 664.371 li
1151.57 664.371 li
1151.57 642.225 li
1151.57 642.225 li
cp
ef
1151.57 597.935 mo
1173.72 597.935 li
1173.72 620.081 li
1151.57 620.081 li
1151.57 597.935 li
1151.57 597.935 li
cp
ef
1151.57 553.642 mo
1173.72 553.642 li
1173.72 575.788 li
1151.57 575.788 li
1151.57 553.642 li
1151.57 553.642 li
cp
ef
1151.57 509.352 mo
1173.72 509.352 li
1173.72 531.498 li
1151.57 531.498 li
1151.57 509.352 li
1151.57 509.352 li
cp
ef
1151.57 465.059 mo
1173.72 465.059 li
1173.72 487.205 li
1151.57 487.205 li
1151.57 465.059 li
1151.57 465.059 li
cp
ef
1151.57 420.769 mo
1173.72 420.769 li
1173.72 442.915 li
1151.57 442.915 li
1151.57 420.769 li
1151.57 420.769 li
cp
ef
1151.57 376.476 mo
1173.72 376.476 li
1173.72 398.622 li
1151.57 398.622 li
1151.57 376.476 li
1151.57 376.476 li
cp
ef
1151.57 332.186 mo
1173.72 332.186 li
1173.72 354.332 li
1151.57 354.332 li
1151.57 332.186 li
1151.57 332.186 li
cp
ef
1151.57 287.895 mo
1173.72 287.895 li
1173.72 310.041 li
1151.57 310.041 li
1151.57 287.895 li
1151.57 287.895 li
cp
ef
1151.57 243.603 mo
1173.72 243.603 li
1173.72 265.749 li
1151.57 265.749 li
1151.57 243.603 li
1151.57 243.603 li
cp
ef
1151.57 199.312 mo
1173.72 199.312 li
1173.72 221.458 li
1151.57 221.458 li
1151.57 199.312 li
1151.57 199.312 li
cp
ef
1151.57 155.02 mo
1173.72 155.02 li
1173.72 177.166 li
1151.57 177.166 li
1151.57 155.02 li
1151.57 155.02 li
cp
ef
1151.57 110.729 mo
1173.72 110.729 li
1173.72 132.875 li
1151.57 132.875 li
1151.57 110.729 li
1151.57 110.729 li
cp
ef
1151.57 66.4387 mo
1173.72 66.4387 li
1173.72 88.5849 li
1151.57 88.5849 li
1151.57 66.4387 li
1151.57 66.4387 li
cp
ef
1151.57 22.1463 mo
1173.72 22.1463 li
1173.72 44.2923 li
1151.57 44.2923 li
1151.57 22.1463 li
1151.57 22.1463 li
cp
ef
1306.59 841.535 mo
1328.74 841.535 li
1328.74 863.682 li
1306.59 863.682 li
1306.59 841.535 li
1306.59 841.535 li
cp
ef
1306.59 797.245 mo
1328.74 797.245 li
1328.74 819.391 li
1306.59 819.391 li
1306.59 797.245 li
1306.59 797.245 li
cp
ef
1306.59 752.952 mo
1328.74 752.952 li
1328.74 775.101 li
1306.59 775.101 li
1306.59 752.952 li
1306.59 752.952 li
cp
ef
1306.59 708.662 mo
1328.74 708.662 li
1328.74 730.808 li
1306.59 730.808 li
1306.59 708.662 li
1306.59 708.662 li
cp
ef
1306.59 664.371 mo
1328.74 664.371 li
1328.74 686.518 li
1306.59 686.518 li
1306.59 664.371 li
1306.59 664.371 li
cp
ef
1306.59 620.079 mo
1328.74 620.079 li
1328.74 642.225 li
1306.59 642.225 li
1306.59 620.079 li
1306.59 620.079 li
cp
ef
1306.59 575.788 mo
1328.74 575.788 li
1328.74 597.935 li
1306.59 597.935 li
1306.59 575.788 li
1306.59 575.788 li
cp
ef
1306.59 531.496 mo
1328.74 531.496 li
1328.74 553.642 li
1306.59 553.642 li
1306.59 531.496 li
1306.59 531.496 li
cp
ef
1306.59 487.205 mo
1328.74 487.205 li
1328.74 509.352 li
1306.59 509.352 li
1306.59 487.205 li
1306.59 487.205 li
cp
ef
1306.59 442.915 mo
1328.74 442.915 li
1328.74 465.061 li
1306.59 465.061 li
1306.59 442.915 li
1306.59 442.915 li
cp
ef
1306.59 398.622 mo
1328.74 398.622 li
1328.74 420.769 li
1306.59 420.769 li
1306.59 398.622 li
1306.59 398.622 li
cp
ef
1306.59 354.332 mo
1328.74 354.332 li
1328.74 376.478 li
1306.59 376.478 li
1306.59 354.332 li
1306.59 354.332 li
cp
ef
1306.59 310.039 mo
1328.74 310.039 li
1328.74 332.186 li
1306.59 332.186 li
1306.59 310.039 li
1306.59 310.039 li
cp
ef
1306.59 265.749 mo
1328.74 265.749 li
1328.74 287.895 li
1306.59 287.895 li
1306.59 265.749 li
1306.59 265.749 li
cp
ef
1306.59 221.458 mo
1328.74 221.458 li
1328.74 243.603 li
1306.59 243.603 li
1306.59 221.458 li
1306.59 221.458 li
cp
ef
1306.59 177.166 mo
1328.74 177.166 li
1328.74 199.312 li
1306.59 199.312 li
1306.59 177.166 li
1306.59 177.166 li
cp
ef
1306.59 132.875 mo
1328.74 132.875 li
1328.74 155.022 li
1306.59 155.022 li
1306.59 132.875 li
1306.59 132.875 li
cp
ef
1306.59 88.583 mo
1328.74 88.583 li
1328.74 110.729 li
1306.59 110.729 li
1306.59 88.583 li
1306.59 88.583 li
cp
ef
1306.59 44.2923 mo
1328.74 44.2923 li
1328.74 66.4387 li
1306.59 66.4387 li
1306.59 44.2923 li
1306.59 44.2923 li
cp
ef
1306.59 0 mo
1328.74 0 li
1328.74 22.1463 li
1306.59 22.1463 li
1306.59 0 li
1306.59 0 li
cp
ef
1284.45 863.682 mo
1306.59 863.682 li
1306.59 885.828 li
1284.45 885.828 li
1284.45 863.682 li
1284.45 863.682 li
cp
ef
1284.45 819.391 mo
1306.59 819.391 li
1306.59 841.537 li
1284.45 841.537 li
1284.45 819.391 li
1284.45 819.391 li
cp
ef
1284.45 775.099 mo
1306.59 775.099 li
1306.59 797.245 li
1284.45 797.245 li
1284.45 775.099 li
1284.45 775.099 li
cp
ef
1284.45 730.808 mo
1306.59 730.808 li
1306.59 752.954 li
1284.45 752.954 li
1284.45 730.808 li
1284.45 730.808 li
cp
ef
1284.45 686.516 mo
1306.59 686.516 li
1306.59 708.662 li
1284.45 708.662 li
1284.45 686.516 li
1284.45 686.516 li
cp
ef
1284.45 642.225 mo
1306.59 642.225 li
1306.59 664.371 li
1284.45 664.371 li
1284.45 642.225 li
1284.45 642.225 li
cp
ef
1284.45 597.935 mo
1306.59 597.935 li
1306.59 620.081 li
1284.45 620.081 li
1284.45 597.935 li
1284.45 597.935 li
cp
ef
1284.45 553.642 mo
1306.59 553.642 li
1306.59 575.788 li
1284.45 575.788 li
1284.45 553.642 li
1284.45 553.642 li
cp
ef
1284.45 509.352 mo
1306.59 509.352 li
1306.59 531.498 li
1284.45 531.498 li
1284.45 509.352 li
1284.45 509.352 li
cp
ef
1284.45 465.059 mo
1306.59 465.059 li
1306.59 487.205 li
1284.45 487.205 li
1284.45 465.059 li
1284.45 465.059 li
cp
ef
1284.45 420.769 mo
1306.59 420.769 li
1306.59 442.915 li
1284.45 442.915 li
1284.45 420.769 li
1284.45 420.769 li
cp
ef
1284.45 376.476 mo
1306.59 376.476 li
1306.59 398.622 li
1284.45 398.622 li
1284.45 376.476 li
1284.45 376.476 li
cp
ef
1284.45 332.186 mo
1306.59 332.186 li
1306.59 354.332 li
1284.45 354.332 li
1284.45 332.186 li
1284.45 332.186 li
cp
ef
1284.45 287.895 mo
1306.59 287.895 li
1306.59 310.041 li
1284.45 310.041 li
1284.45 287.895 li
1284.45 287.895 li
cp
ef
1284.45 243.603 mo
1306.59 243.603 li
1306.59 265.749 li
1284.45 265.749 li
1284.45 243.603 li
1284.45 243.603 li
cp
ef
1284.45 199.312 mo
1306.59 199.312 li
1306.59 221.458 li
1284.45 221.458 li
1284.45 199.312 li
1284.45 199.312 li
cp
ef
1284.45 155.02 mo
1306.59 155.02 li
1306.59 177.166 li
1284.45 177.166 li
1284.45 155.02 li
1284.45 155.02 li
cp
ef
1284.45 110.729 mo
1306.59 110.729 li
1306.59 132.875 li
1284.45 132.875 li
1284.45 110.729 li
1284.45 110.729 li
cp
ef
1284.45 66.4387 mo
1306.59 66.4387 li
1306.59 88.5849 li
1284.45 88.5849 li
1284.45 66.4387 li
1284.45 66.4387 li
cp
ef
1284.45 22.1463 mo
1306.59 22.1463 li
1306.59 44.2923 li
1284.45 44.2923 li
1284.45 22.1463 li
1284.45 22.1463 li
cp
ef
1262.3 841.535 mo
1284.45 841.535 li
1284.45 863.682 li
1262.3 863.682 li
1262.3 841.535 li
1262.3 841.535 li
cp
ef
1262.3 797.245 mo
1284.45 797.245 li
1284.45 819.391 li
1262.3 819.391 li
1262.3 797.245 li
1262.3 797.245 li
cp
ef
1262.3 752.952 mo
1284.45 752.952 li
1284.45 775.101 li
1262.3 775.101 li
1262.3 752.952 li
1262.3 752.952 li
cp
ef
1262.3 708.662 mo
1284.45 708.662 li
1284.45 730.808 li
1262.3 730.808 li
1262.3 708.662 li
1262.3 708.662 li
cp
ef
1262.3 664.371 mo
1284.45 664.371 li
1284.45 686.518 li
1262.3 686.518 li
1262.3 664.371 li
1262.3 664.371 li
cp
ef
1262.3 620.079 mo
1284.45 620.079 li
1284.45 642.225 li
1262.3 642.225 li
1262.3 620.079 li
1262.3 620.079 li
cp
ef
1262.3 575.788 mo
1284.45 575.788 li
1284.45 597.935 li
1262.3 597.935 li
1262.3 575.788 li
1262.3 575.788 li
cp
ef
1262.3 531.496 mo
1284.45 531.496 li
1284.45 553.642 li
1262.3 553.642 li
1262.3 531.496 li
1262.3 531.496 li
cp
ef
1262.3 487.205 mo
1284.45 487.205 li
1284.45 509.352 li
1262.3 509.352 li
1262.3 487.205 li
1262.3 487.205 li
cp
ef
1262.3 442.915 mo
1284.45 442.915 li
1284.45 465.061 li
1262.3 465.061 li
1262.3 442.915 li
1262.3 442.915 li
cp
ef
1262.3 398.622 mo
1284.45 398.622 li
1284.45 420.769 li
1262.3 420.769 li
1262.3 398.622 li
1262.3 398.622 li
cp
ef
1262.3 354.332 mo
1284.45 354.332 li
1284.45 376.478 li
1262.3 376.478 li
1262.3 354.332 li
1262.3 354.332 li
cp
ef
1262.3 310.039 mo
1284.45 310.039 li
1284.45 332.186 li
1262.3 332.186 li
1262.3 310.039 li
1262.3 310.039 li
cp
ef
1262.3 265.749 mo
1284.45 265.749 li
1284.45 287.895 li
1262.3 287.895 li
1262.3 265.749 li
1262.3 265.749 li
cp
ef
1262.3 221.458 mo
1284.45 221.458 li
1284.45 243.603 li
1262.3 243.603 li
1262.3 221.458 li
1262.3 221.458 li
cp
ef
1262.3 177.166 mo
1284.45 177.166 li
1284.45 199.312 li
1262.3 199.312 li
1262.3 177.166 li
1262.3 177.166 li
cp
ef
1262.3 132.875 mo
1284.45 132.875 li
1284.45 155.022 li
1262.3 155.022 li
1262.3 132.875 li
1262.3 132.875 li
cp
ef
1262.3 88.583 mo
1284.45 88.583 li
1284.45 110.729 li
1262.3 110.729 li
1262.3 88.583 li
1262.3 88.583 li
cp
ef
1262.3 44.2923 mo
1284.45 44.2923 li
1284.45 66.4387 li
1262.3 66.4387 li
1262.3 44.2923 li
1262.3 44.2923 li
cp
ef
1262.3 0 mo
1284.45 0 li
1284.45 22.1463 li
1262.3 22.1463 li
1262.3 0 li
1262.3 0 li
cp
ef
1240.15 863.682 mo
1262.3 863.682 li
1262.3 885.828 li
1240.15 885.828 li
1240.15 863.682 li
1240.15 863.682 li
cp
ef
1240.15 819.391 mo
1262.3 819.391 li
1262.3 841.537 li
1240.15 841.537 li
1240.15 819.391 li
1240.15 819.391 li
cp
ef
1240.15 775.099 mo
1262.3 775.099 li
1262.3 797.245 li
1240.15 797.245 li
1240.15 775.099 li
1240.15 775.099 li
cp
ef
1240.15 730.808 mo
1262.3 730.808 li
1262.3 752.954 li
1240.15 752.954 li
1240.15 730.808 li
1240.15 730.808 li
cp
ef
1240.15 686.516 mo
1262.3 686.516 li
1262.3 708.662 li
1240.15 708.662 li
1240.15 686.516 li
1240.15 686.516 li
cp
ef
1240.15 642.225 mo
1262.3 642.225 li
1262.3 664.371 li
1240.15 664.371 li
1240.15 642.225 li
1240.15 642.225 li
cp
ef
1240.15 597.935 mo
1262.3 597.935 li
1262.3 620.081 li
1240.15 620.081 li
1240.15 597.935 li
1240.15 597.935 li
cp
ef
1240.15 553.642 mo
1262.3 553.642 li
1262.3 575.788 li
1240.15 575.788 li
1240.15 553.642 li
1240.15 553.642 li
cp
ef
1240.15 509.352 mo
1262.3 509.352 li
1262.3 531.498 li
1240.15 531.498 li
1240.15 509.352 li
1240.15 509.352 li
cp
ef
1240.15 465.059 mo
1262.3 465.059 li
1262.3 487.205 li
1240.15 487.205 li
1240.15 465.059 li
1240.15 465.059 li
cp
ef
1240.15 420.769 mo
1262.3 420.769 li
1262.3 442.915 li
1240.15 442.915 li
1240.15 420.769 li
1240.15 420.769 li
cp
ef
1240.15 376.476 mo
1262.3 376.476 li
1262.3 398.622 li
1240.15 398.622 li
1240.15 376.476 li
1240.15 376.476 li
cp
ef
1240.15 332.186 mo
1262.3 332.186 li
1262.3 354.332 li
1240.15 354.332 li
1240.15 332.186 li
1240.15 332.186 li
cp
ef
1240.15 287.895 mo
1262.3 287.895 li
1262.3 310.041 li
1240.15 310.041 li
1240.15 287.895 li
1240.15 287.895 li
cp
ef
1240.15 243.603 mo
1262.3 243.603 li
1262.3 265.749 li
1240.15 265.749 li
1240.15 243.603 li
1240.15 243.603 li
cp
ef
1240.15 199.312 mo
1262.3 199.312 li
1262.3 221.458 li
1240.15 221.458 li
1240.15 199.312 li
1240.15 199.312 li
cp
ef
1240.15 155.02 mo
1262.3 155.02 li
1262.3 177.166 li
1240.15 177.166 li
1240.15 155.02 li
1240.15 155.02 li
cp
ef
1240.15 110.729 mo
1262.3 110.729 li
1262.3 132.875 li
1240.15 132.875 li
1240.15 110.729 li
1240.15 110.729 li
cp
ef
1240.15 66.4387 mo
1262.3 66.4387 li
1262.3 88.5849 li
1240.15 88.5849 li
1240.15 66.4387 li
1240.15 66.4387 li
cp
ef
1240.15 22.1463 mo
1262.3 22.1463 li
1262.3 44.2923 li
1240.15 44.2923 li
1240.15 22.1463 li
1240.15 22.1463 li
cp
ef
1395.17 841.535 mo
1417.32 841.535 li
1417.32 863.682 li
1395.17 863.682 li
1395.17 841.535 li
1395.17 841.535 li
cp
ef
1395.17 797.245 mo
1417.32 797.245 li
1417.32 819.391 li
1395.17 819.391 li
1395.17 797.245 li
1395.17 797.245 li
cp
ef
1395.17 752.952 mo
1417.32 752.952 li
1417.32 775.101 li
1395.17 775.101 li
1395.17 752.952 li
1395.17 752.952 li
cp
ef
1395.17 708.662 mo
1417.32 708.662 li
1417.32 730.808 li
1395.17 730.808 li
1395.17 708.662 li
1395.17 708.662 li
cp
ef
1395.17 664.371 mo
1417.32 664.371 li
1417.32 686.518 li
1395.17 686.518 li
1395.17 664.371 li
1395.17 664.371 li
cp
ef
1395.17 620.079 mo
1417.32 620.079 li
1417.32 642.225 li
1395.17 642.225 li
1395.17 620.079 li
1395.17 620.079 li
cp
ef
1395.17 575.788 mo
1417.32 575.788 li
1417.32 597.935 li
1395.17 597.935 li
1395.17 575.788 li
1395.17 575.788 li
cp
ef
1395.17 531.496 mo
1417.32 531.496 li
1417.32 553.642 li
1395.17 553.642 li
1395.17 531.496 li
1395.17 531.496 li
cp
ef
1395.17 487.205 mo
1417.32 487.205 li
1417.32 509.352 li
1395.17 509.352 li
1395.17 487.205 li
1395.17 487.205 li
cp
ef
1395.17 442.915 mo
1417.32 442.915 li
1417.32 465.061 li
1395.17 465.061 li
1395.17 442.915 li
1395.17 442.915 li
cp
ef
1395.17 398.622 mo
1417.32 398.622 li
1417.32 420.769 li
1395.17 420.769 li
1395.17 398.622 li
1395.17 398.622 li
cp
ef
1395.17 354.332 mo
1417.32 354.332 li
1417.32 376.478 li
1395.17 376.478 li
1395.17 354.332 li
1395.17 354.332 li
cp
ef
1395.17 310.039 mo
1417.32 310.039 li
1417.32 332.186 li
1395.17 332.186 li
1395.17 310.039 li
1395.17 310.039 li
cp
ef
1395.17 265.749 mo
1417.32 265.749 li
1417.32 287.895 li
1395.17 287.895 li
1395.17 265.749 li
1395.17 265.749 li
cp
ef
1395.17 221.458 mo
1417.32 221.458 li
1417.32 243.603 li
1395.17 243.603 li
1395.17 221.458 li
1395.17 221.458 li
cp
ef
1395.17 177.166 mo
1417.32 177.166 li
1417.32 199.312 li
1395.17 199.312 li
1395.17 177.166 li
1395.17 177.166 li
cp
ef
1395.17 132.875 mo
1417.32 132.875 li
1417.32 155.022 li
1395.17 155.022 li
1395.17 132.875 li
1395.17 132.875 li
cp
ef
1395.17 88.583 mo
1417.32 88.583 li
1417.32 110.729 li
1395.17 110.729 li
1395.17 88.583 li
1395.17 88.583 li
cp
ef
1395.17 44.2923 mo
1417.32 44.2923 li
1417.32 66.4387 li
1395.17 66.4387 li
1395.17 44.2923 li
1395.17 44.2923 li
cp
ef
1395.17 0 mo
1417.32 0 li
1417.32 22.1463 li
1395.17 22.1463 li
1395.17 0 li
1395.17 0 li
cp
ef
1373.03 863.682 mo
1395.17 863.682 li
1395.17 885.828 li
1373.03 885.828 li
1373.03 863.682 li
1373.03 863.682 li
cp
ef
1373.03 819.391 mo
1395.17 819.391 li
1395.17 841.537 li
1373.03 841.537 li
1373.03 819.391 li
1373.03 819.391 li
cp
ef
1373.03 775.099 mo
1395.17 775.099 li
1395.17 797.245 li
1373.03 797.245 li
1373.03 775.099 li
1373.03 775.099 li
cp
ef
1373.03 730.808 mo
1395.17 730.808 li
1395.17 752.954 li
1373.03 752.954 li
1373.03 730.808 li
1373.03 730.808 li
cp
ef
1373.03 686.516 mo
1395.17 686.516 li
1395.17 708.662 li
1373.03 708.662 li
1373.03 686.516 li
1373.03 686.516 li
cp
ef
1373.03 642.225 mo
1395.17 642.225 li
1395.17 664.371 li
1373.03 664.371 li
1373.03 642.225 li
1373.03 642.225 li
cp
ef
1373.03 597.935 mo
1395.17 597.935 li
1395.17 620.081 li
1373.03 620.081 li
1373.03 597.935 li
1373.03 597.935 li
cp
ef
1373.03 553.642 mo
1395.17 553.642 li
1395.17 575.788 li
1373.03 575.788 li
1373.03 553.642 li
1373.03 553.642 li
cp
ef
1373.03 509.352 mo
1395.17 509.352 li
1395.17 531.498 li
1373.03 531.498 li
1373.03 509.352 li
1373.03 509.352 li
cp
ef
1373.03 465.059 mo
1395.17 465.059 li
1395.17 487.205 li
1373.03 487.205 li
1373.03 465.059 li
1373.03 465.059 li
cp
ef
1373.03 420.769 mo
1395.17 420.769 li
1395.17 442.915 li
1373.03 442.915 li
1373.03 420.769 li
1373.03 420.769 li
cp
ef
1373.03 376.476 mo
1395.17 376.476 li
1395.17 398.622 li
1373.03 398.622 li
1373.03 376.476 li
1373.03 376.476 li
cp
ef
1373.03 332.186 mo
1395.17 332.186 li
1395.17 354.332 li
1373.03 354.332 li
1373.03 332.186 li
1373.03 332.186 li
cp
ef
1373.03 287.895 mo
1395.17 287.895 li
1395.17 310.041 li
1373.03 310.041 li
1373.03 287.895 li
1373.03 287.895 li
cp
ef
1373.03 243.603 mo
1395.17 243.603 li
1395.17 265.749 li
1373.03 265.749 li
1373.03 243.603 li
1373.03 243.603 li
cp
ef
1373.03 199.312 mo
1395.17 199.312 li
1395.17 221.458 li
1373.03 221.458 li
1373.03 199.312 li
1373.03 199.312 li
cp
ef
1373.03 155.02 mo
1395.17 155.02 li
1395.17 177.166 li
1373.03 177.166 li
1373.03 155.02 li
1373.03 155.02 li
cp
ef
1373.03 110.729 mo
1395.17 110.729 li
1395.17 132.875 li
1373.03 132.875 li
1373.03 110.729 li
1373.03 110.729 li
cp
ef
1373.03 66.4387 mo
1395.17 66.4387 li
1395.17 88.5849 li
1373.03 88.5849 li
1373.03 66.4387 li
1373.03 66.4387 li
cp
ef
1373.03 22.1463 mo
1395.17 22.1463 li
1395.17 44.2923 li
1373.03 44.2923 li
1373.03 22.1463 li
1373.03 22.1463 li
cp
ef
1350.88 841.535 mo
1373.03 841.535 li
1373.03 863.682 li
1350.88 863.682 li
1350.88 841.535 li
1350.88 841.535 li
cp
ef
1350.88 797.245 mo
1373.03 797.245 li
1373.03 819.391 li
1350.88 819.391 li
1350.88 797.245 li
1350.88 797.245 li
cp
ef
1350.88 752.952 mo
1373.03 752.952 li
1373.03 775.101 li
1350.88 775.101 li
1350.88 752.952 li
1350.88 752.952 li
cp
ef
1350.88 708.662 mo
1373.03 708.662 li
1373.03 730.808 li
1350.88 730.808 li
1350.88 708.662 li
1350.88 708.662 li
cp
ef
1350.88 664.371 mo
1373.03 664.371 li
1373.03 686.518 li
1350.88 686.518 li
1350.88 664.371 li
1350.88 664.371 li
cp
ef
1350.88 620.079 mo
1373.03 620.079 li
1373.03 642.225 li
1350.88 642.225 li
1350.88 620.079 li
1350.88 620.079 li
cp
ef
1350.88 575.788 mo
1373.03 575.788 li
1373.03 597.935 li
1350.88 597.935 li
1350.88 575.788 li
1350.88 575.788 li
cp
ef
1350.88 531.496 mo
1373.03 531.496 li
1373.03 553.642 li
1350.88 553.642 li
1350.88 531.496 li
1350.88 531.496 li
cp
ef
1350.88 487.205 mo
1373.03 487.205 li
1373.03 509.352 li
1350.88 509.352 li
1350.88 487.205 li
1350.88 487.205 li
cp
ef
1350.88 442.915 mo
1373.03 442.915 li
1373.03 465.061 li
1350.88 465.061 li
1350.88 442.915 li
1350.88 442.915 li
cp
ef
1350.88 398.622 mo
1373.03 398.622 li
1373.03 420.769 li
1350.88 420.769 li
1350.88 398.622 li
1350.88 398.622 li
cp
ef
1350.88 354.332 mo
1373.03 354.332 li
1373.03 376.478 li
1350.88 376.478 li
1350.88 354.332 li
1350.88 354.332 li
cp
ef
1350.88 310.039 mo
1373.03 310.039 li
1373.03 332.186 li
1350.88 332.186 li
1350.88 310.039 li
1350.88 310.039 li
cp
ef
1350.88 265.749 mo
1373.03 265.749 li
1373.03 287.895 li
1350.88 287.895 li
1350.88 265.749 li
1350.88 265.749 li
cp
ef
1350.88 221.458 mo
1373.03 221.458 li
1373.03 243.603 li
1350.88 243.603 li
1350.88 221.458 li
1350.88 221.458 li
cp
ef
1350.88 177.166 mo
1373.03 177.166 li
1373.03 199.312 li
1350.88 199.312 li
1350.88 177.166 li
1350.88 177.166 li
cp
ef
1350.88 132.875 mo
1373.03 132.875 li
1373.03 155.022 li
1350.88 155.022 li
1350.88 132.875 li
1350.88 132.875 li
cp
ef
1350.88 88.583 mo
1373.03 88.583 li
1373.03 110.729 li
1350.88 110.729 li
1350.88 88.583 li
1350.88 88.583 li
cp
ef
1350.88 44.2923 mo
1373.03 44.2923 li
1373.03 66.4387 li
1350.88 66.4387 li
1350.88 44.2923 li
1350.88 44.2923 li
cp
ef
1350.88 0 mo
1373.03 0 li
1373.03 22.1463 li
1350.88 22.1463 li
1350.88 0 li
1350.88 0 li
cp
ef
1328.74 863.682 mo
1350.88 863.682 li
1350.88 885.828 li
1328.74 885.828 li
1328.74 863.682 li
1328.74 863.682 li
cp
ef
1328.74 819.391 mo
1350.88 819.391 li
1350.88 841.537 li
1328.74 841.537 li
1328.74 819.391 li
1328.74 819.391 li
cp
ef
1328.74 775.099 mo
1350.88 775.099 li
1350.88 797.245 li
1328.74 797.245 li
1328.74 775.099 li
1328.74 775.099 li
cp
ef
1328.74 730.808 mo
1350.88 730.808 li
1350.88 752.954 li
1328.74 752.954 li
1328.74 730.808 li
1328.74 730.808 li
cp
ef
1328.74 686.516 mo
1350.88 686.516 li
1350.88 708.662 li
1328.74 708.662 li
1328.74 686.516 li
1328.74 686.516 li
cp
ef
1328.74 642.225 mo
1350.88 642.225 li
1350.88 664.371 li
1328.74 664.371 li
1328.74 642.225 li
1328.74 642.225 li
cp
ef
1328.74 597.935 mo
1350.88 597.935 li
1350.88 620.081 li
1328.74 620.081 li
1328.74 597.935 li
1328.74 597.935 li
cp
ef
1328.74 553.642 mo
1350.88 553.642 li
1350.88 575.788 li
1328.74 575.788 li
1328.74 553.642 li
1328.74 553.642 li
cp
ef
1328.74 509.352 mo
1350.88 509.352 li
1350.88 531.498 li
1328.74 531.498 li
1328.74 509.352 li
1328.74 509.352 li
cp
ef
1328.74 465.059 mo
1350.88 465.059 li
1350.88 487.205 li
1328.74 487.205 li
1328.74 465.059 li
1328.74 465.059 li
cp
ef
1328.74 420.769 mo
1350.88 420.769 li
1350.88 442.915 li
1328.74 442.915 li
1328.74 420.769 li
1328.74 420.769 li
cp
ef
1328.74 376.476 mo
1350.88 376.476 li
1350.88 398.622 li
1328.74 398.622 li
1328.74 376.476 li
1328.74 376.476 li
cp
ef
1328.74 332.186 mo
1350.88 332.186 li
1350.88 354.332 li
1328.74 354.332 li
1328.74 332.186 li
1328.74 332.186 li
cp
ef
1328.74 287.895 mo
1350.88 287.895 li
1350.88 310.041 li
1328.74 310.041 li
1328.74 287.895 li
1328.74 287.895 li
cp
ef
1328.74 243.603 mo
1350.88 243.603 li
1350.88 265.749 li
1328.74 265.749 li
1328.74 243.603 li
1328.74 243.603 li
cp
ef
1328.74 199.312 mo
1350.88 199.312 li
1350.88 221.458 li
1328.74 221.458 li
1328.74 199.312 li
1328.74 199.312 li
cp
ef
1328.74 155.02 mo
1350.88 155.02 li
1350.88 177.166 li
1328.74 177.166 li
1328.74 155.02 li
1328.74 155.02 li
cp
ef
1328.74 110.729 mo
1350.88 110.729 li
1350.88 132.875 li
1328.74 132.875 li
1328.74 110.729 li
1328.74 110.729 li
cp
ef
1328.74 66.4387 mo
1350.88 66.4387 li
1350.88 88.5849 li
1328.74 88.5849 li
1328.74 66.4387 li
1328.74 66.4387 li
cp
ef
1328.74 22.1463 mo
1350.88 22.1463 li
1350.88 44.2923 li
1328.74 44.2923 li
1328.74 22.1463 li
1328.74 22.1463 li
cp
ef
899.516 360.391 mo
935.598 360.391 li
935.598 356.317 li
899.516 356.317 li
899.516 360.391 li
cp
911.563 345.318 mo
931.99 345.318 li
931.99 354.746 li
911.563 354.746 li
911.563 345.318 li
cp
1086.5 385.59 mo
1089 385.59 li
1089 401.245 li
1086.5 401.245 li
1086.5 385.59 li
cp
1090.69 385.59 mo
1093.19 385.59 li
1093.19 401.245 li
1090.69 401.245 li
1090.69 385.59 li
cp
1078.12 385.59 mo
1080.62 385.59 li
1080.62 401.245 li
1078.12 401.245 li
1078.12 385.59 li
cp
1082.31 385.59 mo
1084.81 385.59 li
1084.81 401.245 li
1082.31 401.245 li
1082.31 385.59 li
cp
1069.74 385.59 mo
1072.24 385.59 li
1072.24 401.245 li
1069.74 401.245 li
1069.74 385.59 li
cp
1073.93 385.59 mo
1076.43 385.59 li
1076.43 401.245 li
1073.93 401.245 li
1073.93 385.59 li
cp
386.396 418.82 mo
364.572 418.82 li
364.572 415.329 li
386.396 415.329 li
386.396 418.82 li
cp
379.296 399.325 mo
371.731 399.325 li
371.731 412.652 li
379.296 412.652 li
379.296 399.325 li
cp
376.794 397.753 mo
374.233 397.753 li
374.233 388.209 li
376.794 388.209 li
376.794 397.753 li
cp
402.517 368.713 mo
442.614 368.713 li
442.614 370.343 li
402.517 370.343 li
402.517 368.713 li
cp
396.813 365.454 mo
473.633 365.454 li
473.633 367.084 li
396.813 367.084 li
396.813 365.454 li
cp
404.088 362.195 mo
434.467 362.195 li
434.467 363.825 li
404.088 363.825 li
404.088 362.195 li
cp
406.707 358.936 mo
428.88 358.936 li
428.88 357.248 li
406.707 357.248 li
406.707 358.936 li
cp
769.505 409.276 mo
737.962 409.276 li
737.962 466.891 li
705.139 466.891 li
705.139 508.094 li
683.956 508.094 li
683.956 500.761 li
672.2 500.761 li
672.2 420.275 li
669.93 420.275 li
663.645 409.334 li
635.071 409.334 li
635.071 450.479 li
624.071 450.479 li
624.071 460.315 li
617.961 460.315 li
617.961 481.731 li
609.871 481.731 li
609.871 396.473 li
602.597 396.473 li
602.597 385.299 li
594.508 385.299 li
594.508 374.824 li
586.011 374.824 li
586.011 364.698 li
581.879 364.698 li
581.879 343.921 li
578.736 343.921 li
578.736 364.698 li
574.604 364.698 li
574.604 374.824 li
566.166 374.824 li
566.166 385.299 li
558.076 385.299 li
558.076 396.473 li
550.802 396.473 li
550.802 515.508 li
546.844 515.508 li
546.844 481.265 li
534.565 481.265 li
534.565 500.412 li
530.491 500.412 li
530.491 461.246 li
473.633 461.246 li
473.633 371.972 li
396.813 371.972 li
396.813 514.787 li
387.444 514.787 li
387.444 420.974 li
363.525 420.974 li
363.525 474.864 li
358.636 474.864 li
358.636 440.528 li
330.702 440.528 li
330.702 501.518 li
288.335 501.518 li
288.335 462.875 li
263.194 462.875 li
263.194 516.533 li
253.941 516.533 li
253.941 411.022 li
216.462 394.203 li
202.378 402.584 li
202.378 473.933 li
191.612 473.933 li
191.612 430.285 li
171.709 447.744 li
171.709 505.883 li
142.145 505.883 li
142.145 469.51 li
109.555 469.51 li
109.555 513.871 li
107.11 513.871 li
107.11 488.074 li
81.7948 488.074 li
81.7948 529.801 li
60.1456 529.801 li
60.1456 508.501 li
44.6071 508.501 li
44.6071 524.04 li
35.4702 524.04 li
35.4702 537.309 li
26.1588 537.309 li
26.1588 541.906 li
1391.16 541.906 li
1391.16 539.695 li
1391.16 537.309 li
1391.16 531.315 li
1378.77 531.315 li
1378.77 522.934 li
1369.51 522.934 li
1369.51 506.174 li
1352.46 506.174 li
1352.46 519.501 li
1345.54 519.501 li
1345.54 452.051 li
1317.95 452.051 li
1317.95 507.978 li
1315.04 507.978 li
1315.04 412.535 li
1288.62 378.49 li
1288.62 416.784 li
1284.55 416.784 li
1284.55 354.047 li
1258.12 380.352 li
1258.12 475.853 li
1254.63 474.107 li
1254.63 462.41 li
1215.58 462.41 li
1215.58 514.03 li
1193.99 514.03 li
1193.99 414.456 li
1152.44 414.456 li
1152.44 492.556 li
1135.21 492.556 li
1135.21 445.474 li
1124.97 433.428 li
1109.84 460.606 li
1109.84 516.591 li
1099.07 516.591 li
1099.07 403.631 li
1063.86 403.631 li
1063.86 470.674 li
1023.01 470.674 li
1023.01 501.983 li
1009.39 501.983 li
1009.39 446.58 li
991.467 446.58 li
991.467 410.673 li
971.389 393.796 li
965.046 397.579 li
965.046 427.317 li
947.82 427.317 li
947.82 473.7 li
983.087 473.7 li
983.087 537.309 li
980.177 537.309 li
980.177 476.61 li
937.344 476.61 li
937.344 362.952 li
897.77 362.952 li
897.77 460.78 li
887.528 460.78 li
887.528 525.961 li
882.406 525.961 li
882.406 418.297 li
855.927 418.297 li
855.927 502.333 li
840.447 502.333 li
840.447 434.824 li
821.707 434.824 li
821.707 511.47 li
817.634 511.47 li
817.634 397.462 li
806.111 394.261 li
806.111 374.475 li
795.693 371.565 li
795.693 357.539 li
791.038 357.539 li
791.038 370.284 li
778.176 366.676 li
778.176 386.405 li
769.505 384.019 li
769.505 409.276 li
cp
0 0 0 rgb
ef
557.902 402.06 mo
565.351 402.06 li
565.351 405.435 li
557.902 405.435 li
557.902 402.06 li
cp
1 1 1 rgb
ef
757.633 414.048 mo
758.855 414.048 760.019 414.048 761.241 414.048 cv
761.241 415.387 761.241 416.667 761.241 418.006 cv
760.019 418.006 758.855 418.006 757.633 418.006 cv
757.633 416.667 757.633 415.387 757.633 414.048 cv
757.633 414.048 li
cp
ef
751.93 414.048 mo
753.035 414.048 754.083 414.048 755.189 414.048 cv
755.189 415.387 755.189 416.667 755.189 418.006 cv
754.083 418.006 753.035 418.006 751.93 418.006 cv
751.93 416.667 751.93 415.387 751.93 414.048 cv
751.93 414.048 li
cp
ef
746.575 414.048 mo
747.565 414.048 748.496 414.048 749.427 414.048 cv
749.427 415.387 749.427 416.667 749.427 418.006 cv
748.496 418.006 747.565 418.006 746.575 418.006 cv
746.575 416.667 746.575 415.387 746.575 414.048 cv
746.575 414.048 li
cp
ef
741.571 414.048 mo
744.073 414.048 li
744.073 418.006 li
741.571 418.006 li
741.571 414.048 li
cp
ef
763.743 414.048 mo
767.701 414.048 li
767.701 418.006 li
763.743 418.006 li
763.743 414.048 li
cp
ef
757.633 421.323 mo
758.855 421.323 760.019 421.323 761.241 421.323 cv
761.241 422.603 761.241 423.942 761.241 425.28 cv
760.019 425.28 758.855 425.28 757.633 425.28 cv
757.633 423.942 757.633 422.603 757.633 421.323 cv
757.633 421.323 li
cp
ef
751.93 421.323 mo
753.035 421.323 754.083 421.323 755.189 421.323 cv
755.189 422.603 755.189 423.942 755.189 425.28 cv
754.083 425.28 753.035 425.28 751.93 425.28 cv
751.93 423.942 751.93 422.603 751.93 421.323 cv
751.93 421.323 li
cp
ef
741.571 421.323 mo
744.073 421.323 li
744.073 425.28 li
741.571 425.28 li
741.571 421.323 li
cp
ef
763.743 421.323 mo
767.701 421.323 li
767.701 425.28 li
763.743 425.28 li
763.743 421.323 li
cp
ef
757.633 428.597 mo
758.855 428.597 760.019 428.597 761.241 428.597 cv
761.241 429.878 761.241 431.216 761.241 432.497 cv
760.019 432.497 758.855 432.497 757.633 432.497 cv
757.633 431.216 757.633 429.878 757.633 428.597 cv
757.633 428.597 li
cp
ef
751.93 428.597 mo
753.035 428.597 754.083 428.597 755.189 428.597 cv
755.189 429.878 755.189 431.216 755.189 432.497 cv
754.083 432.497 753.035 432.497 751.93 432.497 cv
751.93 431.216 751.93 429.878 751.93 428.597 cv
751.93 428.597 li
cp
ef
746.575 428.597 mo
747.565 428.597 748.496 428.597 749.427 428.597 cv
749.427 429.878 749.427 431.216 749.427 432.497 cv
748.496 432.497 747.565 432.497 746.575 432.497 cv
746.575 431.216 746.575 429.878 746.575 428.597 cv
746.575 428.597 li
cp
ef
741.571 428.597 mo
744.073 428.597 li
744.073 432.497 li
741.571 432.497 li
741.571 428.597 li
cp
ef
763.743 428.597 mo
767.701 428.597 li
767.701 432.497 li
763.743 432.497 li
763.743 428.597 li
cp
ef
757.633 435.814 mo
758.855 435.814 760.019 435.814 761.241 435.814 cv
761.241 437.152 761.241 438.491 761.241 439.771 cv
760.019 439.771 758.855 439.771 757.633 439.771 cv
757.633 438.491 757.633 437.152 757.633 435.814 cv
757.633 435.814 li
cp
ef
746.575 435.814 mo
747.565 435.814 748.496 435.814 749.427 435.814 cv
749.427 437.152 749.427 438.491 749.427 439.771 cv
748.496 439.771 747.565 439.771 746.575 439.771 cv
746.575 438.491 746.575 437.152 746.575 435.814 cv
746.575 435.814 li
cp
ef
741.571 435.814 mo
744.073 435.814 li
744.073 439.771 li
741.571 439.771 li
741.571 435.814 li
cp
ef
757.633 443.088 mo
758.855 443.088 760.019 443.088 761.241 443.088 cv
761.241 444.427 761.241 445.765 761.241 447.046 cv
760.019 447.046 758.855 447.046 757.633 447.046 cv
757.633 445.765 757.633 444.427 757.633 443.088 cv
757.633 443.088 li
cp
ef
751.93 443.088 mo
753.035 443.088 754.083 443.088 755.189 443.088 cv
755.189 444.427 755.189 445.765 755.189 447.046 cv
754.083 447.046 753.035 447.046 751.93 447.046 cv
751.93 445.765 751.93 444.427 751.93 443.088 cv
751.93 443.088 li
cp
ef
746.575 443.088 mo
747.565 443.088 748.496 443.088 749.427 443.088 cv
749.427 444.427 749.427 445.765 749.427 447.046 cv
748.496 447.046 747.565 447.046 746.575 447.046 cv
746.575 445.765 746.575 444.427 746.575 443.088 cv
746.575 443.088 li
cp
ef
741.571 443.088 mo
744.073 443.088 li
744.073 447.046 li
741.571 447.046 li
741.571 443.088 li
cp
ef
763.743 443.088 mo
767.701 443.088 li
767.701 447.046 li
763.743 447.046 li
763.743 443.088 li
cp
ef
751.93 450.363 mo
753.035 450.363 754.083 450.363 755.189 450.363 cv
755.189 451.702 755.189 452.982 755.189 454.32 cv
754.083 454.32 753.035 454.32 751.93 454.32 cv
751.93 452.982 751.93 451.702 751.93 450.363 cv
751.93 450.363 li
cp
ef
741.571 450.363 mo
744.073 450.363 li
744.073 454.32 li
741.571 454.32 li
741.571 450.363 li
cp
ef
763.743 450.363 mo
767.701 450.363 li
767.701 454.32 li
763.743 454.32 li
763.743 450.363 li
cp
ef
757.633 457.638 mo
758.855 457.638 760.019 457.638 761.241 457.638 cv
761.241 458.976 761.241 460.256 761.241 461.595 cv
760.019 461.595 758.855 461.595 757.633 461.595 cv
757.633 460.256 757.633 458.976 757.633 457.638 cv
757.633 457.638 li
cp
ef
751.93 457.638 mo
753.035 457.638 754.083 457.638 755.189 457.638 cv
755.189 458.976 755.189 460.256 755.189 461.595 cv
754.083 461.595 753.035 461.595 751.93 461.595 cv
751.93 460.256 751.93 458.976 751.93 457.638 cv
751.93 457.638 li
cp
ef
746.575 457.638 mo
747.565 457.638 748.496 457.638 749.427 457.638 cv
749.427 458.976 749.427 460.256 749.427 461.595 cv
748.496 461.595 747.565 461.595 746.575 461.595 cv
746.575 460.256 746.575 458.976 746.575 457.638 cv
746.575 457.638 li
cp
ef
741.571 457.638 mo
744.073 457.638 li
744.073 461.595 li
741.571 461.595 li
741.571 457.638 li
cp
ef
757.633 464.912 mo
758.855 464.912 760.019 464.912 761.241 464.912 cv
761.241 466.193 761.241 467.531 761.241 468.87 cv
760.019 468.87 758.855 468.87 757.633 468.87 cv
757.633 467.531 757.633 466.193 757.633 464.912 cv
757.633 464.912 li
cp
ef
751.93 464.912 mo
753.035 464.912 754.083 464.912 755.189 464.912 cv
755.189 466.891 li
751.93 466.891 li
751.93 464.912 li
cp
ef
746.575 464.912 mo
747.565 464.912 748.496 464.912 749.427 464.912 cv
749.427 466.891 li
746.575 466.891 li
746.575 464.912 li
cp
ef
741.571 464.912 mo
744.073 464.912 li
744.073 466.891 li
741.571 466.891 li
741.571 464.912 li
cp
ef
763.743 464.912 mo
767.701 464.912 li
767.701 468.87 li
763.743 468.87 li
763.743 464.912 li
cp
ef
757.633 472.187 mo
758.855 472.187 760.019 472.187 761.241 472.187 cv
761.241 473.467 761.241 474.806 761.241 476.086 cv
760.019 476.086 758.855 476.086 757.633 476.086 cv
757.633 474.806 757.633 473.467 757.633 472.187 cv
757.633 472.187 li
cp
ef
763.743 472.187 mo
767.701 472.187 li
767.701 476.086 li
763.743 476.086 li
763.743 472.187 li
cp
ef
757.633 479.403 mo
758.855 479.403 760.019 479.403 761.241 479.403 cv
761.241 480.742 761.241 482.08 761.241 483.361 cv
760.019 483.361 758.855 483.361 757.633 483.361 cv
757.633 482.08 757.633 480.742 757.633 479.403 cv
757.633 479.403 li
cp
ef
763.743 479.403 mo
767.701 479.403 li
767.701 483.361 li
763.743 483.361 li
763.743 479.403 li
cp
ef
757.633 486.678 mo
758.855 486.678 760.019 486.678 761.241 486.678 cv
761.241 488.016 761.241 489.355 761.241 490.635 cv
760.019 490.635 758.855 490.635 757.633 490.635 cv
757.633 489.355 757.633 488.016 757.633 486.678 cv
757.633 486.678 li
cp
ef
763.743 486.678 mo
767.701 486.678 li
767.701 490.635 li
763.743 490.635 li
763.743 486.678 li
cp
ef
763.743 493.952 mo
767.701 493.952 li
767.701 497.91 li
763.743 497.91 li
763.743 493.952 li
cp
ef
757.633 501.227 mo
758.855 501.227 760.019 501.227 761.241 501.227 cv
761.241 502.565 761.241 503.846 761.241 505.184 cv
760.019 505.184 758.855 505.184 757.633 505.184 cv
757.633 503.846 757.633 502.565 757.633 501.227 cv
757.633 501.227 li
cp
ef
763.743 501.227 mo
767.701 501.227 li
767.701 505.184 li
763.743 505.184 li
763.743 501.227 li
cp
ef
757.633 508.501 mo
758.855 508.501 760.019 508.501 761.241 508.501 cv
761.241 509.782 761.241 511.12 761.241 512.459 cv
760.019 512.459 758.855 512.459 757.633 512.459 cv
757.633 511.12 757.633 509.782 757.633 508.501 cv
757.633 508.501 li
cp
ef
763.743 508.501 mo
767.701 508.501 li
767.701 512.459 li
763.743 512.459 li
763.743 508.501 li
cp
ef
757.633 515.776 mo
758.855 515.776 760.019 515.776 761.241 515.776 cv
761.241 517.056 761.241 518.395 761.241 519.675 cv
760.019 519.675 758.855 519.675 757.633 519.675 cv
757.633 518.395 757.633 517.056 757.633 515.776 cv
757.633 515.776 li
cp
ef
193.474 478.647 mo
200.516 478.647 li
200.516 484.059 li
196.5 480.8 li
195.162 482.488 li
200.516 486.736 li
200.516 490.17 li
196.5 486.969 li
195.162 488.656 li
200.516 492.905 li
200.516 496.338 li
196.5 493.138 li
195.162 494.767 li
200.516 499.074 li
200.516 502.507 li
196.5 499.306 li
195.162 500.936 li
200.516 505.242 li
200.516 508.676 li
196.5 505.475 li
195.162 507.105 li
200.516 511.411 li
200.516 514.845 li
196.5 511.644 li
195.162 513.274 li
200.516 517.58 li
200.516 521.014 li
196.5 517.755 li
195.162 519.442 li
200.516 523.691 li
200.516 524.855 li
193.474 524.855 li
193.474 478.647 li
cp
ef
461.877 529.394 mo
427.832 529.394 li
427.832 524.273 li
461.877 524.273 li
461.877 529.394 li
cp
ef
461.877 520.897 mo
427.832 520.897 li
427.832 515.776 li
461.877 515.776 li
461.877 520.897 li
cp
ef
461.877 512.401 mo
422.245 512.401 li
422.245 507.221 li
461.877 507.221 li
461.877 512.401 li
cp
ef
461.877 503.846 mo
422.245 503.846 li
422.245 498.724 li
461.877 498.724 li
461.877 503.846 li
cp
ef
461.877 495.349 mo
422.245 495.349 li
422.245 490.228 li
461.877 490.228 li
461.877 495.349 li
cp
ef
461.877 486.794 mo
422.245 486.794 li
422.245 481.673 li
461.877 481.673 li
461.877 486.794 li
cp
ef
461.877 478.297 mo
422.245 478.297 li
422.245 473.176 li
461.877 473.176 li
461.877 478.297 li
cp
ef
461.877 469.801 mo
422.245 469.801 li
422.245 464.621 li
461.877 464.621 li
461.877 469.801 li
cp
ef
461.877 461.246 mo
422.245 461.246 li
422.245 456.124 li
471.247 456.124 li
471.247 461.246 li
461.877 461.246 li
cp
ef
404.379 514.787 mo
404.379 378.432 li
408.802 378.432 li
408.802 514.787 li
404.379 514.787 li
cp
ef
411.13 514.787 mo
411.13 378.432 li
415.553 378.432 li
415.553 514.787 li
411.13 514.787 li
cp
ef
422.245 447.628 mo
471.247 447.628 li
471.247 452.749 li
422.245 452.749 li
422.245 447.628 li
cp
ef
422.245 439.073 mo
471.247 439.073 li
471.247 444.194 li
422.245 444.194 li
422.245 439.073 li
cp
ef
422.245 430.576 mo
471.247 430.576 li
471.247 435.697 li
422.245 435.697 li
422.245 430.576 li
cp
ef
422.245 422.021 mo
471.247 422.021 li
471.247 427.201 li
422.245 427.201 li
422.245 422.021 li
cp
ef
422.245 413.525 mo
471.247 413.525 li
471.247 418.646 li
422.245 418.646 li
422.245 413.525 li
cp
ef
422.245 405.028 mo
471.247 405.028 li
471.247 410.149 li
422.245 410.149 li
422.245 405.028 li
cp
ef
422.245 396.473 mo
471.247 396.473 li
471.247 401.594 li
422.245 401.594 li
422.245 396.473 li
cp
ef
422.245 387.976 mo
471.247 387.976 li
471.247 393.097 li
422.245 393.097 li
422.245 387.976 li
cp
ef
422.245 379.421 mo
471.247 379.421 li
471.247 384.543 li
422.245 384.543 li
422.245 379.421 li
cp
ef
1292.17 419.461 mo
1292.93 419.461 1293.74 419.461 1294.5 419.461 cv
1294.5 420.159 1294.5 420.915 1294.5 421.614 cv
1293.74 421.614 1292.93 421.614 1292.17 421.614 cv
1292.17 420.915 1292.17 420.159 1292.17 419.461 cv
1292.17 419.461 li
cp
ef
1297.29 419.461 mo
1298.05 419.461 1298.86 419.461 1299.62 419.461 cv
1299.62 420.159 1299.62 420.915 1299.62 421.614 cv
1298.86 421.614 1298.05 421.614 1297.29 421.614 cv
1297.29 420.915 1297.29 420.159 1297.29 419.461 cv
1297.29 419.461 li
cp
ef
1302.41 419.461 mo
1303.17 419.461 1303.98 419.461 1304.8 419.461 cv
1304.8 420.159 1304.8 420.915 1304.8 421.614 cv
1303.98 421.614 1303.17 421.614 1302.41 421.614 cv
1302.41 420.915 1302.41 420.159 1302.41 419.461 cv
1302.41 419.461 li
cp
ef
1307.53 419.461 mo
1308.35 419.461 1309.1 419.461 1309.92 419.461 cv
1309.92 420.159 1309.92 420.915 1309.92 421.614 cv
1309.1 421.614 1308.35 421.614 1307.53 421.614 cv
1307.53 420.915 1307.53 420.159 1307.53 419.461 cv
1307.53 419.461 li
cp
ef
1292.17 424.407 mo
1292.93 424.407 1293.74 424.407 1294.5 424.407 cv
1294.5 425.164 1294.5 425.862 1294.5 426.561 cv
1293.74 426.561 1292.93 426.561 1292.17 426.561 cv
1292.17 425.862 1292.17 425.164 1292.17 424.407 cv
1292.17 424.407 li
cp
ef
1297.29 424.407 mo
1298.05 424.407 1298.86 424.407 1299.62 424.407 cv
1299.62 425.164 1299.62 425.862 1299.62 426.561 cv
1298.86 426.561 1298.05 426.561 1297.29 426.561 cv
1297.29 425.862 1297.29 425.164 1297.29 424.407 cv
1297.29 424.407 li
cp
ef
1302.41 424.407 mo
1303.17 424.407 1303.98 424.407 1304.8 424.407 cv
1304.8 425.164 1304.8 425.862 1304.8 426.561 cv
1303.98 426.561 1303.17 426.561 1302.41 426.561 cv
1302.41 425.862 1302.41 425.164 1302.41 424.407 cv
1302.41 424.407 li
cp
ef
1307.53 424.407 mo
1308.35 424.407 1309.1 424.407 1309.92 424.407 cv
1309.92 425.164 1309.92 425.862 1309.92 426.561 cv
1309.1 426.561 1308.35 426.561 1307.53 426.561 cv
1307.53 425.862 1307.53 425.164 1307.53 424.407 cv
1307.53 424.407 li
cp
ef
1292.17 429.354 mo
1292.93 429.354 1293.74 429.354 1294.5 429.354 cv
1294.5 430.111 1294.5 430.809 1294.5 431.565 cv
1293.74 431.565 1292.93 431.565 1292.17 431.565 cv
1292.17 430.809 1292.17 430.111 1292.17 429.354 cv
1292.17 429.354 li
cp
ef
1297.29 429.354 mo
1298.05 429.354 1298.86 429.354 1299.62 429.354 cv
1299.62 430.111 1299.62 430.809 1299.62 431.565 cv
1298.86 431.565 1298.05 431.565 1297.29 431.565 cv
1297.29 430.809 1297.29 430.111 1297.29 429.354 cv
1297.29 429.354 li
cp
ef
1302.41 429.354 mo
1303.17 429.354 1303.98 429.354 1304.8 429.354 cv
1304.8 430.111 1304.8 430.809 1304.8 431.565 cv
1303.98 431.565 1303.17 431.565 1302.41 431.565 cv
1302.41 430.809 1302.41 430.111 1302.41 429.354 cv
1302.41 429.354 li
cp
ef
1307.53 429.354 mo
1308.35 429.354 1309.1 429.354 1309.92 429.354 cv
1309.92 430.111 1309.92 430.809 1309.92 431.565 cv
1309.1 431.565 1308.35 431.565 1307.53 431.565 cv
1307.53 430.809 1307.53 430.111 1307.53 429.354 cv
1307.53 429.354 li
cp
ef
1292.17 434.359 mo
1292.93 434.359 1293.74 434.359 1294.5 434.359 cv
1294.5 435.057 1294.5 435.756 1294.5 436.512 cv
1293.74 436.512 1292.93 436.512 1292.17 436.512 cv
1292.17 435.756 1292.17 435.057 1292.17 434.359 cv
1292.17 434.359 li
cp
ef
1297.29 434.359 mo
1298.05 434.359 1298.86 434.359 1299.62 434.359 cv
1299.62 435.057 1299.62 435.756 1299.62 436.512 cv
1298.86 436.512 1298.05 436.512 1297.29 436.512 cv
1297.29 435.756 1297.29 435.057 1297.29 434.359 cv
1297.29 434.359 li
cp
ef
1302.41 434.359 mo
1303.17 434.359 1303.98 434.359 1304.8 434.359 cv
1304.8 435.057 1304.8 435.756 1304.8 436.512 cv
1303.98 436.512 1303.17 436.512 1302.41 436.512 cv
1302.41 435.756 1302.41 435.057 1302.41 434.359 cv
1302.41 434.359 li
cp
ef
1307.53 434.359 mo
1308.35 434.359 1309.1 434.359 1309.92 434.359 cv
1309.92 435.057 1309.92 435.756 1309.92 436.512 cv
1309.1 436.512 1308.35 436.512 1307.53 436.512 cv
1307.53 435.756 1307.53 435.057 1307.53 434.359 cv
1307.53 434.359 li
cp
ef
1292.17 439.306 mo
1292.93 439.306 1293.74 439.306 1294.5 439.306 cv
1294.5 440.004 1294.5 440.761 1294.5 441.459 cv
1293.74 441.459 1292.93 441.459 1292.17 441.459 cv
1292.17 440.761 1292.17 440.004 1292.17 439.306 cv
1292.17 439.306 li
cp
ef
1297.29 439.306 mo
1298.05 439.306 1298.86 439.306 1299.62 439.306 cv
1299.62 440.004 1299.62 440.761 1299.62 441.459 cv
1298.86 441.459 1298.05 441.459 1297.29 441.459 cv
1297.29 440.761 1297.29 440.004 1297.29 439.306 cv
1297.29 439.306 li
cp
ef
1302.41 439.306 mo
1303.17 439.306 1303.98 439.306 1304.8 439.306 cv
1304.8 440.004 1304.8 440.761 1304.8 441.459 cv
1303.98 441.459 1303.17 441.459 1302.41 441.459 cv
1302.41 440.761 1302.41 440.004 1302.41 439.306 cv
1302.41 439.306 li
cp
ef
1307.53 439.306 mo
1308.35 439.306 1309.1 439.306 1309.92 439.306 cv
1309.92 440.004 1309.92 440.761 1309.92 441.459 cv
1309.1 441.459 1308.35 441.459 1307.53 441.459 cv
1307.53 440.761 1307.53 440.004 1307.53 439.306 cv
1307.53 439.306 li
cp
ef
1292.17 444.252 mo
1292.93 444.252 1293.74 444.252 1294.5 444.252 cv
1294.5 444.951 1294.5 445.707 1294.5 446.406 cv
1293.74 446.406 1292.93 446.406 1292.17 446.406 cv
1292.17 445.707 1292.17 444.951 1292.17 444.252 cv
1292.17 444.252 li
cp
ef
1297.29 444.252 mo
1298.05 444.252 1298.86 444.252 1299.62 444.252 cv
1299.62 444.951 1299.62 445.707 1299.62 446.406 cv
1298.86 446.406 1298.05 446.406 1297.29 446.406 cv
1297.29 445.707 1297.29 444.951 1297.29 444.252 cv
1297.29 444.252 li
cp
ef
1307.53 444.252 mo
1308.35 444.252 1309.1 444.252 1309.92 444.252 cv
1309.92 444.951 1309.92 445.707 1309.92 446.406 cv
1309.1 446.406 1308.35 446.406 1307.53 446.406 cv
1307.53 445.707 1307.53 444.951 1307.53 444.252 cv
1307.53 444.252 li
cp
ef
1292.17 449.199 mo
1292.93 449.199 1293.74 449.199 1294.5 449.199 cv
1294.5 449.956 1294.5 450.654 1294.5 451.352 cv
1293.74 451.352 1292.93 451.352 1292.17 451.352 cv
1292.17 450.654 1292.17 449.956 1292.17 449.199 cv
1292.17 449.199 li
cp
ef
1297.29 449.199 mo
1298.05 449.199 1298.86 449.199 1299.62 449.199 cv
1299.62 449.956 1299.62 450.654 1299.62 451.352 cv
1298.86 451.352 1298.05 451.352 1297.29 451.352 cv
1297.29 450.654 1297.29 449.956 1297.29 449.199 cv
1297.29 449.199 li
cp
ef
1302.41 449.199 mo
1303.17 449.199 1303.98 449.199 1304.8 449.199 cv
1304.8 449.956 1304.8 450.654 1304.8 451.352 cv
1303.98 451.352 1303.17 451.352 1302.41 451.352 cv
1302.41 450.654 1302.41 449.956 1302.41 449.199 cv
1302.41 449.199 li
cp
ef
1307.53 449.199 mo
1308.35 449.199 1309.1 449.199 1309.92 449.199 cv
1309.92 449.956 1309.92 450.654 1309.92 451.352 cv
1309.1 451.352 1308.35 451.352 1307.53 451.352 cv
1307.53 450.654 1307.53 449.956 1307.53 449.199 cv
1307.53 449.199 li
cp
ef
1292.17 454.146 mo
1292.93 454.146 1293.74 454.146 1294.5 454.146 cv
1294.5 454.902 1294.5 455.601 1294.5 456.357 cv
1293.74 456.357 1292.93 456.357 1292.17 456.357 cv
1292.17 455.601 1292.17 454.902 1292.17 454.146 cv
1292.17 454.146 li
cp
ef
1297.29 454.146 mo
1298.05 454.146 1298.86 454.146 1299.62 454.146 cv
1299.62 454.902 1299.62 455.601 1299.62 456.357 cv
1298.86 456.357 1298.05 456.357 1297.29 456.357 cv
1297.29 455.601 1297.29 454.902 1297.29 454.146 cv
1297.29 454.146 li
cp
ef
1302.41 454.146 mo
1303.17 454.146 1303.98 454.146 1304.8 454.146 cv
1304.8 454.902 1304.8 455.601 1304.8 456.357 cv
1303.98 456.357 1303.17 456.357 1302.41 456.357 cv
1302.41 455.601 1302.41 454.902 1302.41 454.146 cv
1302.41 454.146 li
cp
ef
1307.53 454.146 mo
1308.35 454.146 1309.1 454.146 1309.92 454.146 cv
1309.92 454.902 1309.92 455.601 1309.92 456.357 cv
1309.1 456.357 1308.35 456.357 1307.53 456.357 cv
1307.53 455.601 1307.53 454.902 1307.53 454.146 cv
1307.53 454.146 li
cp
ef
1297.29 459.151 mo
1298.05 459.151 1298.86 459.151 1299.62 459.151 cv
1299.62 459.849 1299.62 460.547 1299.62 461.304 cv
1298.86 461.304 1298.05 461.304 1297.29 461.304 cv
1297.29 460.547 1297.29 459.849 1297.29 459.151 cv
1297.29 459.151 li
cp
ef
1302.41 459.151 mo
1303.17 459.151 1303.98 459.151 1304.8 459.151 cv
1304.8 459.849 1304.8 460.547 1304.8 461.304 cv
1303.98 461.304 1303.17 461.304 1302.41 461.304 cv
1302.41 460.547 1302.41 459.849 1302.41 459.151 cv
1302.41 459.151 li
cp
ef
1307.53 459.151 mo
1308.35 459.151 1309.1 459.151 1309.92 459.151 cv
1309.92 459.849 1309.92 460.547 1309.92 461.304 cv
1309.1 461.304 1308.35 461.304 1307.53 461.304 cv
1307.53 460.547 1307.53 459.849 1307.53 459.151 cv
1307.53 459.151 li
cp
ef
1292.17 464.097 mo
1292.93 464.097 1293.74 464.097 1294.5 464.097 cv
1294.5 464.796 1294.5 465.552 1294.5 466.251 cv
1293.74 466.251 1292.93 466.251 1292.17 466.251 cv
1292.17 465.552 1292.17 464.796 1292.17 464.097 cv
1292.17 464.097 li
cp
ef
1297.29 464.097 mo
1298.05 464.097 1298.86 464.097 1299.62 464.097 cv
1299.62 464.796 1299.62 465.552 1299.62 466.251 cv
1298.86 466.251 1298.05 466.251 1297.29 466.251 cv
1297.29 465.552 1297.29 464.796 1297.29 464.097 cv
1297.29 464.097 li
cp
ef
1302.41 464.097 mo
1303.17 464.097 1303.98 464.097 1304.8 464.097 cv
1304.8 464.796 1304.8 465.552 1304.8 466.251 cv
1303.98 466.251 1303.17 466.251 1302.41 466.251 cv
1302.41 465.552 1302.41 464.796 1302.41 464.097 cv
1302.41 464.097 li
cp
ef
1307.53 464.097 mo
1308.35 464.097 1309.1 464.097 1309.92 464.097 cv
1309.92 464.796 1309.92 465.552 1309.92 466.251 cv
1309.1 466.251 1308.35 466.251 1307.53 466.251 cv
1307.53 465.552 1307.53 464.796 1307.53 464.097 cv
1307.53 464.097 li
cp
ef
1292.17 469.044 mo
1292.93 469.044 1293.74 469.044 1294.5 469.044 cv
1294.5 469.743 1294.5 470.499 1294.5 471.197 cv
1293.74 471.197 1292.93 471.197 1292.17 471.197 cv
1292.17 470.499 1292.17 469.743 1292.17 469.044 cv
1292.17 469.044 li
cp
ef
1297.29 469.044 mo
1298.05 469.044 1298.86 469.044 1299.62 469.044 cv
1299.62 469.743 1299.62 470.499 1299.62 471.197 cv
1298.86 471.197 1298.05 471.197 1297.29 471.197 cv
1297.29 470.499 1297.29 469.743 1297.29 469.044 cv
1297.29 469.044 li
cp
ef
1302.41 469.044 mo
1303.17 469.044 1303.98 469.044 1304.8 469.044 cv
1304.8 469.743 1304.8 470.499 1304.8 471.197 cv
1303.98 471.197 1303.17 471.197 1302.41 471.197 cv
1302.41 470.499 1302.41 469.743 1302.41 469.044 cv
1302.41 469.044 li
cp
ef
1307.53 469.044 mo
1308.35 469.044 1309.1 469.044 1309.92 469.044 cv
1309.92 469.743 1309.92 470.499 1309.92 471.197 cv
1309.1 471.197 1308.35 471.197 1307.53 471.197 cv
1307.53 470.499 1307.53 469.743 1307.53 469.044 cv
1307.53 469.044 li
cp
ef
1292.17 473.991 mo
1292.93 473.991 1293.74 473.991 1294.5 473.991 cv
1294.5 474.747 1294.5 475.446 1294.5 476.144 cv
1293.74 476.144 1292.93 476.144 1292.17 476.144 cv
1292.17 475.446 1292.17 474.747 1292.17 473.991 cv
1292.17 473.991 li
cp
ef
1302.41 473.991 mo
1303.17 473.991 1303.98 473.991 1304.8 473.991 cv
1304.8 474.747 1304.8 475.446 1304.8 476.144 cv
1303.98 476.144 1303.17 476.144 1302.41 476.144 cv
1302.41 475.446 1302.41 474.747 1302.41 473.991 cv
1302.41 473.991 li
cp
ef
1307.53 473.991 mo
1308.35 473.991 1309.1 473.991 1309.92 473.991 cv
1309.92 474.747 1309.92 475.446 1309.92 476.144 cv
1309.1 476.144 1308.35 476.144 1307.53 476.144 cv
1307.53 475.446 1307.53 474.747 1307.53 473.991 cv
1307.53 473.991 li
cp
ef
1292.17 478.938 mo
1292.93 478.938 1293.74 478.938 1294.5 478.938 cv
1294.5 479.694 1294.5 480.393 1294.5 481.149 cv
1293.74 481.149 1292.93 481.149 1292.17 481.149 cv
1292.17 480.393 1292.17 479.694 1292.17 478.938 cv
1292.17 478.938 li
cp
ef
1297.29 478.938 mo
1298.05 478.938 1298.86 478.938 1299.62 478.938 cv
1299.62 479.694 1299.62 480.393 1299.62 481.149 cv
1298.86 481.149 1298.05 481.149 1297.29 481.149 cv
1297.29 480.393 1297.29 479.694 1297.29 478.938 cv
1297.29 478.938 li
cp
ef
1302.41 478.938 mo
1303.17 478.938 1303.98 478.938 1304.8 478.938 cv
1304.8 479.694 1304.8 480.393 1304.8 481.149 cv
1303.98 481.149 1303.17 481.149 1302.41 481.149 cv
1302.41 480.393 1302.41 479.694 1302.41 478.938 cv
1302.41 478.938 li
cp
ef
1307.53 478.938 mo
1308.35 478.938 1309.1 478.938 1309.92 478.938 cv
1309.92 479.694 1309.92 480.393 1309.92 481.149 cv
1309.1 481.149 1308.35 481.149 1307.53 481.149 cv
1307.53 480.393 1307.53 479.694 1307.53 478.938 cv
1307.53 478.938 li
cp
ef
1292.17 483.943 mo
1292.93 483.943 1293.74 483.943 1294.5 483.943 cv
1294.5 484.641 1294.5 485.339 1294.5 486.096 cv
1293.74 486.096 1292.93 486.096 1292.17 486.096 cv
1292.17 485.339 1292.17 484.641 1292.17 483.943 cv
1292.17 483.943 li
cp
ef
1297.29 483.943 mo
1298.05 483.943 1298.86 483.943 1299.62 483.943 cv
1299.62 484.641 1299.62 485.339 1299.62 486.096 cv
1298.86 486.096 1298.05 486.096 1297.29 486.096 cv
1297.29 485.339 1297.29 484.641 1297.29 483.943 cv
1297.29 483.943 li
cp
ef
1302.41 483.943 mo
1303.17 483.943 1303.98 483.943 1304.8 483.943 cv
1304.8 484.641 1304.8 485.339 1304.8 486.096 cv
1303.98 486.096 1303.17 486.096 1302.41 486.096 cv
1302.41 485.339 1302.41 484.641 1302.41 483.943 cv
1302.41 483.943 li
cp
ef
1307.53 483.943 mo
1308.35 483.943 1309.1 483.943 1309.92 483.943 cv
1309.92 484.641 1309.92 485.339 1309.92 486.096 cv
1309.1 486.096 1308.35 486.096 1307.53 486.096 cv
1307.53 485.339 1307.53 484.641 1307.53 483.943 cv
1307.53 483.943 li
cp
ef
1292.17 488.889 mo
1292.93 488.889 1293.74 488.889 1294.5 488.889 cv
1294.5 489.588 1294.5 490.344 1294.5 491.043 cv
1293.74 491.043 1292.93 491.043 1292.17 491.043 cv
1292.17 490.344 1292.17 489.588 1292.17 488.889 cv
1292.17 488.889 li
cp
ef
1297.29 488.889 mo
1298.05 488.889 1298.86 488.889 1299.62 488.889 cv
1299.62 489.588 1299.62 490.344 1299.62 491.043 cv
1298.86 491.043 1298.05 491.043 1297.29 491.043 cv
1297.29 490.344 1297.29 489.588 1297.29 488.889 cv
1297.29 488.889 li
cp
ef
1302.41 488.889 mo
1303.17 488.889 1303.98 488.889 1304.8 488.889 cv
1304.8 489.588 1304.8 490.344 1304.8 491.043 cv
1303.98 491.043 1303.17 491.043 1302.41 491.043 cv
1302.41 490.344 1302.41 489.588 1302.41 488.889 cv
1302.41 488.889 li
cp
ef
1292.17 493.836 mo
1292.93 493.836 1293.74 493.836 1294.5 493.836 cv
1294.5 494.534 1294.5 495.291 1294.5 495.989 cv
1293.74 495.989 1292.93 495.989 1292.17 495.989 cv
1292.17 495.291 1292.17 494.534 1292.17 493.836 cv
1292.17 493.836 li
cp
ef
1297.29 493.836 mo
1298.05 493.836 1298.86 493.836 1299.62 493.836 cv
1299.62 494.534 1299.62 495.291 1299.62 495.989 cv
1298.86 495.989 1298.05 495.989 1297.29 495.989 cv
1297.29 495.291 1297.29 494.534 1297.29 493.836 cv
1297.29 493.836 li
cp
ef
1292.17 498.783 mo
1292.93 498.783 1293.74 498.783 1294.5 498.783 cv
1294.5 499.539 1294.5 500.238 1294.5 500.936 cv
1293.74 500.936 1292.93 500.936 1292.17 500.936 cv
1292.17 500.238 1292.17 499.539 1292.17 498.783 cv
1292.17 498.783 li
cp
ef
1297.29 498.783 mo
1298.05 498.783 1298.86 498.783 1299.62 498.783 cv
1299.62 499.539 1299.62 500.238 1299.62 500.936 cv
1298.86 500.936 1298.05 500.936 1297.29 500.936 cv
1297.29 500.238 1297.29 499.539 1297.29 498.783 cv
1297.29 498.783 li
cp
ef
1292.17 503.729 mo
1292.93 503.729 1293.74 503.729 1294.5 503.729 cv
1294.5 504.486 1294.5 505.184 1294.5 505.941 cv
1293.74 505.941 1292.93 505.941 1292.17 505.941 cv
1292.17 505.184 1292.17 504.486 1292.17 503.729 cv
1292.17 503.729 li
cp
ef
1292.17 508.734 mo
1292.93 508.734 1293.74 508.734 1294.5 508.734 cv
1294.5 509.433 1294.5 510.131 1294.5 510.888 cv
1293.74 510.888 1292.93 510.888 1292.17 510.888 cv
1292.17 510.131 1292.17 509.433 1292.17 508.734 cv
1292.17 508.734 li
cp
ef
1292.17 513.681 mo
1292.93 513.681 1293.74 513.681 1294.5 513.681 cv
1294.5 514.379 1294.5 515.136 1294.5 515.834 cv
1293.74 515.834 1292.93 515.834 1292.17 515.834 cv
1292.17 515.136 1292.17 514.379 1292.17 513.681 cv
1292.17 513.681 li
cp
ef
1292.17 518.628 mo
1292.93 518.628 1293.74 518.628 1294.5 518.628 cv
1294.5 519.326 1294.5 520.083 1294.5 520.781 cv
1293.74 520.781 1292.93 520.781 1292.17 520.781 cv
1292.17 520.083 1292.17 519.326 1292.17 518.628 cv
1292.17 518.628 li
cp
ef
1292.17 523.574 mo
1292.93 523.574 1293.74 523.574 1294.5 523.574 cv
1294.5 524.331 1294.5 525.029 1294.5 525.728 cv
1293.74 525.728 1292.93 525.728 1292.17 525.728 cv
1292.17 525.029 1292.17 524.331 1292.17 523.574 cv
1292.17 523.574 li
cp
ef
1292.17 528.521 mo
1294.5 528.521 li
1294.5 530.733 li
1292.17 530.733 li
1292.17 528.521 li
cp
ef
1292.17 414.514 mo
1294.5 414.514 li
1294.5 416.667 li
1292.17 416.667 li
1292.17 414.514 li
cp
ef
1297.29 414.514 mo
1299.62 414.514 li
1299.62 416.667 li
1297.29 416.667 li
1297.29 414.514 li
cp
ef
1302.41 414.514 mo
1304.8 414.514 li
1304.8 416.667 li
1302.41 416.667 li
1302.41 414.514 li
cp
ef
1307.53 414.514 mo
1309.92 414.514 li
1309.92 416.667 li
1307.53 416.667 li
1307.53 414.514 li
cp
ef
1269.36 391.061 mo
1270.52 391.061 1271.63 391.061 1272.73 391.061 cv
1272.73 392.05 1272.73 393.097 1272.73 394.087 cv
1271.63 394.087 1270.52 394.087 1269.36 394.087 cv
1269.36 393.097 1269.36 392.05 1269.36 391.061 cv
1269.36 391.061 li
cp
ef
1275.35 391.061 mo
1276.17 391.061 1276.98 391.061 1277.79 391.061 cv
1277.79 392.05 1277.79 393.097 1277.79 394.087 cv
1276.98 394.087 1276.17 394.087 1275.35 394.087 cv
1275.35 393.097 1275.35 392.05 1275.35 391.061 cv
1275.35 391.061 li
cp
ef
1280.41 391.061 mo
1280.94 391.061 1281.46 391.061 1281.98 391.061 cv
1281.98 392.05 1281.98 393.097 1281.98 394.087 cv
1281.46 394.087 1280.94 394.087 1280.41 394.087 cv
1280.41 393.097 1280.41 392.05 1280.41 391.061 cv
1280.41 391.061 li
cp
ef
1262.49 391.061 mo
1263.94 391.061 1265.34 391.061 1266.8 391.061 cv
1266.8 392.05 1266.8 393.097 1266.8 394.087 cv
1265.34 394.087 1263.94 394.087 1262.49 394.087 cv
1262.49 393.097 1262.49 392.05 1262.49 391.061 cv
1262.49 391.061 li
cp
ef
1269.36 396.938 mo
1270.52 396.938 1271.63 396.938 1272.73 396.938 cv
1272.73 397.928 1272.73 398.975 1272.73 399.965 cv
1271.63 399.965 1270.52 399.965 1269.36 399.965 cv
1269.36 398.975 1269.36 397.928 1269.36 396.938 cv
1269.36 396.938 li
cp
ef
1275.35 396.938 mo
1276.17 396.938 1276.98 396.938 1277.79 396.938 cv
1277.79 397.928 1277.79 398.975 1277.79 399.965 cv
1276.98 399.965 1276.17 399.965 1275.35 399.965 cv
1275.35 398.975 1275.35 397.928 1275.35 396.938 cv
1275.35 396.938 li
cp
ef
1280.41 396.938 mo
1280.94 396.938 1281.46 396.938 1281.98 396.938 cv
1281.98 397.928 1281.98 398.975 1281.98 399.965 cv
1281.46 399.965 1280.94 399.965 1280.41 399.965 cv
1280.41 398.975 1280.41 397.928 1280.41 396.938 cv
1280.41 396.938 li
cp
ef
1262.49 396.938 mo
1263.94 396.938 1265.34 396.938 1266.8 396.938 cv
1266.8 397.928 1266.8 398.975 1266.8 399.965 cv
1265.34 399.965 1263.94 399.965 1262.49 399.965 cv
1262.49 398.975 1262.49 397.928 1262.49 396.938 cv
1262.49 396.938 li
cp
ef
1269.36 402.816 mo
1270.52 402.816 1271.63 402.816 1272.73 402.816 cv
1272.73 403.806 1272.73 404.853 1272.73 405.843 cv
1271.63 405.843 1270.52 405.843 1269.36 405.843 cv
1269.36 404.853 1269.36 403.806 1269.36 402.816 cv
1269.36 402.816 li
cp
ef
1275.35 402.816 mo
1276.17 402.816 1276.98 402.816 1277.79 402.816 cv
1277.79 403.806 1277.79 404.853 1277.79 405.843 cv
1276.98 405.843 1276.17 405.843 1275.35 405.843 cv
1275.35 404.853 1275.35 403.806 1275.35 402.816 cv
1275.35 402.816 li
cp
ef
1280.41 402.816 mo
1280.94 402.816 1281.46 402.816 1281.98 402.816 cv
1281.98 403.806 1281.98 404.853 1281.98 405.843 cv
1281.46 405.843 1280.94 405.843 1280.41 405.843 cv
1280.41 404.853 1280.41 403.806 1280.41 402.816 cv
1280.41 402.816 li
cp
ef
1262.49 402.816 mo
1263.94 402.816 1265.34 402.816 1266.8 402.816 cv
1266.8 403.806 1266.8 404.853 1266.8 405.843 cv
1265.34 405.843 1263.94 405.843 1262.49 405.843 cv
1262.49 404.853 1262.49 403.806 1262.49 402.816 cv
1262.49 402.816 li
cp
ef
1269.36 408.694 mo
1270.52 408.694 1271.63 408.694 1272.73 408.694 cv
1272.73 409.684 1272.73 410.731 1272.73 411.72 cv
1271.63 411.72 1270.52 411.72 1269.36 411.72 cv
1269.36 410.731 1269.36 409.684 1269.36 408.694 cv
1269.36 408.694 li
cp
ef
1275.35 408.694 mo
1276.17 408.694 1276.98 408.694 1277.79 408.694 cv
1277.79 409.684 1277.79 410.731 1277.79 411.72 cv
1276.98 411.72 1276.17 411.72 1275.35 411.72 cv
1275.35 410.731 1275.35 409.684 1275.35 408.694 cv
1275.35 408.694 li
cp
ef
1280.41 408.694 mo
1280.94 408.694 1281.46 408.694 1281.98 408.694 cv
1281.98 409.684 1281.98 410.731 1281.98 411.72 cv
1281.46 411.72 1280.94 411.72 1280.41 411.72 cv
1280.41 410.731 1280.41 409.684 1280.41 408.694 cv
1280.41 408.694 li
cp
ef
1262.49 408.694 mo
1263.94 408.694 1265.34 408.694 1266.8 408.694 cv
1266.8 409.684 1266.8 410.731 1266.8 411.72 cv
1265.34 411.72 1263.94 411.72 1262.49 411.72 cv
1262.49 410.731 1262.49 409.684 1262.49 408.694 cv
1262.49 408.694 li
cp
ef
1269.36 414.572 mo
1270.52 414.572 1271.63 414.572 1272.73 414.572 cv
1272.73 415.561 1272.73 416.609 1272.73 417.598 cv
1271.63 417.598 1270.52 417.598 1269.36 417.598 cv
1269.36 416.609 1269.36 415.561 1269.36 414.572 cv
1269.36 414.572 li
cp
ef
1275.35 414.572 mo
1276.17 414.572 1276.98 414.572 1277.79 414.572 cv
1277.79 415.561 1277.79 416.609 1277.79 417.598 cv
1276.98 417.598 1276.17 417.598 1275.35 417.598 cv
1275.35 416.609 1275.35 415.561 1275.35 414.572 cv
1275.35 414.572 li
cp
ef
1280.41 414.572 mo
1280.94 414.572 1281.46 414.572 1281.98 414.572 cv
1281.98 415.561 1281.98 416.609 1281.98 417.598 cv
1281.46 417.598 1280.94 417.598 1280.41 417.598 cv
1280.41 416.609 1280.41 415.561 1280.41 414.572 cv
1280.41 414.572 li
cp
ef
1262.49 414.572 mo
1263.94 414.572 1265.34 414.572 1266.8 414.572 cv
1266.8 415.561 1266.8 416.609 1266.8 417.598 cv
1265.34 417.598 1263.94 417.598 1262.49 417.598 cv
1262.49 416.609 1262.49 415.561 1262.49 414.572 cv
1262.49 414.572 li
cp
ef
1269.36 420.45 mo
1270.52 420.45 1271.63 420.45 1272.73 420.45 cv
1272.73 421.439 1272.73 422.487 1272.73 423.476 cv
1271.63 423.476 1270.52 423.476 1269.36 423.476 cv
1269.36 422.487 1269.36 421.439 1269.36 420.45 cv
1269.36 420.45 li
cp
ef
1275.35 420.45 mo
1276.17 420.45 1276.98 420.45 1277.79 420.45 cv
1277.79 421.439 1277.79 422.487 1277.79 423.476 cv
1276.98 423.476 1276.17 423.476 1275.35 423.476 cv
1275.35 422.487 1275.35 421.439 1275.35 420.45 cv
1275.35 420.45 li
cp
ef
1280.41 420.45 mo
1280.94 420.45 1281.46 420.45 1281.98 420.45 cv
1281.98 421.439 1281.98 422.487 1281.98 423.476 cv
1281.46 423.476 1280.94 423.476 1280.41 423.476 cv
1280.41 422.487 1280.41 421.439 1280.41 420.45 cv
1280.41 420.45 li
cp
ef
1262.49 420.45 mo
1263.94 420.45 1265.34 420.45 1266.8 420.45 cv
1266.8 421.439 1266.8 422.487 1266.8 423.476 cv
1265.34 423.476 1263.94 423.476 1262.49 423.476 cv
1262.49 422.487 1262.49 421.439 1262.49 420.45 cv
1262.49 420.45 li
cp
ef
1269.36 426.328 mo
1270.52 426.328 1271.63 426.328 1272.73 426.328 cv
1272.73 427.317 1272.73 428.365 1272.73 429.354 cv
1271.63 429.354 1270.52 429.354 1269.36 429.354 cv
1269.36 428.365 1269.36 427.317 1269.36 426.328 cv
1269.36 426.328 li
cp
ef
1275.35 426.328 mo
1276.17 426.328 1276.98 426.328 1277.79 426.328 cv
1277.79 427.317 1277.79 428.365 1277.79 429.354 cv
1276.98 429.354 1276.17 429.354 1275.35 429.354 cv
1275.35 428.365 1275.35 427.317 1275.35 426.328 cv
1275.35 426.328 li
cp
ef
1280.41 426.328 mo
1280.94 426.328 1281.46 426.328 1281.98 426.328 cv
1281.98 427.317 1281.98 428.365 1281.98 429.354 cv
1281.46 429.354 1280.94 429.354 1280.41 429.354 cv
1280.41 428.365 1280.41 427.317 1280.41 426.328 cv
1280.41 426.328 li
cp
ef
1262.49 426.328 mo
1263.94 426.328 1265.34 426.328 1266.8 426.328 cv
1266.8 427.317 1266.8 428.365 1266.8 429.354 cv
1265.34 429.354 1263.94 429.354 1262.49 429.354 cv
1262.49 428.365 1262.49 427.317 1262.49 426.328 cv
1262.49 426.328 li
cp
ef
1269.36 432.206 mo
1270.52 432.206 1271.63 432.206 1272.73 432.206 cv
1272.73 433.195 1272.73 434.243 1272.73 435.232 cv
1271.63 435.232 1270.52 435.232 1269.36 435.232 cv
1269.36 434.243 1269.36 433.195 1269.36 432.206 cv
1269.36 432.206 li
cp
ef
1275.35 432.206 mo
1276.17 432.206 1276.98 432.206 1277.79 432.206 cv
1277.79 433.195 1277.79 434.243 1277.79 435.232 cv
1276.98 435.232 1276.17 435.232 1275.35 435.232 cv
1275.35 434.243 1275.35 433.195 1275.35 432.206 cv
1275.35 432.206 li
cp
ef
1262.49 432.206 mo
1263.94 432.206 1265.34 432.206 1266.8 432.206 cv
1266.8 433.195 1266.8 434.243 1266.8 435.232 cv
1265.34 435.232 1263.94 435.232 1262.49 435.232 cv
1262.49 434.243 1262.49 433.195 1262.49 432.206 cv
1262.49 432.206 li
cp
ef
1269.36 438.083 mo
1270.52 438.083 1271.63 438.083 1272.73 438.083 cv
1272.73 439.073 1272.73 440.12 1272.73 441.11 cv
1271.63 441.11 1270.52 441.11 1269.36 441.11 cv
1269.36 440.12 1269.36 439.073 1269.36 438.083 cv
1269.36 438.083 li
cp
ef
1275.35 438.083 mo
1276.17 438.083 1276.98 438.083 1277.79 438.083 cv
1277.79 439.073 1277.79 440.12 1277.79 441.11 cv
1276.98 441.11 1276.17 441.11 1275.35 441.11 cv
1275.35 440.12 1275.35 439.073 1275.35 438.083 cv
1275.35 438.083 li
cp
ef
1262.49 438.083 mo
1263.94 438.083 1265.34 438.083 1266.8 438.083 cv
1266.8 439.073 1266.8 440.12 1266.8 441.11 cv
1265.34 441.11 1263.94 441.11 1262.49 441.11 cv
1262.49 440.12 1262.49 439.073 1262.49 438.083 cv
1262.49 438.083 li
cp
ef
1269.36 443.961 mo
1270.52 443.961 1271.63 443.961 1272.73 443.961 cv
1272.73 444.951 1272.73 445.998 1272.73 446.988 cv
1271.63 446.988 1270.52 446.988 1269.36 446.988 cv
1269.36 445.998 1269.36 444.951 1269.36 443.961 cv
1269.36 443.961 li
cp
ef
1275.35 443.961 mo
1276.17 443.961 1276.98 443.961 1277.79 443.961 cv
1277.79 444.951 1277.79 445.998 1277.79 446.988 cv
1276.98 446.988 1276.17 446.988 1275.35 446.988 cv
1275.35 445.998 1275.35 444.951 1275.35 443.961 cv
1275.35 443.961 li
cp
ef
1262.49 443.961 mo
1263.94 443.961 1265.34 443.961 1266.8 443.961 cv
1266.8 444.951 1266.8 445.998 1266.8 446.988 cv
1265.34 446.988 1263.94 446.988 1262.49 446.988 cv
1262.49 445.998 1262.49 444.951 1262.49 443.961 cv
1262.49 443.961 li
cp
ef
1269.36 449.839 mo
1270.52 449.839 1271.63 449.839 1272.73 449.839 cv
1272.73 450.829 1272.73 451.876 1272.73 452.865 cv
1271.63 452.865 1270.52 452.865 1269.36 452.865 cv
1269.36 451.876 1269.36 450.829 1269.36 449.839 cv
1269.36 449.839 li
cp
ef
1275.35 449.839 mo
1276.17 449.839 1276.98 449.839 1277.79 449.839 cv
1277.79 450.829 1277.79 451.876 1277.79 452.865 cv
1276.98 452.865 1276.17 452.865 1275.35 452.865 cv
1275.35 451.876 1275.35 450.829 1275.35 449.839 cv
1275.35 449.839 li
cp
ef
1262.49 449.839 mo
1263.94 449.839 1265.34 449.839 1266.8 449.839 cv
1266.8 450.829 1266.8 451.876 1266.8 452.865 cv
1265.34 452.865 1263.94 452.865 1262.49 452.865 cv
1262.49 451.876 1262.49 450.829 1262.49 449.839 cv
1262.49 449.839 li
cp
ef
1269.36 455.717 mo
1270.52 455.717 1271.63 455.717 1272.73 455.717 cv
1272.73 456.706 1272.73 457.754 1272.73 458.743 cv
1271.63 458.743 1270.52 458.743 1269.36 458.743 cv
1269.36 457.754 1269.36 456.706 1269.36 455.717 cv
1269.36 455.717 li
cp
ef
1275.35 455.717 mo
1276.17 455.717 1276.98 455.717 1277.79 455.717 cv
1277.79 456.706 1277.79 457.754 1277.79 458.743 cv
1276.98 458.743 1276.17 458.743 1275.35 458.743 cv
1275.35 457.754 1275.35 456.706 1275.35 455.717 cv
1275.35 455.717 li
cp
ef
1262.49 455.717 mo
1263.94 455.717 1265.34 455.717 1266.8 455.717 cv
1266.8 456.706 1266.8 457.754 1266.8 458.743 cv
1265.34 458.743 1263.94 458.743 1262.49 458.743 cv
1262.49 457.754 1262.49 456.706 1262.49 455.717 cv
1262.49 455.717 li
cp
ef
1269.36 461.595 mo
1270.52 461.595 1271.63 461.595 1272.73 461.595 cv
1272.73 462.643 1272.73 463.632 1272.73 464.621 cv
1271.63 464.621 1270.52 464.621 1269.36 464.621 cv
1269.36 463.632 1269.36 462.643 1269.36 461.595 cv
1269.36 461.595 li
cp
ef
1275.35 461.595 mo
1276.17 461.595 1276.98 461.595 1277.79 461.595 cv
1277.79 462.643 1277.79 463.632 1277.79 464.621 cv
1276.98 464.621 1276.17 464.621 1275.35 464.621 cv
1275.35 463.632 1275.35 462.643 1275.35 461.595 cv
1275.35 461.595 li
cp
ef
1262.49 461.595 mo
1263.94 461.595 1265.34 461.595 1266.8 461.595 cv
1266.8 462.643 1266.8 463.632 1266.8 464.621 cv
1265.34 464.621 1263.94 464.621 1262.49 464.621 cv
1262.49 463.632 1262.49 462.643 1262.49 461.595 cv
1262.49 461.595 li
cp
ef
1269.36 467.473 mo
1270.52 467.473 1271.63 467.473 1272.73 467.473 cv
1272.73 468.52 1272.73 469.51 1272.73 470.499 cv
1271.63 470.499 1270.52 470.499 1269.36 470.499 cv
1269.36 469.51 1269.36 468.52 1269.36 467.473 cv
1269.36 467.473 li
cp
ef
1275.35 467.473 mo
1276.17 467.473 1276.98 467.473 1277.79 467.473 cv
1277.79 468.52 1277.79 469.51 1277.79 470.499 cv
1276.98 470.499 1276.17 470.499 1275.35 470.499 cv
1275.35 469.51 1275.35 468.52 1275.35 467.473 cv
1275.35 467.473 li
cp
ef
1262.49 467.473 mo
1263.94 467.473 1265.34 467.473 1266.8 467.473 cv
1266.8 468.52 1266.8 469.51 1266.8 470.499 cv
1265.34 470.499 1263.94 470.499 1262.49 470.499 cv
1262.49 469.51 1262.49 468.52 1262.49 467.473 cv
1262.49 467.473 li
cp
ef
1269.36 473.351 mo
1270.52 473.351 1271.63 473.351 1272.73 473.351 cv
1272.73 474.398 1272.73 475.388 1272.73 476.377 cv
1271.63 476.377 1270.52 476.377 1269.36 476.377 cv
1269.36 475.388 1269.36 474.398 1269.36 473.351 cv
1269.36 473.351 li
cp
ef
1275.35 473.351 mo
1276.17 473.351 1276.98 473.351 1277.79 473.351 cv
1277.79 474.398 1277.79 475.388 1277.79 476.377 cv
1276.98 476.377 1276.17 476.377 1275.35 476.377 cv
1275.35 475.388 1275.35 474.398 1275.35 473.351 cv
1275.35 473.351 li
cp
ef
1262.49 473.351 mo
1263.94 473.351 1265.34 473.351 1266.8 473.351 cv
1266.8 474.398 1266.8 475.388 1266.8 476.377 cv
1265.34 476.377 1263.94 476.377 1262.49 476.377 cv
1262.49 475.388 1262.49 474.398 1262.49 473.351 cv
1262.49 473.351 li
cp
ef
1269.36 479.229 mo
1270.52 479.229 1271.63 479.229 1272.73 479.229 cv
1272.73 480.276 1272.73 481.265 1272.73 482.255 cv
1271.63 482.255 1270.52 482.255 1269.36 482.255 cv
1269.36 481.265 1269.36 480.276 1269.36 479.229 cv
1269.36 479.229 li
cp
ef
1275.35 479.229 mo
1276.17 479.229 1276.98 479.229 1277.79 479.229 cv
1277.79 480.276 1277.79 481.265 1277.79 482.255 cv
1276.98 482.255 1276.17 482.255 1275.35 482.255 cv
1275.35 481.265 1275.35 480.276 1275.35 479.229 cv
1275.35 479.229 li
cp
ef
1262.49 479.229 mo
1263.94 479.229 1265.34 479.229 1266.8 479.229 cv
1266.8 480.276 1266.8 481.265 1266.8 482.255 cv
1265.34 482.255 1263.94 482.255 1262.49 482.255 cv
1262.49 481.265 1262.49 480.276 1262.49 479.229 cv
1262.49 479.229 li
cp
ef
1269.36 485.106 mo
1270.52 485.106 1271.63 485.106 1272.73 485.106 cv
1272.73 486.154 1272.73 487.143 1272.73 488.133 cv
1271.63 488.133 1270.52 488.133 1269.36 488.133 cv
1269.36 487.143 1269.36 486.154 1269.36 485.106 cv
1269.36 485.106 li
cp
ef
1275.35 485.106 mo
1276.17 485.106 1276.98 485.106 1277.79 485.106 cv
1277.79 486.154 1277.79 487.143 1277.79 488.133 cv
1276.98 488.133 1276.17 488.133 1275.35 488.133 cv
1275.35 487.143 1275.35 486.154 1275.35 485.106 cv
1275.35 485.106 li
cp
ef
1262.49 485.106 mo
1263.94 485.106 1265.34 485.106 1266.8 485.106 cv
1266.8 486.154 1266.8 487.143 1266.8 488.133 cv
1265.34 488.133 1263.94 488.133 1262.49 488.133 cv
1262.49 487.143 1262.49 486.154 1262.49 485.106 cv
1262.49 485.106 li
cp
ef
1269.36 490.984 mo
1270.52 490.984 1271.63 490.984 1272.73 490.984 cv
1272.73 492.032 1272.73 493.021 1272.73 494.011 cv
1271.63 494.011 1270.52 494.011 1269.36 494.011 cv
1269.36 493.021 1269.36 492.032 1269.36 490.984 cv
1269.36 490.984 li
cp
ef
1275.35 490.984 mo
1276.17 490.984 1276.98 490.984 1277.79 490.984 cv
1277.79 492.032 1277.79 493.021 1277.79 494.011 cv
1276.98 494.011 1276.17 494.011 1275.35 494.011 cv
1275.35 493.021 1275.35 492.032 1275.35 490.984 cv
1275.35 490.984 li
cp
ef
1262.49 490.984 mo
1263.94 490.984 1265.34 490.984 1266.8 490.984 cv
1266.8 492.032 1266.8 493.021 1266.8 494.011 cv
1265.34 494.011 1263.94 494.011 1262.49 494.011 cv
1262.49 493.021 1262.49 492.032 1262.49 490.984 cv
1262.49 490.984 li
cp
ef
1269.36 496.862 mo
1270.52 496.862 1271.63 496.862 1272.73 496.862 cv
1272.73 497.91 1272.73 498.899 1272.73 499.888 cv
1271.63 499.888 1270.52 499.888 1269.36 499.888 cv
1269.36 498.899 1269.36 497.91 1269.36 496.862 cv
1269.36 496.862 li
cp
ef
1275.35 496.862 mo
1276.17 496.862 1276.98 496.862 1277.79 496.862 cv
1277.79 497.91 1277.79 498.899 1277.79 499.888 cv
1276.98 499.888 1276.17 499.888 1275.35 499.888 cv
1275.35 498.899 1275.35 497.91 1275.35 496.862 cv
1275.35 496.862 li
cp
ef
1262.49 496.862 mo
1263.94 496.862 1265.34 496.862 1266.8 496.862 cv
1266.8 497.91 1266.8 498.899 1266.8 499.888 cv
1265.34 499.888 1263.94 499.888 1262.49 499.888 cv
1262.49 498.899 1262.49 497.91 1262.49 496.862 cv
1262.49 496.862 li
cp
ef
1269.36 502.74 mo
1270.52 502.74 1271.63 502.74 1272.73 502.74 cv
1272.73 503.788 1272.73 504.777 1272.73 505.766 cv
1271.63 505.766 1270.52 505.766 1269.36 505.766 cv
1269.36 504.777 1269.36 503.788 1269.36 502.74 cv
1269.36 502.74 li
cp
ef
1275.35 502.74 mo
1276.17 502.74 1276.98 502.74 1277.79 502.74 cv
1277.79 503.788 1277.79 504.777 1277.79 505.766 cv
1276.98 505.766 1276.17 505.766 1275.35 505.766 cv
1275.35 504.777 1275.35 503.788 1275.35 502.74 cv
1275.35 502.74 li
cp
ef
1262.49 502.74 mo
1263.94 502.74 1265.34 502.74 1266.8 502.74 cv
1266.8 503.788 1266.8 504.777 1266.8 505.766 cv
1265.34 505.766 1263.94 505.766 1262.49 505.766 cv
1262.49 504.777 1262.49 503.788 1262.49 502.74 cv
1262.49 502.74 li
cp
ef
1269.36 508.618 mo
1270.52 508.618 1271.63 508.618 1272.73 508.618 cv
1272.73 509.665 1272.73 510.655 1272.73 511.644 cv
1271.63 511.644 1270.52 511.644 1269.36 511.644 cv
1269.36 510.655 1269.36 509.665 1269.36 508.618 cv
1269.36 508.618 li
cp
ef
1275.35 508.618 mo
1276.17 508.618 1276.98 508.618 1277.79 508.618 cv
1277.79 509.665 1277.79 510.655 1277.79 511.644 cv
1276.98 511.644 1276.17 511.644 1275.35 511.644 cv
1275.35 510.655 1275.35 509.665 1275.35 508.618 cv
1275.35 508.618 li
cp
ef
1262.49 508.618 mo
1263.94 508.618 1265.34 508.618 1266.8 508.618 cv
1266.8 509.665 1266.8 510.655 1266.8 511.644 cv
1265.34 511.644 1263.94 511.644 1262.49 511.644 cv
1262.49 510.655 1262.49 509.665 1262.49 508.618 cv
1262.49 508.618 li
cp
ef
1262.49 514.496 mo
1263.94 514.496 1265.34 514.496 1266.8 514.496 cv
1266.8 515.543 1266.8 516.533 1266.8 517.522 cv
1265.34 517.522 1263.94 517.522 1262.49 517.522 cv
1262.49 516.533 1262.49 515.543 1262.49 514.496 cv
1262.49 514.496 li
cp
ef
1262.49 520.374 mo
1266.8 520.374 li
1266.8 523.4 li
1262.49 523.4 li
1262.49 520.374 li
cp
ef
1269.36 385.183 mo
1270.52 385.183 1271.63 385.183 1272.73 385.183 cv
1272.73 386.172 1272.73 387.22 1272.73 388.209 cv
1271.63 388.209 1270.52 388.209 1269.36 388.209 cv
1269.36 387.22 1269.36 386.172 1269.36 385.183 cv
1269.36 385.183 li
cp
ef
1275.35 385.183 mo
1276.17 385.183 1276.98 385.183 1277.79 385.183 cv
1277.79 386.172 1277.79 387.22 1277.79 388.209 cv
1276.98 388.209 1276.17 388.209 1275.35 388.209 cv
1275.35 387.22 1275.35 386.172 1275.35 385.183 cv
1275.35 385.183 li
cp
ef
1280.41 385.183 mo
1281.98 385.183 li
1281.98 388.209 li
1280.41 388.209 li
1280.41 385.183 li
cp
ef
1262.49 385.183 mo
1266.8 385.183 li
1266.8 388.209 li
1262.49 388.209 li
1262.49 385.183 li
cp
ef
1157.39 440.411 mo
1189.04 440.411 li
1189.04 444.427 li
1157.39 444.427 li
1157.39 440.411 li
cp
ef
1157.39 445.882 mo
1189.04 445.882 li
1189.04 448.152 li
1157.39 448.152 li
1157.39 445.882 li
cp
ef
1157.39 425.571 mo
1189.04 425.571 li
1189.04 429.645 li
1157.39 429.645 li
1157.39 425.571 li
cp
ef
1157.39 431.1 mo
1189.04 431.1 li
1189.04 433.37 li
1157.39 433.37 li
1157.39 431.1 li
cp
ef
1157.39 455.193 mo
1189.04 455.193 li
1189.04 459.267 li
1157.39 459.267 li
1157.39 455.193 li
cp
ef
1157.39 460.664 mo
1189.04 460.664 li
1189.04 462.992 li
1157.39 462.992 li
1157.39 460.664 li
cp
ef
1157.39 470.033 mo
1189.04 470.033 li
1189.04 474.049 li
1157.39 474.049 li
1157.39 470.033 li
cp
ef
1157.39 475.504 mo
1189.04 475.504 li
1189.04 477.774 li
1157.39 477.774 li
1157.39 475.504 li
cp
ef
1157.39 484.815 mo
1189.04 484.815 li
1189.04 488.831 li
1157.39 488.831 li
1157.39 484.815 li
cp
ef
1157.39 490.286 mo
1189.04 490.286 li
1189.04 492.556 li
1175.78 492.556 li
1157.39 492.556 li
1157.39 490.286 li
cp
ef
1175.78 503.671 mo
1175.78 499.597 li
1189.04 499.597 li
1189.04 503.671 li
1175.78 503.671 li
cp
ef
1175.78 507.396 mo
1175.78 505.126 li
1189.04 505.126 li
1189.04 507.396 li
1175.78 507.396 li
cp
ef
1175.78 518.453 mo
1175.78 514.438 li
1189.04 514.438 li
1189.04 518.453 li
1175.78 518.453 li
cp
ef
1175.78 522.178 mo
1175.78 519.908 li
1189.04 519.908 li
1189.04 522.178 li
1175.78 522.178 li
cp
ef
1149.01 511.993 mo
1154.48 511.993 li
1154.48 515.485 li
1149.01 515.485 li
1149.01 511.993 li
cp
ef
1157.68 511.993 mo
1162.16 511.993 li
1162.16 515.485 li
1157.68 515.485 li
1157.68 511.993 li
cp
ef
1165.3 511.993 mo
1168.09 511.993 li
1168.09 515.485 li
1165.3 515.485 li
1165.3 511.993 li
cp
ef
1149.01 519.035 mo
1154.48 519.035 li
1154.48 522.469 li
1149.01 522.469 li
1149.01 519.035 li
cp
ef
1157.68 519.035 mo
1162.16 519.035 li
1162.16 522.469 li
1157.68 522.469 li
1157.68 519.035 li
cp
ef
1149.01 497.968 mo
1154.48 497.968 li
1154.48 501.402 li
1149.01 501.402 li
1149.01 497.968 li
cp
ef
1157.68 497.968 mo
1162.16 497.968 li
1162.16 501.402 li
1157.68 501.402 li
1157.68 497.968 li
cp
ef
1165.3 497.968 mo
1168.09 497.968 li
1168.09 501.402 li
1165.3 501.402 li
1165.3 497.968 li
cp
ef
1149.01 504.952 mo
1154.48 504.952 li
1154.48 508.443 li
1149.01 508.443 li
1149.01 504.952 li
cp
ef
1157.68 504.952 mo
1162.16 504.952 li
1162.16 508.443 li
1157.68 508.443 li
1157.68 504.952 li
cp
ef
1165.3 504.952 mo
1168.09 504.952 li
1168.09 508.443 li
1165.3 508.443 li
1165.3 504.952 li
cp
ef
1086.5 457.929 mo
1083.18 457.929 li
1083.18 452.574 li
1086.5 452.574 li
1086.5 457.929 li
cp
ef
1086.5 435.29 mo
1083.18 435.29 li
1083.18 429.936 li
1086.5 429.936 li
1086.5 435.29 li
cp
ef
1080.92 439.829 mo
1077.6 439.829 li
1077.6 434.475 li
1080.92 434.475 li
1080.92 439.829 li
cp
ef
1075.62 420.683 mo
1072.3 420.683 li
1072.3 415.329 li
1075.62 415.329 li
1075.62 420.683 li
cp
ef
1041.57 490.926 mo
1046.23 490.926 li
1046.23 496.513 li
1041.57 496.513 li
1041.57 490.926 li
cp
ef
1041.57 500.529 mo
1046.23 500.529 li
1046.23 498.084 li
1041.57 498.084 li
1041.57 500.529 li
cp
ef
1048.38 490.926 mo
1052.98 490.926 li
1052.98 496.513 li
1048.38 496.513 li
1048.38 490.926 li
cp
ef
1048.38 500.529 mo
1052.98 500.529 li
1052.98 498.084 li
1048.38 498.084 li
1048.38 500.529 li
cp
ef
1041.57 476.261 mo
1046.23 476.261 li
1046.23 481.847 li
1041.57 481.847 li
1041.57 476.261 li
cp
ef
1041.57 485.863 mo
1046.23 485.863 li
1046.23 483.419 li
1041.57 483.419 li
1041.57 485.863 li
cp
ef
1048.38 476.261 mo
1052.98 476.261 li
1052.98 481.847 li
1048.38 481.847 li
1048.38 476.261 li
cp
ef
1048.38 485.863 mo
1052.98 485.863 li
1052.98 483.419 li
1048.38 483.419 li
1048.38 485.863 li
cp
ef
1041.57 505.592 mo
1046.23 505.592 li
1046.23 511.179 li
1041.57 511.179 li
1041.57 505.592 li
cp
ef
1041.57 515.194 mo
1046.23 515.194 li
1046.23 512.75 li
1041.57 512.75 li
1041.57 515.194 li
cp
ef
1048.38 505.592 mo
1052.98 505.592 li
1052.98 511.179 li
1048.38 511.179 li
1048.38 505.592 li
cp
ef
1048.38 515.194 mo
1052.98 515.194 li
1052.98 512.75 li
1048.38 512.75 li
1048.38 515.194 li
cp
ef
1041.57 520.257 mo
1046.23 520.257 li
1046.23 525.844 li
1041.57 525.844 li
1041.57 520.257 li
cp
ef
1041.57 529.86 mo
1046.23 529.86 li
1046.23 527.415 li
1041.57 527.415 li
1041.57 529.86 li
cp
ef
1048.38 520.257 mo
1052.98 520.257 li
1052.98 525.844 li
1048.38 525.844 li
1048.38 520.257 li
cp
ef
1048.38 529.86 mo
1052.98 529.86 li
1052.98 527.415 li
1048.38 527.415 li
1048.38 529.86 li
cp
ef
1026.73 490.926 mo
1031.33 490.926 li
1031.33 496.513 li
1026.73 496.513 li
1026.73 490.926 li
cp
ef
1026.73 500.529 mo
1031.33 500.529 li
1031.33 498.084 li
1026.73 498.084 li
1026.73 500.529 li
cp
ef
1033.49 490.926 mo
1038.14 490.926 li
1038.14 496.513 li
1033.49 496.513 li
1033.49 490.926 li
cp
ef
1033.49 500.529 mo
1038.14 500.529 li
1038.14 498.084 li
1033.49 498.084 li
1033.49 500.529 li
cp
ef
1026.73 476.261 mo
1031.33 476.261 li
1031.33 481.847 li
1026.73 481.847 li
1026.73 476.261 li
cp
ef
1026.73 485.863 mo
1031.33 485.863 li
1031.33 483.419 li
1026.73 483.419 li
1026.73 485.863 li
cp
ef
1033.49 476.261 mo
1038.14 476.261 li
1038.14 481.847 li
1033.49 481.847 li
1033.49 476.261 li
cp
ef
1033.49 485.863 mo
1038.14 485.863 li
1038.14 483.419 li
1033.49 483.419 li
1033.49 485.863 li
cp
ef
1026.73 505.592 mo
1031.33 505.592 li
1031.33 511.179 li
1026.73 511.179 li
1026.73 505.592 li
cp
ef
1026.73 515.194 mo
1031.33 515.194 li
1031.33 512.75 li
1026.73 512.75 li
1026.73 515.194 li
cp
ef
1033.49 505.592 mo
1038.14 505.592 li
1038.14 511.179 li
1033.49 511.179 li
1033.49 505.592 li
cp
ef
1033.49 515.194 mo
1038.14 515.194 li
1038.14 512.75 li
1033.49 512.75 li
1033.49 515.194 li
cp
ef
1026.73 520.257 mo
1031.33 520.257 li
1031.33 525.844 li
1026.73 525.844 li
1026.73 520.257 li
cp
ef
1026.73 529.86 mo
1031.33 529.86 li
1031.33 527.415 li
1026.73 527.415 li
1026.73 529.86 li
cp
ef
1033.49 520.257 mo
1038.14 520.257 li
1038.14 525.844 li
1033.49 525.844 li
1033.49 520.257 li
cp
ef
1033.49 529.86 mo
1038.14 529.86 li
1038.14 527.415 li
1033.49 527.415 li
1033.49 529.86 li
cp
ef
1056.47 490.926 mo
1061.13 490.926 li
1061.13 496.513 li
1056.47 496.513 li
1056.47 490.926 li
cp
ef
1056.47 500.529 mo
1061.13 500.529 li
1061.13 498.084 li
1056.47 498.084 li
1056.47 500.529 li
cp
ef
1063.28 490.926 mo
1067.88 490.926 li
1067.88 496.513 li
1063.28 496.513 li
1063.28 490.926 li
cp
ef
1063.28 500.529 mo
1067.88 500.529 li
1067.88 498.084 li
1063.28 498.084 li
1063.28 500.529 li
cp
ef
1056.47 476.261 mo
1061.13 476.261 li
1061.13 481.847 li
1056.47 481.847 li
1056.47 476.261 li
cp
ef
1056.47 485.863 mo
1061.13 485.863 li
1061.13 483.419 li
1056.47 483.419 li
1056.47 485.863 li
cp
ef
1063.28 476.261 mo
1067.88 476.261 li
1067.88 481.847 li
1063.28 481.847 li
1063.28 476.261 li
cp
ef
1063.28 485.863 mo
1067.88 485.863 li
1067.88 483.419 li
1063.28 483.419 li
1063.28 485.863 li
cp
ef
1056.47 505.592 mo
1061.13 505.592 li
1061.13 511.179 li
1056.47 511.179 li
1056.47 505.592 li
cp
ef
1056.47 515.194 mo
1061.13 515.194 li
1061.13 512.75 li
1056.47 512.75 li
1056.47 515.194 li
cp
ef
1063.28 505.592 mo
1067.88 505.592 li
1067.88 511.179 li
1063.28 511.179 li
1063.28 505.592 li
cp
ef
1063.28 515.194 mo
1067.88 515.194 li
1067.88 512.75 li
1063.28 512.75 li
1063.28 515.194 li
cp
ef
1056.47 520.257 mo
1061.13 520.257 li
1061.13 525.844 li
1056.47 525.844 li
1056.47 520.257 li
cp
ef
1056.47 529.86 mo
1061.13 529.86 li
1061.13 527.415 li
1056.47 527.415 li
1056.47 529.86 li
cp
ef
1063.28 520.257 mo
1067.88 520.257 li
1067.88 525.844 li
1063.28 525.844 li
1063.28 520.257 li
cp
ef
1063.28 529.86 mo
1067.88 529.86 li
1067.88 527.415 li
1063.28 527.415 li
1063.28 529.86 li
cp
ef
1071.37 490.926 mo
1075.97 490.926 li
1075.97 496.513 li
1071.37 496.513 li
1071.37 490.926 li
cp
ef
1071.37 500.529 mo
1075.97 500.529 li
1075.97 498.084 li
1071.37 498.084 li
1071.37 500.529 li
cp
ef
1078.18 490.926 mo
1082.78 490.926 li
1082.78 496.513 li
1078.18 496.513 li
1078.18 490.926 li
cp
ef
1078.18 500.529 mo
1082.78 500.529 li
1082.78 498.084 li
1078.18 498.084 li
1078.18 500.529 li
cp
ef
1071.37 476.261 mo
1075.97 476.261 li
1075.97 481.847 li
1071.37 481.847 li
1071.37 476.261 li
cp
ef
1071.37 485.863 mo
1075.97 485.863 li
1075.97 483.419 li
1071.37 483.419 li
1071.37 485.863 li
cp
ef
1078.18 476.261 mo
1082.78 476.261 li
1082.78 481.847 li
1078.18 481.847 li
1078.18 476.261 li
cp
ef
1078.18 485.863 mo
1082.78 485.863 li
1082.78 483.419 li
1078.18 483.419 li
1078.18 485.863 li
cp
ef
1071.37 505.592 mo
1075.97 505.592 li
1075.97 511.179 li
1071.37 511.179 li
1071.37 505.592 li
cp
ef
1071.37 515.194 mo
1075.97 515.194 li
1075.97 512.75 li
1071.37 512.75 li
1071.37 515.194 li
cp
ef
1078.18 505.592 mo
1082.78 505.592 li
1082.78 511.179 li
1078.18 511.179 li
1078.18 505.592 li
cp
ef
1078.18 515.194 mo
1082.78 515.194 li
1082.78 512.75 li
1078.18 512.75 li
1078.18 515.194 li
cp
ef
1071.37 520.257 mo
1075.97 520.257 li
1075.97 525.844 li
1071.37 525.844 li
1071.37 520.257 li
cp
ef
1071.37 529.86 mo
1075.97 529.86 li
1075.97 527.415 li
1071.37 527.415 li
1071.37 529.86 li
cp
ef
1078.18 520.257 mo
1082.78 520.257 li
1082.78 525.844 li
1078.18 525.844 li
1078.18 520.257 li
cp
ef
1078.18 529.86 mo
1082.78 529.86 li
1082.78 527.415 li
1078.18 527.415 li
1078.18 529.86 li
cp
ef
973.31 418.355 mo
979.944 423.302 li
979.944 427.317 li
979.246 427.317 li
973.31 422.894 li
973.31 418.355 li
cp
ef
973.31 408.461 mo
979.944 413.408 li
979.944 417.947 li
973.31 413.001 li
973.31 408.461 li
cp
ef
968.13 501.576 mo
975.114 501.576 li
975.114 515.66 li
968.13 515.66 li
968.13 501.576 li
cp
ef
968.13 482.837 mo
975.114 482.837 li
975.114 496.862 li
968.13 496.862 li
968.13 482.837 li
cp
ef
958.004 482.837 mo
964.929 482.837 li
964.929 496.862 li
958.004 496.862 li
958.004 482.837 li
cp
ef
947.82 482.837 mo
954.745 482.837 li
954.745 496.862 li
947.82 496.862 li
947.82 482.837 li
cp
ef
900.855 368.713 mo
920.234 368.713 li
919.943 370.75 li
900.855 370.75 li
900.855 370.11 900.855 369.411 900.855 368.713 cv
900.855 368.713 li
cp
ef
933.445 368.713 mo
935.889 368.713 li
935.889 369.411 935.889 370.11 935.889 370.75 cv
933.445 370.75 li
933.445 368.713 li
cp
ef
900.855 372.438 mo
919.711 372.438 li
919.361 374.475 li
900.855 374.475 li
900.855 373.776 900.855 373.078 900.855 372.438 cv
900.855 372.438 li
cp
ef
933.445 372.438 mo
935.889 372.438 li
935.889 373.078 935.889 373.776 935.889 374.475 cv
933.445 374.475 li
933.445 372.438 li
cp
ef
900.855 376.104 mo
919.129 376.104 li
918.838 378.141 li
900.855 378.141 li
900.855 377.501 900.855 376.802 900.855 376.104 cv
900.855 376.104 li
cp
ef
933.445 376.104 mo
935.889 376.104 li
935.889 376.802 935.889 377.501 935.889 378.141 cv
933.445 378.141 li
933.445 376.104 li
cp
ef
900.855 379.829 mo
918.605 379.829 li
918.314 381.866 li
900.855 381.866 li
900.855 381.167 900.855 380.469 900.855 379.829 cv
900.855 379.829 li
cp
ef
933.445 379.829 mo
935.889 379.829 li
935.889 380.469 935.889 381.167 935.889 381.866 cv
933.445 381.866 li
933.445 379.829 li
cp
ef
900.855 383.495 mo
918.023 383.495 li
917.732 385.532 li
900.855 385.532 li
900.855 384.892 900.855 384.193 900.855 383.495 cv
900.855 383.495 li
cp
ef
933.445 383.495 mo
935.889 383.495 li
935.889 384.193 935.889 384.892 935.889 385.532 cv
933.445 385.532 li
933.445 383.495 li
cp
ef
900.855 387.22 mo
917.499 387.22 li
917.208 389.257 li
900.855 389.257 li
900.855 388.558 900.855 387.86 900.855 387.22 cv
900.855 387.22 li
cp
ef
933.445 387.22 mo
935.889 387.22 li
935.889 387.86 935.889 388.558 935.889 389.257 cv
933.445 389.257 li
933.445 387.22 li
cp
ef
900.855 390.886 mo
916.917 390.886 li
916.626 392.923 li
900.855 392.923 li
900.855 392.283 900.855 391.584 900.855 390.886 cv
900.855 390.886 li
cp
ef
933.445 390.886 mo
935.889 390.886 li
935.889 391.584 935.889 392.283 935.889 392.923 cv
933.445 392.923 li
933.445 390.886 li
cp
ef
900.855 394.611 mo
916.393 394.611 li
916.102 396.647 li
900.855 396.647 li
900.855 395.949 900.855 395.251 900.855 394.611 cv
900.855 394.611 li
cp
ef
933.445 394.611 mo
935.889 394.611 li
935.889 395.251 935.889 395.949 935.889 396.647 cv
933.445 396.647 li
933.445 394.611 li
cp
ef
900.855 398.277 mo
915.87 398.277 li
915.52 400.314 li
900.855 400.314 li
900.855 399.674 900.855 398.975 900.855 398.277 cv
900.855 398.277 li
cp
ef
933.445 398.277 mo
935.889 398.277 li
935.889 398.975 935.889 399.674 935.889 400.314 cv
933.445 400.314 li
933.445 398.277 li
cp
ef
900.855 402.002 mo
915.288 402.002 li
914.997 404.038 li
900.855 404.038 li
900.855 403.34 900.855 402.642 900.855 402.002 cv
900.855 402.002 li
cp
ef
933.445 402.002 mo
935.889 402.002 li
935.889 402.642 935.889 403.34 935.889 404.038 cv
933.445 404.038 li
933.445 402.002 li
cp
ef
900.855 405.668 mo
914.764 405.668 li
914.473 407.705 li
900.855 407.705 li
900.855 407.065 900.855 406.366 900.855 405.668 cv
900.855 405.668 li
cp
ef
933.445 405.668 mo
935.889 405.668 li
935.889 406.366 935.889 407.065 935.889 407.705 cv
933.445 407.705 li
933.445 405.668 li
cp
ef
900.855 409.393 mo
914.182 409.393 li
913.891 411.429 li
900.855 411.429 li
900.855 410.731 900.855 410.033 900.855 409.393 cv
900.855 409.393 li
cp
ef
933.445 409.393 mo
935.889 409.393 li
935.889 410.033 935.889 410.731 935.889 411.429 cv
933.445 411.429 li
933.445 409.393 li
cp
ef
900.855 413.059 mo
913.658 413.059 li
913.367 415.096 li
900.855 415.096 li
900.855 414.456 900.855 413.757 900.855 413.059 cv
900.855 413.059 li
cp
ef
933.445 413.059 mo
935.889 413.059 li
935.889 413.757 935.889 414.456 935.889 415.096 cv
933.445 415.096 li
933.445 413.059 li
cp
ef
900.855 416.784 mo
913.076 416.784 li
912.785 418.82 li
900.855 418.82 li
900.855 418.122 900.855 417.424 900.855 416.784 cv
900.855 416.784 li
cp
ef
933.445 416.784 mo
935.889 416.784 li
935.889 417.424 935.889 418.122 935.889 418.82 cv
933.445 418.82 li
933.445 416.784 li
cp
ef
900.855 420.45 mo
912.552 420.45 li
912.261 422.487 li
900.855 422.487 li
900.855 421.847 900.855 421.148 900.855 420.45 cv
900.855 420.45 li
cp
ef
933.445 420.45 mo
935.889 420.45 li
935.889 421.148 935.889 421.847 935.889 422.487 cv
933.445 422.487 li
933.445 420.45 li
cp
ef
900.855 424.174 mo
912.029 424.174 li
911.679 426.211 li
900.855 426.211 li
900.855 425.513 900.855 424.815 900.855 424.174 cv
900.855 424.174 li
cp
ef
933.445 424.174 mo
935.889 424.174 li
935.889 424.815 935.889 425.513 935.889 426.211 cv
933.445 426.211 li
933.445 424.174 li
cp
ef
900.855 427.841 mo
911.447 427.841 li
911.156 429.878 li
900.855 429.878 li
900.855 429.238 900.855 428.539 900.855 427.841 cv
900.855 427.841 li
cp
ef
933.445 427.841 mo
935.889 427.841 li
935.889 428.539 935.889 429.238 935.889 429.878 cv
933.445 429.878 li
933.445 427.841 li
cp
ef
900.855 431.565 mo
910.923 431.565 li
910.632 433.602 li
900.855 433.602 li
900.855 432.904 900.855 432.206 900.855 431.565 cv
900.855 431.565 li
cp
ef
933.445 431.565 mo
935.889 431.565 li
935.889 432.206 935.889 432.904 935.889 433.602 cv
933.445 433.602 li
933.445 431.565 li
cp
ef
900.855 435.232 mo
910.341 435.232 li
910.05 437.269 li
900.855 437.269 li
900.855 436.629 900.855 435.93 900.855 435.232 cv
900.855 435.232 li
cp
ef
933.445 435.232 mo
935.889 435.232 li
935.889 435.93 935.889 436.629 935.889 437.269 cv
933.445 437.269 li
933.445 435.232 li
cp
ef
900.855 438.956 mo
909.817 438.956 li
909.526 440.993 li
900.855 440.993 li
900.855 440.295 900.855 439.597 900.855 438.956 cv
900.855 438.956 li
cp
ef
933.445 438.956 mo
935.889 438.956 li
935.889 439.597 935.889 440.295 935.889 440.993 cv
933.445 440.993 li
933.445 438.956 li
cp
ef
900.855 442.623 mo
909.235 442.623 li
908.944 444.66 li
900.855 444.66 li
900.855 444.02 900.855 443.321 900.855 442.623 cv
900.855 442.623 li
cp
ef
933.445 442.623 mo
935.889 442.623 li
935.889 443.321 935.889 444.02 935.889 444.66 cv
933.445 444.66 li
933.445 442.623 li
cp
ef
900.855 446.347 mo
908.711 446.347 li
908.42 448.384 li
900.855 448.384 li
900.855 447.686 900.855 446.988 900.855 446.347 cv
900.855 446.347 li
cp
ef
933.445 446.347 mo
935.889 446.347 li
935.889 446.988 935.889 447.686 935.889 448.384 cv
933.445 448.384 li
933.445 446.347 li
cp
ef
900.855 450.014 mo
908.304 450.014 li
908.304 452.051 li
900.855 452.051 li
900.855 451.411 900.855 450.712 900.855 450.014 cv
900.855 450.014 li
cp
ef
933.445 450.014 mo
935.889 450.014 li
935.889 450.712 935.889 451.411 935.889 452.051 cv
933.445 452.051 li
933.445 450.014 li
cp
ef
900.855 453.738 mo
908.304 453.738 li
908.304 455.775 li
900.855 455.775 li
900.855 455.077 900.855 454.379 900.855 453.738 cv
900.855 453.738 li
cp
ef
933.445 453.738 mo
935.889 453.738 li
935.889 454.379 935.889 455.077 935.889 455.775 cv
933.445 455.775 li
933.445 453.738 li
cp
ef
900.855 457.405 mo
908.304 457.405 li
908.304 459.442 li
900.855 459.442 li
900.855 458.802 900.855 458.103 900.855 457.405 cv
900.855 457.405 li
cp
ef
933.445 457.405 mo
935.889 457.405 li
935.889 458.103 935.889 458.802 935.889 459.442 cv
933.445 459.442 li
933.445 457.405 li
cp
ef
900.855 461.129 mo
908.304 461.129 li
908.304 463.166 li
900.855 463.166 li
900.855 462.468 900.855 461.77 900.855 461.129 cv
900.855 461.129 li
cp
ef
933.445 461.129 mo
935.889 461.129 li
935.889 461.77 935.889 462.468 935.889 463.166 cv
933.445 463.166 li
933.445 461.129 li
cp
ef
900.855 464.796 mo
908.304 464.796 li
908.304 466.833 li
900.855 466.833 li
900.855 466.193 900.855 465.494 900.855 464.796 cv
900.855 464.796 li
cp
ef
933.445 464.796 mo
935.889 464.796 li
935.889 465.494 935.889 466.193 935.889 466.833 cv
933.445 466.833 li
933.445 464.796 li
cp
ef
900.855 468.52 mo
908.304 468.52 li
908.304 470.557 li
900.855 470.557 li
900.855 469.859 900.855 469.161 900.855 468.52 cv
900.855 468.52 li
cp
ef
933.445 468.52 mo
935.889 468.52 li
935.889 469.161 935.889 469.859 935.889 470.557 cv
933.445 470.557 li
933.445 468.52 li
cp
ef
900.855 472.187 mo
908.304 472.187 li
908.304 474.224 li
900.855 474.224 li
900.855 473.583 900.855 472.885 900.855 472.187 cv
900.855 472.187 li
cp
ef
933.445 472.187 mo
935.889 472.187 li
935.889 472.885 935.889 473.583 935.889 474.224 cv
933.445 474.224 li
933.445 472.187 li
cp
ef
900.855 475.911 mo
908.304 475.911 li
908.304 477.948 li
900.855 477.948 li
900.855 477.25 900.855 476.552 900.855 475.911 cv
900.855 475.911 li
cp
ef
933.445 475.911 mo
935.889 475.911 li
935.889 476.552 935.889 477.25 935.889 477.948 cv
933.445 477.948 li
933.445 475.911 li
cp
ef
900.855 479.578 mo
908.304 479.578 li
908.304 481.615 li
900.855 481.615 li
900.855 480.974 900.855 480.276 900.855 479.578 cv
900.855 479.578 li
cp
ef
933.445 479.578 mo
935.889 479.578 li
935.889 480.276 935.889 480.974 935.889 481.615 cv
933.445 481.615 li
933.445 479.578 li
cp
ef
900.855 483.302 mo
908.304 483.302 li
908.304 485.339 li
900.855 485.339 li
900.855 484.641 900.855 483.943 900.855 483.302 cv
900.855 483.302 li
cp
ef
933.445 483.302 mo
935.889 483.302 li
935.889 483.943 935.889 484.641 935.889 485.339 cv
933.445 485.339 li
933.445 483.302 li
cp
ef
900.855 486.969 mo
908.304 486.969 li
908.304 489.006 li
900.855 489.006 li
900.855 488.365 900.855 487.667 900.855 486.969 cv
900.855 486.969 li
cp
ef
933.445 486.969 mo
935.889 486.969 li
935.889 487.667 935.889 488.365 935.889 489.006 cv
933.445 489.006 li
933.445 486.969 li
cp
ef
900.855 490.693 mo
908.304 490.693 li
908.304 492.73 li
900.855 492.73 li
900.855 492.032 900.855 491.333 900.855 490.693 cv
900.855 490.693 li
cp
ef
933.445 490.693 mo
935.889 490.693 li
935.889 491.333 935.889 492.032 935.889 492.73 cv
933.445 492.73 li
933.445 490.693 li
cp
ef
900.855 494.36 mo
908.304 494.36 li
908.304 496.397 li
900.855 496.397 li
900.855 495.756 900.855 495.058 900.855 494.36 cv
900.855 494.36 li
cp
ef
933.445 494.36 mo
935.889 494.36 li
935.889 495.058 935.889 495.756 935.889 496.397 cv
933.445 496.397 li
933.445 494.36 li
cp
ef
900.855 498.084 mo
908.304 498.084 li
908.304 500.121 li
900.855 500.121 li
900.855 499.423 900.855 498.724 900.855 498.084 cv
900.855 498.084 li
cp
ef
933.445 498.084 mo
935.889 498.084 li
935.889 498.724 935.889 499.423 935.889 500.121 cv
933.445 500.121 li
933.445 498.084 li
cp
ef
900.855 501.751 mo
908.304 501.751 li
908.304 503.788 li
900.855 503.788 li
900.855 503.147 900.855 502.449 900.855 501.751 cv
900.855 501.751 li
cp
ef
933.445 501.751 mo
935.889 501.751 li
935.889 502.449 935.889 503.147 935.889 503.788 cv
933.445 503.788 li
933.445 501.751 li
cp
ef
900.855 505.475 mo
908.304 505.475 li
908.304 507.512 li
900.855 507.512 li
900.855 506.814 900.855 506.115 900.855 505.475 cv
900.855 505.475 li
cp
ef
933.445 505.475 mo
935.889 505.475 li
935.889 506.115 935.889 506.814 935.889 507.512 cv
933.445 507.512 li
933.445 505.475 li
cp
ef
900.855 509.142 mo
908.304 509.142 li
908.304 511.179 li
900.855 511.179 li
900.855 510.538 900.855 509.84 900.855 509.142 cv
900.855 509.142 li
cp
ef
933.445 509.142 mo
935.889 509.142 li
935.889 509.84 935.889 510.538 935.889 511.179 cv
933.445 511.179 li
933.445 509.142 li
cp
ef
900.855 512.866 mo
908.304 512.866 li
908.304 514.903 li
900.855 514.903 li
900.855 514.205 900.855 513.506 900.855 512.866 cv
900.855 512.866 li
cp
ef
933.445 512.866 mo
935.889 512.866 li
935.889 513.506 935.889 514.205 935.889 514.903 cv
933.445 514.903 li
933.445 512.866 li
cp
ef
900.855 516.533 mo
908.304 516.533 li
908.304 518.57 li
900.855 518.57 li
900.855 517.929 900.855 517.231 900.855 516.533 cv
900.855 516.533 li
cp
ef
933.445 516.533 mo
935.889 516.533 li
935.889 517.231 935.889 517.929 935.889 518.57 cv
933.445 518.57 li
933.445 516.533 li
cp
ef
900.855 520.257 mo
908.304 520.257 li
908.304 522.294 li
900.855 522.294 li
900.855 521.596 900.855 520.897 900.855 520.257 cv
900.855 520.257 li
cp
ef
933.445 520.257 mo
935.889 520.257 li
935.889 520.897 935.889 521.596 935.889 522.294 cv
933.445 522.294 li
933.445 520.257 li
cp
ef
900.855 523.924 mo
908.304 523.924 li
908.304 525.961 li
900.855 525.961 li
900.855 525.32 900.855 524.622 900.855 523.924 cv
900.855 523.924 li
cp
ef
933.445 523.924 mo
935.889 523.924 li
935.889 524.622 935.889 525.32 935.889 525.961 cv
933.445 525.961 li
933.445 523.924 li
cp
ef
900.855 527.648 mo
908.304 527.648 li
908.304 529.685 li
900.855 529.685 li
900.855 528.987 900.855 528.288 900.855 527.648 cv
900.855 527.648 li
cp
ef
933.445 527.648 mo
935.889 527.648 li
935.889 528.288 935.889 528.987 935.889 529.685 cv
933.445 529.685 li
933.445 527.648 li
cp
ef
900.855 531.315 mo
908.304 531.315 li
908.304 533.352 li
900.855 533.352 li
900.855 531.315 li
cp
ef
933.445 531.315 mo
935.889 531.315 li
935.889 533.352 li
933.445 533.352 li
933.445 531.315 li
cp
ef
900.855 365.047 mo
935.889 365.047 li
935.889 367.084 li
900.855 367.084 li
900.855 365.047 li
cp
ef
860.466 431.973 mo
866.461 441.575 li
866.461 447.395 li
860.466 437.851 li
860.466 431.973 li
cp
ef
860.466 482.429 mo
863.493 487.202 li
863.493 493.079 li
860.466 488.307 li
860.466 482.429 li
cp
ef
876.994 420.508 mo
878.857 423.476 li
878.857 429.354 li
873.27 420.508 li
876.994 420.508 li
cp
ef
872.804 426.27 mo
878.798 435.814 li
878.798 441.692 li
872.804 432.147 li
866.868 422.603 li
870.534 422.603 li
872.804 426.27 li
cp
ef
866.635 427.724 mo
867.159 428.539 li
867.159 434.417 li
866.635 433.602 li
862.154 426.328 li
865.82 426.328 li
866.635 427.724 li
cp
ef
869.952 433.02 mo
872.629 437.269 li
872.629 443.147 li
869.952 438.898 li
869.952 433.02 li
cp
ef
797.032 404.97 mo
814.491 404.97 li
814.491 420.857 li
797.032 420.857 li
797.032 404.97 li
cp
ef
797.032 426.968 mo
814.491 426.968 li
814.491 442.914 li
797.032 442.914 li
797.032 426.968 li
cp
ef
797.032 449.025 mo
814.491 449.025 li
814.491 464.97 li
797.032 464.97 li
797.032 449.025 li
cp
ef
797.032 471.081 mo
814.491 471.081 li
814.491 487.027 li
797.032 487.027 li
797.032 471.081 li
cp
ef
797.032 493.138 mo
814.491 493.138 li
814.491 509.083 li
797.032 509.083 li
797.032 493.138 li
cp
ef
709.853 478.239 mo
713.694 478.239 li
713.694 525.088 li
709.853 525.088 li
709.853 478.239 li
cp
ef
717.652 478.239 mo
721.493 478.239 li
721.493 528.696 li
717.652 528.696 li
717.652 478.239 li
cp
ef
725.392 478.239 mo
729.233 478.239 li
729.233 528.696 li
725.392 528.696 li
725.392 478.239 li
cp
ef
733.19 478.239 mo
737.031 478.239 li
737.031 533.002 li
733.19 533.002 li
733.19 478.239 li
cp
ef
740.989 478.239 mo
744.83 478.239 li
744.83 533.002 li
740.989 533.002 li
740.989 478.239 li
cp
ef
748.787 478.239 mo
752.628 478.239 li
752.628 533.002 li
748.787 533.002 li
748.787 478.239 li
cp
ef
664.576 436.57 mo
669.348 443.088 li
669.348 446.988 li
664.576 440.47 li
664.576 436.57 li
cp
ef
666.439 537.309 mo
664.576 534.806 li
664.576 530.907 li
669.29 537.309 li
666.439 537.309 li
cp
ef
664.576 428.015 mo
669.348 434.475 li
669.348 438.374 li
664.576 431.915 li
664.576 428.015 li
cp
ef
664.576 419.402 mo
669.348 425.92 li
669.348 429.82 li
664.576 423.302 li
664.576 419.402 li
cp
ef
664.576 462.293 mo
669.348 468.811 li
669.348 472.711 li
664.576 466.193 li
664.576 462.293 li
cp
ef
664.576 453.738 mo
669.348 460.198 li
669.348 464.097 li
664.576 457.638 li
664.576 453.738 li
cp
ef
664.576 445.125 mo
669.348 451.643 li
669.348 455.543 li
664.576 449.025 li
664.576 445.125 li
cp
ef
664.576 488.016 mo
669.348 494.534 li
669.348 498.433 li
664.576 491.915 li
664.576 488.016 li
cp
ef
664.576 479.461 mo
669.348 485.921 li
669.348 489.82 li
664.576 483.361 li
664.576 479.461 li
cp
ef
664.576 470.848 mo
669.348 477.366 li
669.348 481.265 li
664.576 474.747 li
664.576 470.848 li
cp
ef
664.576 513.739 mo
669.348 520.199 li
669.348 524.156 li
664.576 517.638 li
664.576 513.739 li
cp
ef
664.576 505.184 mo
669.348 511.644 li
669.348 515.543 li
664.576 509.083 li
664.576 505.184 li
cp
ef
664.576 496.571 mo
669.348 503.089 li
669.348 506.988 li
664.576 500.47 li
664.576 496.571 li
cp
ef
664.576 522.294 mo
669.348 528.812 li
669.348 532.711 li
664.576 526.193 li
664.576 522.294 li
cp
ef
637.922 441.575 mo
659.804 471.43 li
656.312 474.049 li
637.922 449.025 li
637.922 441.575 li
cp
ef
637.922 426.561 mo
661.143 458.22 li
661.143 465.611 li
637.922 433.952 li
637.922 426.561 li
cp
ef
644.091 419.868 mo
661.143 443.147 li
661.143 450.596 li
644.091 427.259 li
644.091 419.868 li
cp
ef
653.286 417.482 mo
661.143 428.132 li
661.143 435.523 li
653.286 424.873 li
653.286 417.482 li
cp
ef
637.922 456.648 mo
653.519 477.89 li
653.519 485.339 li
637.922 464.039 li
637.922 456.648 li
cp
ef
637.922 486.678 mo
653.519 507.978 li
653.519 515.369 li
637.922 494.127 li
637.922 486.678 li
cp
ef
637.922 471.663 mo
653.519 492.963 li
653.519 500.354 li
637.922 479.054 li
637.922 471.663 li
cp
ef
637.922 501.751 mo
653.519 522.992 li
653.519 530.442 li
637.922 509.142 li
637.922 501.751 li
cp
ef
637.922 516.765 mo
650.435 533.875 li
645.022 533.875 li
637.922 524.215 li
637.922 516.765 li
cp
ef
658.291 414.979 mo
661.143 418.879 li
661.143 422.778 li
655.439 414.979 li
658.291 414.979 li
cp
ef
600.735 396.473 mo
600.735 393.738 li
559.939 393.738 li
559.939 396.473 li
600.735 396.473 li
cp
ef
569.483 402.06 mo
606.321 402.06 li
606.321 405.435 li
569.483 405.435 li
569.483 402.06 li
cp
ef
557.902 407.123 mo
606.321 407.123 li
606.321 410.498 li
557.902 410.498 li
557.902 407.123 li
cp
ef
557.902 412.128 mo
581.588 412.128 li
581.588 415.503 li
557.902 415.503 li
557.902 412.128 li
cp
ef
585.72 412.128 mo
589.852 412.128 li
589.852 415.503 li
585.72 415.503 li
585.72 412.128 li
cp
ef
594.042 412.128 mo
606.321 412.128 li
606.321 415.503 li
594.042 415.503 li
594.042 412.128 li
cp
ef
557.902 417.191 mo
574.313 417.191 li
574.313 420.566 li
557.902 420.566 li
557.902 417.191 li
cp
ef
578.445 417.191 mo
606.321 417.191 li
606.321 420.566 li
578.445 420.566 li
578.445 417.191 li
cp
ef
557.902 424.407 mo
581.064 424.407 li
581.064 427.783 li
557.902 427.783 li
557.902 424.407 li
cp
ef
585.196 424.407 mo
606.321 424.407 li
606.321 427.783 li
585.196 427.783 li
585.196 424.407 li
cp
ef
557.902 429.47 mo
567.33 429.47 li
567.33 432.846 li
557.902 432.846 li
557.902 429.47 li
cp
ef
571.462 429.47 mo
606.321 429.47 li
606.321 432.846 li
571.462 432.846 li
571.462 429.47 li
cp
ef
557.902 434.475 mo
592.529 434.475 li
592.529 437.851 li
557.902 437.851 li
557.902 434.475 li
cp
ef
596.661 434.475 mo
606.321 434.475 li
606.321 437.851 li
596.661 437.851 li
596.661 434.475 li
cp
ef
557.902 439.538 mo
598.174 439.538 li
598.174 442.914 li
557.902 442.914 li
557.902 439.538 li
cp
ef
602.364 439.538 mo
606.321 439.538 li
606.321 442.914 li
602.364 442.914 li
602.364 439.538 li
cp
ef
557.902 446.755 mo
583.857 446.755 li
583.857 450.13 li
557.902 450.13 li
557.902 446.755 li
cp
ef
587.99 446.755 mo
606.321 446.755 li
606.321 450.13 li
587.99 450.13 li
587.99 446.755 li
cp
ef
557.902 451.818 mo
566.224 451.818 li
566.224 455.193 li
557.902 455.193 li
557.902 451.818 li
cp
ef
570.356 451.818 mo
574.255 451.818 li
574.255 455.193 li
570.356 455.193 li
570.356 451.818 li
cp
ef
578.387 451.818 mo
606.321 451.818 li
606.321 455.193 li
578.387 455.193 li
578.387 451.818 li
cp
ef
557.902 456.823 mo
581.064 456.823 li
581.064 460.198 li
557.902 460.198 li
557.902 456.823 li
cp
ef
585.196 456.823 mo
606.321 456.823 li
606.321 460.198 li
585.196 460.198 li
585.196 456.823 li
cp
ef
557.902 461.886 mo
594.857 461.886 li
594.857 465.261 li
557.902 465.261 li
557.902 461.886 li
cp
ef
598.989 461.886 mo
606.321 461.886 li
606.321 465.261 li
598.989 465.261 li
598.989 461.886 li
cp
ef
557.902 469.102 mo
571.229 469.102 li
571.229 472.478 li
557.902 472.478 li
557.902 469.102 li
cp
ef
575.419 469.102 mo
606.321 469.102 li
606.321 472.478 li
575.419 472.478 li
575.419 469.102 li
cp
ef
557.902 474.165 mo
580.54 474.165 li
580.54 477.541 li
557.902 477.541 li
557.902 474.165 li
cp
ef
584.672 474.165 mo
606.321 474.165 li
606.321 477.541 li
584.672 477.541 li
584.672 474.165 li
cp
ef
557.902 479.17 mo
560.172 479.17 li
560.172 482.546 li
557.902 482.546 li
557.902 479.17 li
cp
ef
564.303 479.17 mo
606.321 479.17 li
606.321 482.546 li
564.303 482.546 li
564.303 479.17 li
cp
ef
557.902 484.233 mo
566.981 484.233 li
566.981 487.609 li
557.902 487.609 li
557.902 484.233 li
cp
ef
571.112 484.233 mo
606.321 484.233 li
606.321 487.609 li
571.112 487.609 li
571.112 484.233 li
cp
ef
557.902 491.45 mo
579.202 491.45 li
579.202 494.883 li
557.902 494.883 li
557.902 491.45 li
cp
ef
583.334 491.45 mo
596.777 491.45 li
596.777 494.883 li
583.334 494.883 li
583.334 491.45 li
cp
ef
557.902 496.513 mo
572.684 496.513 li
572.684 499.888 li
557.902 499.888 li
557.902 496.513 li
cp
ef
576.816 496.513 mo
588.921 496.513 li
588.921 499.888 li
576.816 499.888 li
576.816 496.513 li
cp
ef
557.902 501.518 mo
564.187 501.518 li
564.187 504.893 li
557.902 504.893 li
557.902 501.518 li
cp
ef
568.319 501.518 mo
593.227 501.518 li
593.227 504.893 li
568.319 504.893 li
568.319 501.518 li
cp
ef
557.902 506.581 mo
576.699 506.581 li
576.699 509.956 li
557.902 509.956 li
557.902 506.581 li
cp
ef
576.816 374.824 mo
583.857 374.824 li
583.857 372.496 li
576.816 372.496 li
576.816 374.824 li
cp
ef
568.435 385.299 mo
592.18 385.299 li
592.18 382.913 li
568.435 382.913 li
568.435 385.299 li
cp
ef
480.849 469.219 mo
483.585 469.219 li
483.585 478.006 li
480.849 478.006 li
480.849 469.219 li
cp
ef
485.563 469.219 mo
488.24 469.219 li
488.24 478.006 li
485.563 478.006 li
485.563 469.219 li
cp
ef
490.219 469.219 mo
492.896 469.219 li
492.896 478.006 li
490.219 478.006 li
490.219 469.219 li
cp
ef
494.875 469.219 mo
497.552 469.219 li
497.552 478.006 li
494.875 478.006 li
494.875 469.219 li
cp
ef
508.26 469.219 mo
510.937 469.219 li
510.937 478.006 li
508.26 478.006 li
508.26 469.219 li
cp
ef
512.916 469.219 mo
515.593 469.219 li
515.593 478.006 li
512.916 478.006 li
512.916 469.219 li
cp
ef
517.572 469.219 mo
520.307 469.219 li
520.307 478.006 li
517.572 478.006 li
517.572 469.219 li
cp
ef
522.285 469.219 mo
524.962 469.219 li
524.962 478.006 li
522.285 478.006 li
522.285 469.219 li
cp
ef
466.649 469.219 mo
475.844 469.219 li
475.844 482.604 li
466.649 482.604 li
466.649 469.219 li
cp
ef
480.849 487.26 mo
483.585 487.26 li
483.585 496.047 li
480.849 496.047 li
480.849 487.26 li
cp
ef
485.563 487.26 mo
488.24 487.26 li
488.24 496.047 li
485.563 496.047 li
485.563 487.26 li
cp
ef
490.219 487.26 mo
492.896 487.26 li
492.896 496.047 li
490.219 496.047 li
490.219 487.26 li
cp
ef
494.875 487.26 mo
497.552 487.26 li
497.552 496.047 li
494.875 496.047 li
494.875 487.26 li
cp
ef
508.26 487.26 mo
510.937 487.26 li
510.937 496.047 li
508.26 496.047 li
508.26 487.26 li
cp
ef
512.916 487.26 mo
515.593 487.26 li
515.593 496.047 li
512.916 496.047 li
512.916 487.26 li
cp
ef
517.572 487.26 mo
520.307 487.26 li
520.307 496.047 li
517.572 496.047 li
517.572 487.26 li
cp
ef
522.285 487.26 mo
524.962 487.26 li
524.962 496.047 li
522.285 496.047 li
522.285 487.26 li
cp
ef
466.649 487.26 mo
475.844 487.26 li
475.844 500.645 li
466.649 500.645 li
466.649 487.26 li
cp
ef
480.849 505.242 mo
483.585 505.242 li
483.585 514.088 li
480.849 514.088 li
480.849 505.242 li
cp
ef
485.563 505.242 mo
488.24 505.242 li
488.24 514.088 li
485.563 514.088 li
485.563 505.242 li
cp
ef
490.219 505.242 mo
492.896 505.242 li
492.896 514.088 li
490.219 514.088 li
490.219 505.242 li
cp
ef
494.875 505.242 mo
497.552 505.242 li
497.552 514.088 li
494.875 514.088 li
494.875 505.242 li
cp
ef
508.26 505.242 mo
510.937 505.242 li
510.937 514.088 li
508.26 514.088 li
508.26 505.242 li
cp
ef
512.916 505.242 mo
515.593 505.242 li
515.593 514.088 li
512.916 514.088 li
512.916 505.242 li
cp
ef
517.572 505.242 mo
520.307 505.242 li
520.307 514.088 li
517.572 514.088 li
517.572 505.242 li
cp
ef
522.285 505.242 mo
524.962 505.242 li
524.962 514.088 li
522.285 514.088 li
522.285 505.242 li
cp
ef
466.649 505.242 mo
475.844 505.242 li
475.844 518.686 li
466.649 518.686 li
466.649 505.242 li
cp
ef
480.849 523.283 mo
483.585 523.283 li
483.585 532.071 li
480.849 532.071 li
480.849 523.283 li
cp
ef
485.563 523.283 mo
488.24 523.283 li
488.24 532.071 li
485.563 532.071 li
485.563 523.283 li
cp
ef
490.219 523.283 mo
492.896 523.283 li
492.896 532.071 li
490.219 532.071 li
490.219 523.283 li
cp
ef
494.875 523.283 mo
497.552 523.283 li
497.552 532.071 li
494.875 532.071 li
494.875 523.283 li
cp
ef
508.26 523.283 mo
510.937 523.283 li
510.937 532.071 li
508.26 532.071 li
508.26 523.283 li
cp
ef
512.916 523.283 mo
515.593 523.283 li
515.593 532.071 li
512.916 532.071 li
512.916 523.283 li
cp
ef
517.572 523.283 mo
520.307 523.283 li
520.307 532.071 li
517.572 532.071 li
517.572 523.283 li
cp
ef
522.285 523.283 mo
524.962 523.283 li
524.962 532.071 li
522.285 532.071 li
522.285 523.283 li
cp
ef
466.649 523.283 mo
475.844 523.283 li
475.844 536.669 li
466.649 536.669 li
466.649 523.283 li
cp
ef
353.631 445.707 mo
356.89 445.707 li
356.89 448.966 li
353.631 448.966 li
353.631 445.707 li
cp
ef
348.685 445.707 mo
352.002 445.707 li
352.002 448.966 li
348.685 448.966 li
348.685 445.707 li
cp
ef
343.796 445.707 mo
347.055 445.707 li
347.055 448.966 li
343.796 448.966 li
343.796 445.707 li
cp
ef
338.85 445.707 mo
342.109 445.707 li
342.109 448.966 li
338.85 448.966 li
338.85 445.707 li
cp
ef
353.631 450.596 mo
356.89 450.596 li
356.89 453.855 li
353.631 453.855 li
353.631 450.596 li
cp
ef
348.685 450.596 mo
352.002 450.596 li
352.002 453.855 li
348.685 453.855 li
348.685 450.596 li
cp
ef
338.85 450.596 mo
342.109 450.596 li
342.109 453.855 li
338.85 453.855 li
338.85 450.596 li
cp
ef
332.448 450.596 mo
337.22 450.596 li
337.22 453.855 li
332.448 453.855 li
332.448 450.596 li
cp
ef
353.631 455.484 mo
356.89 455.484 li
356.89 458.743 li
353.631 458.743 li
353.631 455.484 li
cp
ef
348.685 455.484 mo
352.002 455.484 li
352.002 458.743 li
348.685 458.743 li
348.685 455.484 li
cp
ef
343.796 455.484 mo
347.055 455.484 li
347.055 458.743 li
343.796 458.743 li
343.796 455.484 li
cp
ef
338.85 455.484 mo
342.109 455.484 li
342.109 458.743 li
338.85 458.743 li
338.85 455.484 li
cp
ef
332.448 455.484 mo
337.22 455.484 li
337.22 458.743 li
332.448 458.743 li
332.448 455.484 li
cp
ef
353.631 460.373 mo
356.89 460.373 li
356.89 463.632 li
353.631 463.632 li
353.631 460.373 li
cp
ef
338.85 460.373 mo
342.109 460.373 li
342.109 463.632 li
338.85 463.632 li
338.85 460.373 li
cp
ef
332.448 460.373 mo
337.22 460.373 li
337.22 463.632 li
332.448 463.632 li
332.448 460.373 li
cp
ef
353.631 465.261 mo
356.89 465.261 li
356.89 468.52 li
353.631 468.52 li
353.631 465.261 li
cp
ef
348.685 465.261 mo
352.002 465.261 li
352.002 468.52 li
348.685 468.52 li
348.685 465.261 li
cp
ef
343.796 465.261 mo
347.055 465.261 li
347.055 468.52 li
343.796 468.52 li
343.796 465.261 li
cp
ef
338.85 465.261 mo
342.109 465.261 li
342.109 468.52 li
338.85 468.52 li
338.85 465.261 li
cp
ef
353.631 470.15 mo
356.89 470.15 li
356.89 473.409 li
353.631 473.409 li
353.631 470.15 li
cp
ef
343.796 470.15 mo
347.055 470.15 li
347.055 473.409 li
343.796 473.409 li
343.796 470.15 li
cp
ef
332.448 470.15 mo
337.22 470.15 li
337.22 473.409 li
332.448 473.409 li
332.448 470.15 li
cp
ef
353.631 475.038 mo
356.89 475.038 li
356.89 478.297 li
353.631 478.297 li
353.631 475.038 li
cp
ef
348.685 475.038 mo
352.002 475.038 li
352.002 478.297 li
348.685 478.297 li
348.685 475.038 li
cp
ef
343.796 475.038 mo
347.055 475.038 li
347.055 478.297 li
343.796 478.297 li
343.796 475.038 li
cp
ef
338.85 475.038 mo
342.109 475.038 li
342.109 478.297 li
338.85 478.297 li
338.85 475.038 li
cp
ef
332.448 475.038 mo
337.22 475.038 li
337.22 478.297 li
332.448 478.297 li
332.448 475.038 li
cp
ef
353.631 479.927 mo
356.89 479.927 li
356.89 483.186 li
353.631 483.186 li
353.631 479.927 li
cp
ef
348.685 479.927 mo
352.002 479.927 li
352.002 483.186 li
348.685 483.186 li
348.685 479.927 li
cp
ef
338.85 479.927 mo
342.109 479.927 li
342.109 483.186 li
338.85 483.186 li
338.85 479.927 li
cp
ef
353.631 484.815 mo
356.89 484.815 li
356.89 488.074 li
353.631 488.074 li
353.631 484.815 li
cp
ef
343.796 484.815 mo
347.055 484.815 li
347.055 488.074 li
343.796 488.074 li
343.796 484.815 li
cp
ef
338.85 484.815 mo
342.109 484.815 li
342.109 488.074 li
338.85 488.074 li
338.85 484.815 li
cp
ef
332.448 484.815 mo
337.22 484.815 li
337.22 488.074 li
332.448 488.074 li
332.448 484.815 li
cp
ef
353.631 489.704 mo
356.89 489.704 li
356.89 492.963 li
353.631 492.963 li
353.631 489.704 li
cp
ef
348.685 489.704 mo
352.002 489.704 li
352.002 492.963 li
348.685 492.963 li
348.685 489.704 li
cp
ef
343.796 489.704 mo
347.055 489.704 li
347.055 492.963 li
343.796 492.963 li
343.796 489.704 li
cp
ef
338.85 489.704 mo
342.109 489.704 li
342.109 492.963 li
338.85 492.963 li
338.85 489.704 li
cp
ef
332.448 489.704 mo
337.22 489.704 li
337.22 492.963 li
332.448 492.963 li
332.448 489.704 li
cp
ef
353.631 494.592 mo
356.89 494.592 li
356.89 497.852 li
353.631 497.852 li
353.631 494.592 li
cp
ef
348.685 494.592 mo
352.002 494.592 li
352.002 497.852 li
348.685 497.852 li
348.685 494.592 li
cp
ef
343.796 494.592 mo
347.055 494.592 li
347.055 497.852 li
343.796 497.852 li
343.796 494.592 li
cp
ef
332.448 494.592 mo
337.22 494.592 li
337.22 497.852 li
332.448 497.852 li
332.448 494.592 li
cp
ef
353.631 499.423 mo
356.89 499.423 li
356.89 502.74 li
353.631 502.74 li
353.631 499.423 li
cp
ef
343.796 499.423 mo
347.055 499.423 li
347.055 502.74 li
343.796 502.74 li
343.796 499.423 li
cp
ef
338.85 499.423 mo
342.109 499.423 li
342.109 502.74 li
338.85 502.74 li
338.85 499.423 li
cp
ef
332.448 499.423 mo
337.22 499.423 li
337.22 502.74 li
332.448 502.74 li
332.448 499.423 li
cp
ef
353.631 504.311 mo
356.89 504.311 li
356.89 507.629 li
353.631 507.629 li
353.631 504.311 li
cp
ef
348.685 504.311 mo
352.002 504.311 li
352.002 507.629 li
348.685 507.629 li
348.685 504.311 li
cp
ef
343.796 504.311 mo
347.055 504.311 li
347.055 507.629 li
343.796 507.629 li
343.796 504.311 li
cp
ef
338.85 504.311 mo
342.109 504.311 li
342.109 507.629 li
338.85 507.629 li
338.85 504.311 li
cp
ef
353.631 509.2 mo
356.89 509.2 li
356.89 512.517 li
353.631 512.517 li
353.631 509.2 li
cp
ef
348.685 509.2 mo
352.002 509.2 li
352.002 512.517 li
348.685 512.517 li
348.685 509.2 li
cp
ef
338.85 509.2 mo
342.109 509.2 li
342.109 512.517 li
338.85 512.517 li
338.85 509.2 li
cp
ef
332.448 509.2 mo
337.22 509.2 li
337.22 512.517 li
332.448 512.517 li
332.448 509.2 li
cp
ef
353.631 514.088 mo
356.89 514.088 li
356.89 517.406 li
353.631 517.406 li
353.631 514.088 li
cp
ef
343.796 514.088 mo
347.055 514.088 li
347.055 517.406 li
343.796 517.406 li
343.796 514.088 li
cp
ef
338.85 514.088 mo
342.109 514.088 li
342.109 517.406 li
338.85 517.406 li
338.85 514.088 li
cp
ef
332.448 514.088 mo
337.22 514.088 li
337.22 517.406 li
332.448 517.406 li
332.448 514.088 li
cp
ef
353.631 518.977 mo
356.89 518.977 li
356.89 522.294 li
353.631 522.294 li
353.631 518.977 li
cp
ef
348.685 518.977 mo
352.002 518.977 li
352.002 522.294 li
348.685 522.294 li
348.685 518.977 li
cp
ef
343.796 518.977 mo
347.055 518.977 li
347.055 522.294 li
343.796 522.294 li
343.796 518.977 li
cp
ef
338.85 518.977 mo
342.109 518.977 li
342.109 522.294 li
338.85 522.294 li
338.85 518.977 li
cp
ef
343.796 523.865 mo
347.055 523.865 li
347.055 527.183 li
343.796 527.183 li
343.796 523.865 li
cp
ef
338.85 523.865 mo
342.109 523.865 li
342.109 527.183 li
338.85 527.183 li
338.85 523.865 li
cp
ef
332.448 523.865 mo
337.22 523.865 li
337.22 527.183 li
332.448 527.183 li
332.448 523.865 li
cp
ef
332.448 528.754 mo
337.22 528.754 li
337.22 532.071 li
332.448 532.071 li
332.448 528.754 li
cp
ef
266.511 466.774 mo
269.537 466.774 li
269.537 480.858 li
266.511 480.858 li
266.511 466.774 li
cp
ef
271.632 466.774 mo
274.717 466.774 li
274.717 480.858 li
271.632 480.858 li
271.632 466.774 li
cp
ef
276.812 466.774 mo
279.896 466.774 li
279.896 480.858 li
276.812 480.858 li
276.812 466.774 li
cp
ef
281.991 466.774 mo
285.076 466.774 li
285.076 480.858 li
281.991 480.858 li
281.991 466.774 li
cp
ef
266.511 484.408 mo
269.537 484.408 li
269.537 498.433 li
266.511 498.433 li
266.511 484.408 li
cp
ef
276.812 484.408 mo
279.896 484.408 li
279.896 498.433 li
276.812 498.433 li
276.812 484.408 li
cp
ef
281.991 484.408 mo
285.076 484.408 li
285.076 498.433 li
281.991 498.433 li
281.991 484.408 li
cp
ef
266.511 502.042 mo
269.537 502.042 li
269.537 516.067 li
266.511 516.067 li
266.511 502.042 li
cp
ef
271.632 502.042 mo
274.717 502.042 li
274.717 516.067 li
271.632 516.067 li
271.632 502.042 li
cp
ef
276.812 502.042 mo
279.896 502.042 li
279.896 516.067 li
276.812 516.067 li
276.812 502.042 li
cp
ef
281.991 502.042 mo
285.076 502.042 li
285.076 516.067 li
281.991 516.067 li
281.991 502.042 li
cp
ef
276.812 519.617 mo
279.896 519.617 li
279.896 533.701 li
276.812 533.701 li
276.812 519.617 li
cp
ef
281.991 519.617 mo
285.076 519.617 li
285.076 533.701 li
281.991 533.701 li
281.991 519.617 li
cp
ef
212.388 525.495 mo
214.541 525.495 li
214.541 535.388 li
212.388 535.388 li
212.388 525.495 li
cp
ef
208.314 525.495 mo
210.468 525.495 li
210.468 528.288 li
208.314 528.288 li
208.314 525.495 li
cp
ef
210.468 530.558 mo
210.468 535.388 li
208.314 535.388 li
208.314 530.558 li
210.468 530.558 li
cp
ef
204.182 525.495 mo
206.336 525.495 li
206.336 535.388 li
204.182 535.388 li
204.182 525.495 li
cp
ef
218.324 525.495 mo
220.477 525.495 li
220.477 533.468 li
218.324 533.468 li
218.324 525.495 li
cp
ef
222.689 525.495 mo
224.842 525.495 li
224.842 533.468 li
222.689 533.468 li
222.689 525.495 li
cp
ef
227.054 525.495 mo
229.207 525.495 li
229.207 529.976 li
227.054 529.976 li
227.054 525.495 li
cp
ef
231.477 525.495 mo
233.63 525.495 li
233.63 529.976 li
231.477 529.976 li
231.477 525.495 li
cp
ef
212.388 499.481 mo
214.541 499.481 li
214.541 521.596 li
212.388 521.596 li
212.388 499.481 li
cp
ef
208.314 499.481 mo
210.468 499.481 li
210.468 508.211 li
208.314 508.211 li
208.314 499.481 li
cp
ef
210.468 510.48 mo
210.468 521.596 li
208.314 521.596 li
208.314 510.48 li
210.468 510.48 li
cp
ef
204.182 499.481 mo
206.336 499.481 li
206.336 513.623 li
204.182 513.623 li
204.182 499.481 li
cp
ef
206.336 515.892 mo
206.336 521.596 li
204.182 521.596 li
204.182 515.892 li
206.336 515.892 li
cp
ef
218.324 499.481 mo
220.477 499.481 li
220.477 521.596 li
218.324 521.596 li
218.324 499.481 li
cp
ef
222.689 499.481 mo
224.842 499.481 li
224.842 503.147 li
222.689 503.147 li
222.689 499.481 li
cp
ef
224.842 505.417 mo
224.842 521.596 li
222.689 521.596 li
222.689 505.417 li
224.842 505.417 li
cp
ef
227.054 499.481 mo
229.207 499.481 li
229.207 517.289 li
227.054 517.289 li
227.054 499.481 li
cp
ef
229.207 519.559 mo
229.207 521.596 li
227.054 521.596 li
227.054 519.559 li
229.207 519.559 li
cp
ef
231.477 499.481 mo
233.63 499.481 li
233.63 521.596 li
231.477 521.596 li
231.477 499.481 li
cp
ef
235.841 499.481 mo
237.995 499.481 li
237.995 510.829 li
235.841 510.829 li
235.841 499.481 li
cp
ef
237.995 513.099 mo
237.995 521.596 li
235.841 521.596 li
235.841 513.099 li
237.995 513.099 li
cp
ef
240.264 499.481 mo
242.418 499.481 li
242.418 515.078 li
240.264 515.078 li
240.264 499.481 li
cp
ef
242.418 517.347 mo
242.418 521.596 li
240.264 521.596 li
240.264 517.347 li
242.418 517.347 li
cp
ef
244.629 499.481 mo
246.782 499.481 li
246.782 502.391 li
244.629 502.391 li
244.629 499.481 li
cp
ef
246.782 504.661 mo
246.782 516.591 li
244.629 516.591 li
244.629 504.661 li
246.782 504.661 li
cp
ef
248.994 499.481 mo
251.147 499.481 li
251.147 516.591 li
248.994 516.591 li
248.994 499.481 li
cp
ef
212.388 473.409 mo
214.541 473.409 li
214.541 487.667 li
212.388 487.667 li
212.388 473.409 li
cp
ef
214.541 489.937 mo
214.541 495.582 li
212.388 495.582 li
212.388 489.937 li
214.541 489.937 li
cp
ef
208.314 473.409 mo
210.468 473.409 li
210.468 495.582 li
208.314 495.582 li
208.314 473.409 li
cp
ef
204.182 473.409 mo
206.336 473.409 li
206.336 479.927 li
204.182 479.927 li
204.182 473.409 li
cp
ef
206.336 482.197 mo
206.336 495.582 li
204.182 495.582 li
204.182 482.197 li
206.336 482.197 li
cp
ef
212.388 447.337 mo
214.541 447.337 li
214.541 469.51 li
212.388 469.51 li
212.388 447.337 li
cp
ef
208.314 447.337 mo
210.468 447.337 li
210.468 461.595 li
208.314 461.595 li
208.314 447.337 li
cp
ef
210.468 463.865 mo
210.468 469.51 li
208.314 469.51 li
208.314 463.865 li
210.468 463.865 li
cp
ef
204.182 447.337 mo
206.336 447.337 li
206.336 469.51 li
204.182 469.51 li
204.182 447.337 li
cp
ef
212.388 418.413 mo
214.541 418.413 li
214.541 436.861 li
212.388 436.861 li
212.388 418.413 li
cp
ef
214.541 439.131 mo
214.541 443.438 li
212.388 443.438 li
212.388 439.131 li
214.541 439.131 li
cp
ef
208.314 418.413 mo
210.468 418.413 li
210.468 424.64 li
208.314 424.64 li
208.314 418.413 li
cp
ef
210.468 426.91 mo
210.468 443.438 li
208.314 443.438 li
208.314 426.91 li
210.468 426.91 li
cp
ef
204.182 418.413 mo
206.336 418.413 li
206.336 431.333 li
204.182 431.333 li
204.182 418.413 li
cp
ef
206.336 433.602 mo
206.336 437.327 li
204.182 437.327 li
204.182 433.602 li
206.336 433.602 li
cp
ef
206.336 439.597 mo
206.336 443.438 li
204.182 443.438 li
204.182 439.597 li
206.336 439.597 li
cp
ef
218.324 418.413 mo
220.477 418.413 li
220.477 443.438 li
218.324 443.438 li
218.324 418.413 li
cp
ef
222.689 418.413 mo
224.842 418.413 li
224.842 436.396 li
222.689 436.396 li
222.689 418.413 li
cp
ef
224.842 438.665 mo
224.842 443.438 li
222.689 443.438 li
222.689 438.665 li
224.842 438.665 li
cp
ef
227.054 418.413 mo
229.207 418.413 li
229.207 432.729 li
227.054 432.729 li
227.054 418.413 li
cp
ef
229.207 434.999 mo
229.207 443.438 li
227.054 443.438 li
227.054 434.999 li
229.207 434.999 li
cp
ef
231.477 418.413 mo
233.63 418.413 li
233.63 443.438 li
231.477 443.438 li
231.477 418.413 li
cp
ef
235.841 418.413 mo
237.995 418.413 li
237.995 423.011 li
235.841 423.011 li
235.841 418.413 li
cp
ef
237.995 425.28 mo
237.995 443.438 li
235.841 443.438 li
235.841 425.28 li
237.995 425.28 li
cp
ef
240.264 418.413 mo
242.418 418.413 li
242.418 440.12 li
240.264 440.12 li
240.264 418.413 li
cp
ef
242.418 442.39 mo
242.418 443.438 li
240.264 443.438 li
240.264 442.39 li
242.418 442.39 li
cp
ef
244.629 418.413 mo
246.782 418.413 li
246.782 436.338 li
244.629 436.338 li
244.629 418.413 li
cp
ef
246.782 438.607 mo
246.782 443.438 li
244.629 443.438 li
244.629 438.607 li
246.782 438.607 li
cp
ef
248.994 418.413 mo
251.147 418.413 li
251.147 429.47 li
248.994 429.47 li
248.994 418.413 li
cp
ef
251.147 431.74 mo
251.147 443.438 li
248.994 443.438 li
248.994 431.74 li
251.147 431.74 li
cp
ef
218.324 447.337 mo
220.477 447.337 li
220.477 453.447 li
218.324 453.447 li
218.324 447.337 li
cp
ef
220.477 455.717 mo
220.477 469.51 li
218.324 469.51 li
218.324 455.717 li
220.477 455.717 li
cp
ef
222.689 447.337 mo
224.842 447.337 li
224.842 450.363 li
222.689 450.363 li
222.689 447.337 li
cp
ef
224.842 452.633 mo
224.842 469.51 li
222.689 469.51 li
222.689 452.633 li
224.842 452.633 li
cp
ef
227.054 447.337 mo
229.207 447.337 li
229.207 469.51 li
227.054 469.51 li
227.054 447.337 li
cp
ef
231.477 447.337 mo
233.63 447.337 li
233.63 458.802 li
231.477 458.802 li
231.477 447.337 li
cp
ef
233.63 461.071 mo
233.63 469.51 li
231.477 469.51 li
231.477 461.071 li
233.63 461.071 li
cp
ef
235.841 447.337 mo
237.995 447.337 li
237.995 456.648 li
235.841 456.648 li
235.841 447.337 li
cp
ef
237.995 458.918 mo
237.995 469.51 li
235.841 469.51 li
235.841 458.918 li
237.995 458.918 li
cp
ef
240.264 447.337 mo
242.418 447.337 li
242.418 469.51 li
240.264 469.51 li
240.264 447.337 li
cp
ef
244.629 447.337 mo
246.782 447.337 li
246.782 451.236 li
244.629 451.236 li
244.629 447.337 li
cp
ef
246.782 453.506 mo
246.782 469.51 li
244.629 469.51 li
244.629 453.506 li
246.782 453.506 li
cp
ef
248.994 447.337 mo
251.147 447.337 li
251.147 469.51 li
248.994 469.51 li
248.994 447.337 li
cp
ef
218.324 473.409 mo
220.477 473.409 li
220.477 495.582 li
218.324 495.582 li
218.324 473.409 li
cp
ef
222.689 473.409 mo
224.842 473.409 li
224.842 495.582 li
222.689 495.582 li
222.689 473.409 li
cp
ef
227.054 473.409 mo
229.207 473.409 li
229.207 479.694 li
227.054 479.694 li
227.054 473.409 li
cp
ef
229.207 481.964 mo
229.207 495.582 li
227.054 495.582 li
227.054 481.964 li
229.207 481.964 li
cp
ef
231.477 473.409 mo
233.63 473.409 li
233.63 490.344 li
231.477 490.344 li
231.477 473.409 li
cp
ef
233.63 492.614 mo
233.63 495.582 li
231.477 495.582 li
231.477 492.614 li
233.63 492.614 li
cp
ef
235.841 473.409 mo
237.995 473.409 li
237.995 486.212 li
235.841 486.212 li
235.841 473.409 li
cp
ef
237.995 488.424 mo
237.995 495.582 li
235.841 495.582 li
235.841 488.424 li
237.995 488.424 li
cp
ef
240.264 473.409 mo
242.418 473.409 li
242.418 482.488 li
240.264 482.488 li
240.264 473.409 li
cp
ef
242.418 484.757 mo
242.418 487.26 li
240.264 487.26 li
240.264 484.757 li
242.418 484.757 li
cp
ef
242.418 489.529 mo
242.418 495.582 li
240.264 495.582 li
240.264 489.529 li
242.418 489.529 li
cp
ef
244.629 473.409 mo
246.782 473.409 li
246.782 495.582 li
244.629 495.582 li
244.629 473.409 li
cp
ef
248.994 473.409 mo
251.147 473.409 li
251.147 478.821 li
248.994 478.821 li
248.994 473.409 li
cp
ef
251.147 481.091 mo
251.147 495.582 li
248.994 495.582 li
248.994 481.091 li
251.147 481.091 li
cp
ef
179.391 507.338 mo
188.12 507.338 li
188.12 512.633 li
179.391 512.633 li
179.391 507.338 li
cp
ef
179.391 498.666 mo
188.12 498.666 li
188.12 503.962 li
179.391 503.962 li
179.391 498.666 li
cp
ef
179.391 481.324 mo
188.12 481.324 li
188.12 486.62 li
179.391 486.62 li
179.391 481.324 li
cp
ef
179.391 516.009 mo
188.12 516.009 li
188.12 521.305 li
179.391 521.305 li
179.391 516.009 li
cp
ef
179.391 489.995 mo
188.12 489.995 li
188.12 495.291 li
179.391 495.291 li
179.391 489.995 li
cp
ef
179.391 472.652 mo
188.12 472.652 li
188.12 477.948 li
179.391 477.948 li
179.391 472.652 li
cp
ef
179.391 455.31 mo
188.12 455.31 li
188.12 460.606 li
179.391 460.606 li
179.391 455.31 li
cp
ef
179.391 463.981 mo
188.12 463.981 li
188.12 469.277 li
179.391 469.277 li
179.391 463.981 li
cp
ef
123.813 514.612 mo
114.618 514.612 li
114.618 517.464 li
123.813 517.464 li
123.813 514.612 li
cp
ef
123.813 523.516 mo
114.618 523.516 li
114.618 526.31 li
123.813 526.31 li
123.813 523.516 li
cp
ef
123.813 519.093 mo
114.618 519.093 li
114.618 521.887 li
123.813 521.887 li
123.813 519.093 li
cp
ef
123.813 510.189 mo
114.618 510.189 li
114.618 512.983 li
123.813 512.983 li
123.813 510.189 li
cp
ef
123.813 505.766 mo
114.618 505.766 li
114.618 508.56 li
123.813 508.56 li
123.813 505.766 li
cp
ef
123.813 501.285 mo
114.618 501.285 li
114.618 504.137 li
123.813 504.137 li
123.813 501.285 li
cp
ef
123.813 484.699 mo
114.618 484.699 li
114.618 487.492 li
123.813 487.492 li
123.813 484.699 li
cp
ef
123.813 493.545 mo
114.618 493.545 li
114.618 496.397 li
123.813 496.397 li
123.813 493.545 li
cp
ef
123.813 489.122 mo
114.618 489.122 li
114.618 491.974 li
123.813 491.974 li
123.813 489.122 li
cp
ef
123.813 480.276 mo
114.618 480.276 li
114.618 483.07 li
123.813 483.07 li
123.813 480.276 li
cp
ef
123.813 475.795 mo
114.618 475.795 li
114.618 478.647 li
123.813 478.647 li
123.813 475.795 li
cp
ef
137.023 506.232 mo
127.828 506.232 li
127.828 509.083 li
137.023 509.083 li
137.023 506.232 li
cp
ef
137.023 515.136 mo
127.828 515.136 li
127.828 517.929 li
137.023 517.929 li
137.023 515.136 li
cp
ef
137.023 510.713 mo
127.828 510.713 li
127.828 513.506 li
137.023 513.506 li
137.023 510.713 li
cp
ef
137.023 501.809 mo
127.828 501.809 li
127.828 504.602 li
137.023 504.602 li
137.023 501.809 li
cp
ef
137.023 497.386 mo
127.828 497.386 li
127.828 500.179 li
137.023 500.179 li
137.023 497.386 li
cp
ef
137.023 480.276 mo
127.828 480.276 li
127.828 483.07 li
137.023 483.07 li
137.023 480.276 li
cp
ef
137.023 489.122 mo
127.828 489.122 li
127.828 491.974 li
137.023 491.974 li
137.023 489.122 li
cp
ef
137.023 475.795 mo
127.828 475.795 li
127.828 478.647 li
137.023 478.647 li
137.023 475.795 li
cp
ef
991.467 451.003 mo
1005.84 451.003 li
1005.84 501.518 li
991.467 501.518 li
991.467 451.003 li
cp
ef
1116.24 467.997 mo
1125.67 467.997 li
1125.67 470.383 li
1116.24 470.383 li
1116.24 467.997 li
cp
ef
1116.24 463.166 mo
1119.38 463.166 li
1119.38 465.611 li
1116.24 465.611 li
1116.24 463.166 li
cp
ef
1122.53 463.166 mo
1125.67 463.166 li
1125.67 465.611 li
1122.53 465.611 li
1122.53 463.166 li
cp
ef
1116.24 480.393 mo
1125.67 480.393 li
1125.67 482.779 li
1116.24 482.779 li
1116.24 480.393 li
cp
ef
1116.24 475.562 mo
1119.38 475.562 li
1119.38 478.006 li
1116.24 478.006 li
1116.24 475.562 li
cp
ef
1122.53 475.562 mo
1125.67 475.562 li
1125.67 478.006 li
1122.53 478.006 li
1122.53 475.562 li
cp
ef
1116.24 492.788 mo
1125.67 492.788 li
1125.67 495.174 li
1116.24 495.174 li
1116.24 492.788 li
cp
ef
1116.24 487.958 mo
1119.38 487.958 li
1119.38 490.344 li
1116.24 490.344 li
1116.24 487.958 li
cp
ef
1122.53 487.958 mo
1125.67 487.958 li
1125.67 490.344 li
1122.53 490.344 li
1122.53 487.958 li
cp
ef
1116.24 505.184 mo
1125.67 505.184 li
1125.67 507.57 li
1116.24 507.57 li
1116.24 505.184 li
cp
ef
1116.24 500.354 mo
1119.38 500.354 li
1119.38 502.74 li
1116.24 502.74 li
1116.24 500.354 li
cp
ef
1122.53 500.354 mo
1125.67 500.354 li
1125.67 502.74 li
1122.53 502.74 li
1122.53 500.354 li
cp
ef
1121.54 455.601 mo
1125.67 455.601 li
1125.67 457.987 li
1120.2 457.987 li
1121.54 455.601 li
cp
ef
1124.21 450.77 mo
1125.67 450.77 li
1125.67 453.215 li
1122.88 453.215 li
1124.21 450.77 li
cp
ef
993.795 453.447 mo
1003.51 453.447 li
1003.51 469.684 li
993.795 469.684 li
993.795 453.447 li
cp
0 0 0 rgb
ef
1003.51 472.42 mo
1003.51 487.667 li
993.795 487.667 li
993.795 472.42 li
1003.51 472.42 li
cp
ef
1003.51 490.402 mo
1003.51 499.132 li
993.795 499.132 li
993.795 490.402 li
1003.51 490.402 li
cp
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.1
%%For: (Lub4yk) ()
%%Title: (City_silhouette_3.eps)
%%CreationDate: 11/6/2017 12:54 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&=*s4)[KUuLqtp):!,%7MM#n[=c4T55#+K/?:(R*.h^X2W`g!?S=._\>mW3\sYI4Znk*V<(V4gI\Xi87QDqqJ'\rBDPcV;`3
%aKloo,s@r8.,g"#n_a>R\9QB3WXW[C?m$9p7?*[NS-UC'M6LO/"-ION.VM9o),?XU>d#pNe@ME56*F0*%^WilD_Tu=AH+-%4f>-2
%pnZtrW3tBn5<P?WWU_Jtl,2.XU"-:\H@nt,j=p^%'9'SljI;iNM#d*Z'9BmKFp(dGNCG*T&R./#]\:])jJF;8r`M7^rA!8WMLUj[
%Q)5qiPKj&t?m)KKkA1mA>+'l1T1<??9Hk+,`$<J::0*NIICcF9>/Sa\1hu]p0BQp36Xt/h`EL#5q*5q`jChT4LRqbQ?5g:C<a=0I
%r&F7m-K3;J&fI,h6O6C]7<&*9nsd/C6/*L7'sO+t-i%i9'CeI<3YrSmW=b^Y0S5m09RIhO&jd'/M6*(9b,]kplh&r.;9eH8nR+*`
%9dX>@:cK)DMSA.>/=PcO-7,1<#N?rfGU-ZbUCg9M'M\jkYU:>!"cR]MC9K^0mIsZKO%mqdX]2D3VYr,1(_p8)MuGU$c/F='Oba/R
%iHTCsibI8O%;rbZOZ]6_QCM3RdpBH5[P0L8Tj9GN,94GnpU%n^C!`f<`3%R*O6$Q!oH]%>B4p8M8a3G4!(>-0[I/2+f$&D&Ca>!j
%kZ-VY8&Sg_PD7b3_ni9!*0&"X8P2B5@DgTR-fhg7f30OE,Kb7sP'OrOLjSB6ct]r!S"dSUVa5<H:N*W=6*%$SZVWJ$:3P9R^n504
%5Q^tP'`SJ$J!_:B3(K`@X_Sqh./]AoKj-PS3%`:So%e&hf9+[%."BKt)l5(QmrklhrD`f+IO7C?qpWG>J[_tW+LJ^8n8J=fRs^NH
%]4d8EL\l_\\:</5pO<"k9"N_,f0$OMb,@614e_.$07SdbI%D'oR.4Dl8ehq*r3"`V9!,gG7R1s`K:6HDWSj5[>6"U9^:;M.E2Wk4
%d!YT^>.`CA^lrq+M0RE#F\;gtq1/ltde[6s;A/.aLQi6`U\c.P'`Fs`:5^"/Ch&CldJuK-M:>+tlNgp.V8;AVhV_==Y]bA0%]@!+
%T_<#8<lF!19b,=SQrEY7Nd=P@28u>meu]G4=d],ec`fOt'C7):Sh7A)Xi@$`Dmh-eb[<PLHEMV.[Yi@XY*AE3o-;BTd?U!+l(EC[
%SK*\hFkXV`.#,PEk9$e&=IbQLn:-XZF^jplQKY"!gk;hI-JmgZ<W5j./H40KpY)`X7n#r/6JOK$9"S.%CH/?mBN-H^biH9T6pFT4
%BaXmg=o.SfOdE3,l3^nW.?7W-R_C_-S\?r/Smo%UYF0%EC0B%0@rL@`L/4oDocH<>-4`O$QcV$V*U_uj:;qJ8&/h#LKUQi1LE>'`
%AjcJZ(;lm<ishV.0MP)%Q:X.;%>XZ5?mlq@Q_F=N(nn20hdFh/+8kr\kF\8l-GAO)YBEW"R#U-DmuOXIRqGZqo/*lF00[_%=fG?k
%XGJjSQ8$67eL9WAQ[b]C^Fr1>9)KE[a+D``$`BIN&eX_j?oT_)<\bMTk0X$IT9]W'M;S=ZIle9-I0f0ME?[NCSu7pJVtunX:kU\`
%WZm^b,M;k[?_.^hWVjRp/9*/tTOsgeMc*b]]@u="0$6E)g\tquSq6dRjdEHi1L3uHB8LuuRfj:@S,<Yf)'fbd`kr,IX(1.[,:7Jh
%"lo-7bVC.H7DanL09%S>@3lSE,na'`eH;ML3#<b0#GE!*=Qs1<Rrjcc._-XmEUFRn-,00V/-RX]\gOHBrG+@5M7B5>VJp^f8X"Yq
%ILHB-+&8D,1=Z>6i?FX0rD$di[.QVN.uhL'\G3L@!V2hI^U>VtCR,0S9n8mL,9mC@q=ZH/\,,1Y7h!%qG,t)2o].V(Ve7+rM`5gO
%*!]0[Tnm>o$qfNQ3`uF<Hk#V19>[Q-C/`9prTVFlGTm#4M(R&rT:L.,1ftRA#-IH@<3t(4dXsi"g?sG;b^W.eg/XTDG'-XI:0WFM
%-d_]lr\aPQDk3tpV=*j?pX3HZ-&1<O;!9fNgYYZkZ"bgS(k0r</&q!k]4j/jqWn1X;cR_'<PZsWcBL;bi][4`4=<?Q?.f'>fnob-
%KC/BDhka'X[,%d1euCqq8?;!)Z;^\Q:IN;&7/ZCT[n>b*m72B?:Tj-cmh]=@$5N*.hs:2!%L`;mU\qNnDtE^q+/NfN90N6g[>So4
%9ChU&T@@>Cq0>d7T=Ag`ErA3QTDr-)o!&,65QC9Q:Uj,Rm8i?Kc7lE9a4[u&Q.dk2rC<nLCB!G6:L!fC#&rn_WL8OnXL/tk+,r"T
%ks+/--XSaOAffj%5J(S..7^5K2P5+sJ,ST@rq_Bi=3,^"rUtKY]ofNu-aieanh&m_%aR`Ca1)It\1I?nK1aCY,4Q`o3WH:q0cjW]
%pErm"Ie*99X,.o_l581O+)qAcR?,GjNm)G?Xfo5FF$D]Z-gCY/;*buUB:QB5EN.b4rG4#aD>t1g@ePW1+7pJ(g2P^@rF^6cdf+a<
%1%tI=<_#o_psB[?li/9O=6l)de\c4s@aL<+dZ9F:_>-S@CN/F@G'g-m"DsJ)Irq?Jn;fQOQ2-%-T:\6/3kojFSU]@u#%r8+EdKo>
%GD(>=fg?RFs'pH/9UkQ:>=YA_m!hDqdo"Ya7/G5$Cfp_t+-B'k2C_^"UXFW7RH/iXRJH.?Hc.#^P0fX]Z#&;8p4[Lb%=YL+HGA&9
%IJJSoFe=DI80XeBBXGLlba,iTQ\KNQ//(#(\ZiqVfDZbXo8-*$(76bG]%L>:2/5n4oFt8.At4tg^ACc[<r+N73NWa[Sh'Euc>!=O
%k\7@CiI!cQO%2F-=Pp/?E]Y^m)e1nco:jj'e"Z'4d<8Q;j&'#U4WK<bnAD-@d@g65#"`WJ5jM<leFEl(>I#0e''_Gb^8.9cqfX9D
%2YfR-\eDS1QES`4m7JcE#RBj7^!H=Z@GGa)kN,`4O9<No4k:UV&Tjg%f%LA*Oe@VR>T4[FL??PS;aIfSkuC>mfaUJfCiM&-do-%S
%1ud*HYhF"!VN%<KW7#Hcksl0Jh"47iWr4u#9#FGOO!"(BNiO\5%?uClLS"-_e5Q=kiMk%mB&0JYcYfrW.6<-[0q!?#Dk$Ck97>1q
%L98b2?%S(U<ZO-`)%B3o@D=(BT#tCa:oc(7/)aSi.P%-kEG7*VpI^(<Vdds-#R`snNEJ%V&!S60fsIhNZI$)JV@AJd//%hD=9sQ(
%Cl8NTZ`u]eDluo0N#8Bg9k7'V^\2iZ/f*k;q*4bi_8p]Ro43cuDsn1&M'+Rp_=d&Lk@Rif9W"5ULRq2=ngSoTf1HZG;ao*9VG'"F
%cuJ?]k0s,fUXD\=.O-!qLI8?"2!jg=,OI/ZZOq:O=;9(l4rL?bKU?hWg)kJgm;]OGXUj?n&Z+jgjHOF?),o<kAbGI+Fj$dlWe_hf
%5gK/nF[r;%cT,Iu*478R_-@_o\B`pP0,G,&!q1H<-49QDJ+QgNenu!=,6W)%A2cM#p#T<!4q59)>Vki*>^OkZ?#BhGPT0AOip;K5
%9J6/s4b+nYCR0EfotGk(K]uVmar2hXbuqJ\Glu6C4jUrP`&]Qd8rQrl`%Mb@f%!Op+u*Vf?9dJ,5+osn?Tu+>Hgtb<lo4t=\UA]#
%lmG5,Cb`#>/,7rNRmF@jm\aOT</,in.erID(h[d==fa=76Y<Q%:]<5VKLH:J&hWbESIi]d\%]U\Q?-ob_$T"0-d9]]YW+8eHYkbT
%+'pR9Nt_KA<NZ'_DYg1!gn.pBOg;\"?d@j.X@L#dY0tC4>,q(cZ-c:Tp#k[BGHGbjpW(X07\ND3]WA(Jk/j3dGh[juM]M9R+6'mH
%2R&f*3TX8NVY&B)WA)2V=*fL6Xid.ucc0++6pF35(=V7ZXZpT<n`!KNWL!eS"ntD%FA#V^RhCUp4(Kc+&T3&I:o^s7XHN'0PIFBc
%94T=3@%#3bjGG##1>e$2/?0HUj=cD*/iKF%5],'Y[)TZd?+o!SnLnp:2sV2#QG(E7HuW/mV>fOm^STdsj"WaG:T#doP=Se&13oda
%09bO5E`k/a?2:3BSj%Y_q>'_\:4(uSX#]BdC:W1Ch8s33Di4[%J:^>jY#^j(B&++Y>K_@eISV2kbn"8j%pGOQdbrS<l'lI8<GVN>
%WThtiV85s]b,)jn!L(3k_R7XqCUL1D,5et@'t(D)>$q%#5AlrFB*\@mMG01NF[+^:7V,dYN0qk>&GFnZV>[&'Mq>(K<KD:[>`S<L
%8!NjuQ,(Ob;r!0M\VbX]XEghpFoOhPErXOgFZmXaTO$i/jR)4gH./86,B"DpBdc39/d'<4e=1?kHjGa+M;a+X!rpdiHhu_sp%5he
%g>qrde!L8TPZh?gX#o9c@&-or#[nI@.o*!Te<>H:?YkSNl`R/HBpU0Z^LSWY*3o;p+R=/;\U:G'hsYTn@B7f+_'[<'4jc.,,3rQ@
%-e'&\`naG$`$tbqJ31dqEb3V__u7@@"SmCP>o"6RdVH=-k0Q`V`OB,AN:DC#j+:ZEP-:n1LOq&,A_[X5N#?0:;ZaZ`KYJD+osg^W
%9RE!VpO<,[S*&uY7t3?d_g+:\FanEVEW\F#B:Y]&(UTa0+0tV%F&9O=?8ooqEjsQHDsa^ZckNfl7(;\RgsP8I,sfqTX')!W58`"4
%BfcVrY;;+6m0sYqnT;0#fU6B5^VWk"_ipY6V(Wd*O/MSq>n#'`d3I,(r<(,Nc,Fb3ABe@Cj0@SV#fk`=/-g0M`M6d5O$$!`N='"M
%f8/Vu<h<(*dq.;8$iAc,X$#(R=GkEP?R!<O4EK^&O0R-Z#4M'BZC%fDHjc0ELfhuALd,/(k9`:X\_Z-jhnTe'pHtIRNW&1`kN!SC
%r=`s/3Qc.42WEmILAt/qm@:u2qh=Vr3BV:2V1[`5W[R,0h]p"]S3=Y`^:F0<S.D[[d^89k<MK91]3Dj%k`nf9aZ_rW(Xr'3a,oWQ
%<H290GBU/O\roSKXu#,(dk/n'#W]GjZcZf]YHsX_odZF`Ae,CcZ(-'0XdZ<Q(Sc??92GQS]:J&cdf%lsAEeJ)P8`e3R[];>pSd"U
%>?T7[8qGrQEH@4#ju63tqn&cR^!2c(jjV^e>_s9fiR>_S-lSWe#)BaM>[o@qOP5!iXJWGXqSUhP34pDF;HkO*J^s%!P\D+BStrfi
%[:6SPZWkNT!m;%.ek,O##f^q>`Qe2<r[@O2P)2B*YGF=oP@=<l3,8;6NVRQ;(L=PoI'f7/KM8Ni4=[\b(?3G^r:]^G3IRG-gjZGa
%m5A<LgRj1deE/I3n`SI=a+]fWC0eoJkH"))3a8cdEYm'/;sjJ,HDW^F2WKiAE^noPEg>"n=)*)#q/-g9,X'Ac2I:aiVkpTP@J/!:
%=\jDrUl4R1h+87RV<V1(,X5?-Q$am$\WUf!hmTuBMif<8k%sG@T?8eD'XG.:lL+&eHul>d.=K@2>5ipJUcFPI"ZK'D6#5G-Zh8WD
%c*S;]QIcB@kAg?o\F_'X^mEb9C.<l8Z$#r,8p;f/*WOFLejd=D][MbY2hpurH;HU1q*-f*.V'iL1qXQ90"tSKhaN.IbuT"_,VF-$
%FD#05Xd3\A005;,GW8i"AIl95n+(89R,%*PGPG^mn&D]I=9%u2ok?3eSprKTmWKDc+mg2KoCB1L)0a)3=.ZGJbbrchT6AT9l:E]%
%14PbI-uCUP]`,s&PVM5(Y@\KTM3&%0k749L0E0eEp@P9M]DV2pI<I4B5)C&(#TnpFHlr"LmcN-<\\6#.1sk((p/^kHm+&b;.Us(Z
%4;5&37'"Oo9&W4:&6dbtP-&Ir'8q,l\Ms,%M_TH0C-3CVQ1T4e_k3uJ*.R'CV<*Di;80S7?7asjUsHB8Md3sJqFZ1LCs).U1=:mC
%\&er)1ocW4[ugVJ'>726(NLUADqW]sZ*@<t/2djgqJ&Qk_qk'3r2SK"Jr/Jgk;[m=Z?fcsq5VK!ZX]QlaXnXI^o/?bo^CV%^*\WB
%CEuNOXm=A>qYFk^Frm1@jMI=h0#mk*CP=6q46SdWpE.I@<Yl_6p[,Y!Yje0?R/LFiICkRSI:RKFTBRY/mFR8f>eISt`L(b>^#j9M
%SgSe?GcHd!p=!qM+g^'BqtjUdKpDLS+<B7OILQ)h?FM;Mcnf-iYEH<1b#7,`D&QKJH2gI/T_ke"%j$&Z?rP9NAOfIO];r7`%W:-i
%D)Ck%pf?M=.NO!Ihq>3N`BjBe"J=GpYHO4Tggs'+erI('-@L;Goo$Xu2jqjZ4FD2FRSBL3r^4=NDOu58(uC=F3kN`%U>WXsD\[;t
%a0:&;s'>'>TFXa:=/B6Ek@3t?Z$q.;N]hs?_<m\jRbN)UY@]sfeP<!t^$VZ"S+d:7`j&kSki^QDBAp_UHMf4?<GsJtg<3C6n=MP8
%6`2S=?Tp/3^:iZ>8BfuJ+'9c!:cNp7NYGBNSU3BR^ZWbek$@gqYqi-BQI8jd:[Q(jH[XWgh=PbSb30&CUYp=XF/@bDD"!-[@&SRf
%=tS]I&^M40\jO=)35;cjFf1io[SLIi?5^^$,/II1d3.uIh`;b.`V<`,O(CZ<p/AQtI[$CPRS:Jo[L]YEdH(7,N!C_'RF(!h/R9?'
%8+icl@l^CmUlu]r2O>bW$uaXTL[DeHCc<D"0$OW^7Sg#AnOb/^ri0R^a.[6oo$c"(:/_"3^FQNd$F*DP@kshg2D%Xka"*.N`V^93
%q2uO-dZeVu9EIq_oa@MMhNdm#,<'<lD;:c+W!$Z^$tRM&EqU?3^1&(1<cc`3-9937bU=YA;eC'GAk8>U02nBKdqIl`R50qC5>*J?
%]B[N3o^%BYPG<EW"8^F/Hs<thfb8iuV=AAjqCA`ulU5Vt_F^,bd`:H*/';X2T3Ng4Y82V9J+[:'Y(W)IHhXZ6,uU;BJ(h;*'fdM&
%G5Bf^V_PfEP]eDDh9l/]ZC&Zdq8it(rKR40qhBB5^?H[kIH/_%K#a_bMt;=a+.+h=q3i;+GquHW!_4g]Zffm*+E5iZF/Vm'rP/SN
%.]?h'FPq&-*:VE0;3gYuWqX,hqaOpJH>+b):PPCH(FOjIAYs[KUriK6];hk'0tfKN_69HuR@V>[lh?TqK:\sC^*ZSBa%#d[lAXk:
%R3(kYUm^ta<;.9nekbEOaTIqNlgck)KWFA'gZ*/p[9U<ZmfE)85!P4pY'>7N:($Hf&"<akC-Xu6K!k/]_K#YB$c:6N5#Z[s2iVY>
%oduH4I"!YASo*C?@\\kM?['kTq!ZGY*Vm-5hg!@EF,b>"hS^(6*;Z9"6]\m@"m8gnb:C\NF+!YJ4$NYdi#u[gC?_d:mQ=Ks*L*D2
%D5TE<.cWHp/N1q,mC2KUpHm4*l,K7^8\D"Yp@FQWl]$k.(1)btb>>(kaOO>_#MO3d#3olleE:H/cCP^4n90T46G1(U(Z8i9d&TrY
%Rj5^s<7'3C)lHc`Bpk>F:r:Dr*rd`D00a]&0b)W^n`Aj;D_@=r<#p*e*o,hqR_0fYId/kZ6p!(^QsPQ;`QtN#\j+?)%Tf8P*U<[[
%Mhh,BD7sp04Qh_\`j/G1Pr"c+Vq'#QilfEMb/'kO:n0OGpo7fsra"PDO?<ArQh6]00-9]F9eSfDHP!r/T3S;?DiR8q(UrY)O6TEQ
%HfpcddTsam<VO=YVJS/]b]a.4UL+P%WRf@9qk&d(EM$NSbOS.lr3SB9n'@8_8cMi`N5e$VjrJ&\GrjUEVi0r,?dKa!TutpBGrTs,
%9ho&.Y?,N!I!nIs'F2L9TC^auZZf>Yr:X`FJX:mHi.)dN17tInnY1&$O/a.1;nb3'Aj4*o?N#H?o>/[dV]D"glA3)E)k"Qdr]-XG
%`!`b%X7M$mG:[[Yn7&\eR.RSiKoMuu]Q/%W\\(I=KRFB%ZY?H"LW/oI=n,P,P$9$`I70s1\[N93Iu_\g_39>@]g"W_%;aJDm:fN!
%:J2'5eM@T4_4Z&eh)rC*1DR?MHX#t0"Y^ms-aSR>r4JX^a@+(:?teq>kU"j>kr#$e3aPl0>XuO1Xn:[k/\dSibT.]<<dea\0m)6.
%(SJ0N=$3Xg$ACF2[jd@qP1hP'G#NUOrh[l:^Xs/p_rQU+h-mC.PWB<*F%:l5pM!EEp)@q!GLBIHaX#TdDW@s`?8<UZB$Fr=SK-%"
%9)%'W16K&NG['ObZ`RZZ0Zt!m:Vp)l^Tt;05H"cOge4hqQs7%>,da1,DOX?Y6OE4L*!L^#(SgWm6`<&VQ93-"eQfMG>dM$"b+*^I
%h[ASP#P4.7dsB?P)jh<J-IoQ:S_.QAIAo+f<<j<ZR<IL<,_?fDVABh"'@!kQ`(U*sFn&&!hsdMW19W4n&_9pp:Q3-0_P0"-a[>k4
%C?3PWO"KX5bjkSPI)V^A_G;)u5fN1eqaL?DT/;OG8+O(clZr;#30l-Vp=+NdMEgm+NijW\`DCfGR.u<5IUkXM]m$fI47'>G19oU2
%5l,NoU631$p(ue<Zag#Jc[:JI"#M]q#L(I_mdTIO<B?3lZ\]O"[u4MfM<h!l@c;0Qkoj+EV_$:l/?Irn<dZEpjjBiRBeLB_T;#sD
%kI0X``?q>u'p$nG@G\b6eF@f3Y?1`Uo:!6r(ladPM7Cb=Y;&'eaHsb;loM@G5$R^b&"iR)V_Q[Gf<";0Iam\QXl[`)iUtdML"sS^
%.X,j-?-Fs4[U+8UcYfk&=6!qYX`I^1XkKiEe#^/uSi*r[q6f'h8.:]e:q@Jo]^0i3X37g)LDjtKI;+-YSh6kbM7qRume=&#g"SYo
%#FU&81%7@59DruZY&rq:Cu[?O0He[1S_Q0Sr;MA[%KURE*ZN*oiTjl5f05%*K06i/YOgUU^%gI-[cS?7U45\Ze(rit*nQOuCEr`5
%H*>XlT%5hel1<0tEG@#Q7pA1%D0mQd=AOt=#b=T.?`IbLHLcJ/s&^3lfhQ8PA$C>4]YNi#]%9&OPp_Q7)<IU:?_;K;,-AOGkUO2+
%7YL(Raj5).3ZV"&R==]Y=2,`tL\,-,R-&`L?c]*O)MN"-EHSLi'08f72a5]<PP"-1lLt(Y<7oKU+<<0hcd/FGmqRh]U-ElY9::`4
%53uK2YF"HG(X8QnlbrhN.,4XdduJo:^4.8t2d_VM&*dmu`2K(GaqF`NkT_0BWS@:B(kV2p8)mk4Wk+eU4T"mVk:ZbF2WbA&m.@=t
%Fl.YE_t'ja9Lh2UaX(&,D_u75n(-a+7Ic<VS<%^rYJXddX^&qcq\Brc7#u`jb&kpQA'Rhj3@>k\T9#k#g'Xs<5qfet4P]U!Y'rMF
%mt8H&#B%MuiQM,t@_mD])U,sVEqS93_"?BWG`F\0o#ma(6FOTEdC582INok#>aB:UeuQ#os3V1.A"V$$rpF5ipl;.)WSCNl+,;?6
%<ak*oH7*&bTB0a+T;uhDaqoo>?b[hcYDFI(/&"DfY]V>;df)c54Ht\Y\+./XeFmd0*cFZo*JpDg)fR!R_mN!EpEl>)a4?;)jcC'`
%AB\(dWiq-G2>`K(/"C_QPuq*YY6TI!q-$P6Ml-_u*?Hi]]l\\a)]<YhNt^Ei=:qD[f[r=Z8&Vb,HHH&Z>F+p\l*^?T##KI>i(2YK
%fA1O&]N;TW?0aY@Y<35&\^WqFbA+]@P=ElcoVVSB<87?IdBXbkSYO4M3'lOYoTEq/;[_`W`q0X96[gg'?QI=`j(`YK^-,<5MRA>j
%"(*b2DYN%*n+k>Zi)*h+Q\4&9kjPDmNQDFiG,Zh'e!QJ/p&riG]ou<2mJO#")5tld8t.q]9UV`)A^5N4D`Z`@+eQ8*YWIrMK<#[W
%FaC+F=]uGVpE,-u8;o&Y(#sL%?s[e$j'jjRmdgAKA\U3[YNp)nG#-*UGe>/p$NX"+a=-_ne98I^6\B9;<rDq$PkX`Mp+2h`2]jaQ
%h;MjA&!V+uPXi-fEp7q4D_PfCXng6/WRnO](#IX`L);V(Ft.suaJT^K_iaj@ID)k*[!nJRh/nBU[EYP.39i"99(.4O9RCK6d!M#r
%*BM7*7(M3*-\OMX5$jNbKF-uK\*E#-^ci>(<c]4q:u=!s4\&O5^-]r90]U,=+k7-p]f<a/cL/],q.=H7$2Km+.f.Lt=I>??dr]R]
%-*BsP[7b&S5+8[6kMFXDot[*)MMA6sM<@gHQAL&kX2aPObAAH;QT`DJT;lu''l5M1I2R=T*?T4GWUHDF2!NHrV58QSlfCSqdeKY'
%(gd*>LdD(2;`og#rUa)OG"7;JdX>lo]:[7e+%8TdT?m/?dFFZgE:Fd[IN*KBfrd<,h8qN``n^:Appju&I]_bOCXVKL@Co@(G"OVm
%WF<pfSu-#OE;Ik"Z/je6`TM:(A-A%:9/^+Xp9petmk;>Vl\an<[9C,t%$t!J1@=b]p&=pMI90[C;+B1;-;DclbN$J:bIB!6E%IJ3
%:[?iEl_o(`n:CniNUA/qUqX*_-a*Hn9"J5E%+R=-6GA19k#2lSD329:_UlM^`Ar<J'LU[;=FWC!Bm8h-S+sBTIEBgba,)eNc5e?T
%ats!F-_=K>i%Q2,53kQZeN@3,jmDBhC29TM^%QE88LN(!A\=k*4<!go<BfZZZYs-BWV+FBO-Q]?c]8UtpTBJ\Gp^BRVoq*jXJe:!
%Q0rr?neH?ns05\I-[Vunl[A@oN'6J;9`'%ok5=IR3nTr:T"b_@n;Xl&q24-hAPRZf<kNd(kr2u%m:GWWi<;sabG&&k4Qb6;&rfTW
%0!YsmT_5nI871P7X2`b2Bl?MS6*H*RYO)l9<)H\?jF't`r7oE-Zl\A'];\'Xlb@ZKFhWbG\]cs1eb.^+4*tVH!Q"9eo6b!.3+Ms2
%Eu0mQ4ZEV@Jo7MAU*\\oA,5\<5,O*,,5iq7`'MqTFBc_Ka.uje1#JcO_()S5D!"CZ+)C-/T(euK^@Do&2oTk+aBK2?"KgU#Y?QeF
%#?Sq-rCpE79s$,BNhXEca,Qje/.bJSk7\3K=Q_V$k?iZpCFPQsoB/pJ8TFM#f>P@E4j6uN%n*@cV>`gP-NCH7Cu!,kBp%/$XQ]sr
%e(;je87q\tmf$fMdL1al8%l5$%mtY`k,()$'jU:=?N+kY#4p,AoFd>/,e^u`YM>VS,:bKc+m<`?[2?.?HgPq1*jtk3R^F]mZ"D@s
%Kh8ORlJ((7.@8k^hV:T'0Td#dHc)0'jC#tI@qu\6N6Q'E],%sCLR]f]Q89i/9RG=2N+ahfbYG)9?J27Vd^J>f.?VSf[tu9QY4^"1
%HMKsuam@K9ahLm?aft*u<':&\5dO8;A.dhIc^&B1lZ>j1rpY;0)UCTU[,!ZRCsqO&Ved:!Ia3DH>h(PR<noihEbj/RalNidCi"dl
%qi/m6TIe]mp$238H02J^Z[G?H)0E7K-4nYqj'g29%B'*BIqiQEE7>@k(UNc^b8sod7EaiBG26<-g<I))C8Y.8[C\ZLU@6lU`SP_-
%mm?6(ga2@^#Ldj6-X&?ql:tR&P-I7tb[*Za(:P>\6plOd[k4)W=mIYN.s(**TKQd*Vf"LmlW;m5S?s>&$LZSBg66t7s!^ldVcGtB
%^HB&X)"e-kF>_2/QCL$lOmZmIH/H*"IGuTiHKIP[g#;;b*.>V=Ao?YidRXiZ<HB$'[h4k<V0Ri\VqY(\`\^oZrhHV*9>ejoja)R#
%em8#M,F.sF+E,F@9e,;"Q]^'JbO%9";t\3bbC;t93^%Jkq4JYi%HL-.DYkB"bIVp*21'tjX`"/51XfgW(pk[-NIZ?tS2R\Pjcg=k
%3^kqG<_DbJMDhg"mk]uG=R!;#=7&["<OtQLhCKS)E5gf17k$&n]@?ksl'OAN3rnl/<U7fPiEQV!fk`&qQu_T2B!]V;%C_'b>LDV(
%X\jGr;E_@g)"4:)Z&M4*ceqrc.Ke:&Kk?gg(ggKXD*Qoq!<8SK9O51_X\AF(R,q:Z5&!RROo$I*[..PTW^l?*g,%;1dagIC+#Lu2
%\GN5]*<iJ1)<9VM;1DF2F^55:fkrc%&+*SkOS":eE.>(E2^#Fa.@[B<gb/FWd&f/t,JEXB2m"QURI.)1io/@W&Zm(RQtq-+Qg9K_
%_e,lO)q<ZgQ>BP?ae`WUOe4fZCckoXG&rj3qZ49^$,6Y#BJsfhH[],*B\MBN!k=!6#:(jjj0#M%3*BWLUT&Lr\Z<kqJL10dp.`_:
%^Z%02Qn=&1QeuUV*WQ!,?pU=A5mGlUn-;_tZWV_3XgiM>8YbN3Yj*oiAnKdq\#VD#F_Nc*rLqY*+16,&-jDeX[Bb$o/rbO,IU4J[
%SR4MV4MQZdHV`r5B8?JIZ]q2HI,f8)iP^[3=`7L.r:T;p8tfg7e?"eW,gB&;A`Y7U[J,'Xg$9/-1=G<mh(IB<9A^[jX/3&^NEOh7
%^?b&Y1r!f`W6#4u[GIQ;it^0>=T2gc+?f&+Ai(HU[ediXX,V&]WBTU4jgID77(Y%Uom4=IEUr*;oB(JRh2UJRc4?(BL!nsg-W@+=
%cC[M5cFi#M?-p1t4h++$Su5'"<oN]Hn&5%>\62qf5O&4HpYT;\mlfk,XtJ%G]dlTo,&AHHP!AtNs$t.T_l:K6@7^=#0Ta%UVrKFi
%[eO;$;Z&D=f[$@.qicu)R^,41Fo1ak'0e$$S%n+C.u-Xcf.HUG9I-mN-\":O1qnF?Cs$*8k-+$fAY^u.=IGAh\'p1lO1P,.[j-C9
%(,Gd1Jb5E+AQ?1-]@pWi4H##ff$5O(T5>%@2rq/SWj,geC4.LZ=:^gl(:(?aQi-MGrjn\Nhu-`@5Es)na]KnF/.]s3-V'@7\J_Z4
%DG\F*?ZuE,*fYV)?bR#q't/2DF<GV0[i3A)XC%d,^P7Z#HtG5ecM,IS^:^]G,T!:/k)RKE=7`M]k>QgEBjLgiHJ[Bbk7/`7iS;<!
%B(5aWFS5Cc9DsQ1atSiZ%HDd5iA$ksY%KY]SR'!Q9a"c$T6[-l-+p3Q0B)3Zirk$2(C&mcbg4CPm=-oX8Jh/a37R'M=+Pk0XN#=N
%ne.M.M,+VbFM`%(dpt(hH\oi8=Wk)DH$Hto?WHid1AQq*W0u%*T^h^?cg?2LjHk2eX8A;tj$!"E=^=[K4gZukUNG.0g#$=N3!Ij/
%c`_Ggf,,=4$]!o"EEnXLWXh#dq9tOhr*hPOc^tosN6&lGo(V#\T1?q.s6aP3T:VnIdAHRoAlVURNd%(="1$W&cTftg)06G7`c9fV
%NH^s\2n"*/[gn/ukP9.;D4Ee=R'2G6q;KZ$-SM+9DrZ:&f+t_<R<EDO9YM33^;q7)md`n^TCgRNZ+&uDjMUZhFD.m2QW9BM?du2B
%7rk$Hdp;j)SR0^Yc-H6rGMX->pWe[?g,iA!q!`TNG>Zb5#?e6Smq<t&SXWq>hs/CTf6;E<j^$\9Y*to0Ecjg7l.ruB,(H(8XRm.A
%^Q#ku[QcYA2%oJTFkOmM9A[4UQVHrH>40VH&GDI(MfE_Q0C>:MjB]"&);Othm'WIu^3m3K>s7$OGl<tM)=Q;Hl`GC03WJ%IPh1??
%NCI^()sgg7H:,Spbo<&m/U/N#)oEV!g-5'GC\+adGj'#&9r(N/hIIdUi8)'9^3[7<'mZ4[4%jd;n*]Vk\TdLcVr:?m6[ircF#E.*
%50^ifo1O]>DrK\+jZQ`45C3peqt&\)ol8]4;HeJ>T'c?%hMW]?d!Jnj\%K\te#<!fG^nbe*Il:YmsAhqn)N/_S=AJc^;#MO?SC0[
%hY6?gR^[Zk<V0>\q[;8,Fn`i/'[LR`k>LfbgY$uLo(L?2qqeO!h3W>m(-\,W*gXfeoDQntgeqa5Bl9bmIl$96mKMe)LPtVB_:-i`
%>U4FF&MeF4O3OH1`7a_(gt$*3H#@i:Zos`o4FGCbRodS>_Wu2`mdT>B4a6IEE'AJP4cR`m[4f.52l#-n\VHg`oUKgFc+Ok*Dfb$#
%OKNLBL?D`!,!]eTs"`3@8/t6idIN8O5?AgUbV)EZRe+6oq/1YpBH56O+qKP+fM]XPTBMMoo@r_<p%d+fa5_R8m-&irTGT6(TA4k_
%b[3J>7d$s>G1Pguk'bGE0?O4KI-I@^R'/B)Sb\?9Z2D1T^3c,^c4?8iNJ4q7^&#V:>.1]oJ),#q"LjCU(1Q-ic9h*tm;$/)\F3_E
%k!I6!#EeZT_Q!Pf[W&W4gf_,pD!ir=DqnYMPW%]s(@%g<c%XL<iHV%\g(,`\\&Rucbf-FUZ]diX=KZ6s.s2Yf;;/dpIC?MpQjM?%
%Mu1cBk2PXqNc20>&#9s_k!o*'YO0Z>`Tft:=T!Dj^KBjS/"Iu)[1lnMriBEY"dV4JV.b6oCMEAaoX'itV,r>od_9^J]QAK"fj20q
%>2*2+]\G.nQ%H.%;PP"S>3b8<!__QrhqdkOn8<Z"]s_pq*5-b,/8ng34YLH.HdUrmo3uk<id#`dq6%-R?[a"S:RCCeK7CFQEqm(*
%qFp:ud;XATa1Dt_-gt,qUp7J9o8sllj9o2d/#Qj8>e08<QWB]M99ke-;?(1'SI$2bUWi7uD`LaspboGW$X`hmACn<b3XkfW^N)^!
%7GtN;]0FHpq;-JT@pa$G>0?WSg54JI@d_FS)H_<S?Su/1?`SMYdEg?qa?jb:EiE,DIH]3f=,$*f?N"]R4KXWiDbkhSYOUT_-[K_1
%Xb40i5PH5#qp3i6D?&GVrP2d/)_UtO:(m[.B^R?&ACaf<jtgf3_Vs2%p3Q1A/O(enf$5e`q6c!EMo])`4d'1<PX"WfkIT9;lg'J@
%rq6'KH?q`&p3!ingogD&De%+Up%RX]e+M&&<HETDGROfSRA\MaYuGTG;U)q?#oqj*g]_Rk[MK"Aj-tZdql&9+Qog1ADld;OPrB?+
%q:J/[I.4^e^,_'e4Ph'kDM[]tg\A@)/I,?XdbDUZc2;3n030P*O%'rW_:qHI/m,iH`.D8<**PI0On6gaTekRqBW('0L(6kme'LfB
%*Y+H&fj:V(E,ch'r+`(GiLOP0Gdj#XLQAdF&)mE9^j`ds/&oJ6-hGLn?`r%@(fB1;,TD*FM-RtT8!0/!67VPGdRZdhm`pGO-FtqS
%qP-.,nYPHsK7>M"^Uc+VefGT]d:$Qo)"W6[Nag,BpfqW"RpD!/Cn1B3Q1[U#p9h=I2ca!9HU]4OIUEjF)b&f`Wq^1jgFI.$/,?C`
%?[[qQnYE?<-\]V8?]X[9\%CVFG]hA;N=W)\@<6aDQe4J]kU2CsR:tT"GO$g-3_k)KkKd)cA@Qf1Oj#B4p61j=k'$=/[NP#9`:hpI
%C?si!F0dR`'uSY[roQSMg#$UOn&U3J>78L=hGuJF?eEN_QA8\r\X/M^lJ9kYeu0:qgCCC1a0nq"O4O"nZZ<Q]8j*!Z^ZpmK46q5(
%fq$sLWc.(%e?&#Lh(B]9oT*IDh6m4A_<t($r3CZm]R%*bp38(!^i$p;?eS^kc[P<LSdf$"cMJt*H_nS_DK!lT,uYcGq\uMV4L1J,
%Xt4lte]qelm<sEY9Lh]NX`V;Rcq*%Omcs%tj\dn@]`%Yg8R@E=RH&a8OEo+;cY**,MO^/u%@jOiZK^l#DRMMC*G+QurS-,ErOA;S
%T:ZR68*>FgmcCU>cLp'jMtr@/h,Z_'=S:coT"XB9CUNb1=MFYL(:H,iahh3Jo;5>J*t@tXS%bHlfQuP"s3Ps:AbKIH/#W8OIc''+
%QorY8j=UY/#PZL@mQkKnh)JZO52JFrqg9K@2c#_*iC@p<E9%snc]30aoDYNEFn=^nH!B#d?9*KR*q)5*hB%TAhP:uN>GICI`8KTb
%k:J6On=C>\e#Ok@gS^*2?c[S@]%bA<:Tn\?iR<k3QM8TFD`#eg7fMZ=/iJ3&f%GMtSHhmt>N`QK@/0Y6DS1/lQ2b+'#WGEJ(Pd@`
%j,:Colfcdo;BK6m$GF!noAn&gOL_Ii%H#^Y`^TB30Cf^i\kR#-?$4G1Nf"d`V46KD``9SEHLC*+Hfq"!f88h,mH]\TQ1O=]W*[2@
%Xk_4ZA=ef?D]Xh9bF??@f&po:FXM9Xg>"j)XY8d#mX1Fs>U+K[DU`Um*YXHQGD#a0rn]VZq7&Z`YAE#R5#3[>rqD-A6gj'5r:'7k
%:-<hqXnq'io47=[H>U"_fZF"cSjN,/lI0aKnbQ45/akn#Ft2A3lsf;Nq75;<IIY#Sj@kc(Xg?:CbKXVgjJ@(VNk\%V`r,/5pTa_O
%MQbmL"`A5KDhfj:pfljol$rFr&'+.lDWp]jok@AS/KC(K97*Ym]@(3SU0&<U?<if*XtD?L\(05knmJkQ<Cr^?DM:c\3".rMHH1f;
%Wj1.MW*WMVK50TCa]FBA"_4ruS]=F+S_^lW7h36_p%,fmEW*58MDQO9aC4,A\FeAI*;7%iaCTRrH*Pc-D72Y6K3%Wt\(/(&fmIOW
%cVC8jr@fiRLEFKJJ*3Ta38F='0"%aP\%-VYF84-9[C>aoM>"hH<9qcaGBQ'Im:*!b)D3"PQWK?nh>D<W\Qd_mme#)iJPkn"+EH(L
%Q?Th8iSaNZs.];^hXC9R7mc>gn\,t>\iVIf%D7fgD3,+;g^`1Aj824$@Qd<G[cf<9-`%9Bi"?>bop4ZD>F=NX`KV5#FSk]=nh&b$
%>#ZAFg'@_Is*0XY,5.>%2-O:,c`Q+((%P&t"N@!p-gD#Y@\.hmr4emP-IJ%JDuX"'47LCpdndR;96bb:ir6(*S&:b@0fL&dM8kaS
%%_deN2gR8qp7E`fZglhZL@QG"T`8DV)hBi1-fFC$Ig%uLq:GQe1QPQWWVpKX_1-d@B'Zpfq")`R3ti!JcK/ELBd3,ob$"*BlX)jO
%UGSu-V7ulsr_k]a9cN!i-%@uh5CEh(%o4V;3V>MJ"?k;m7+83or\aLaWM;r,'/PS417X/IK`@YCCZD+e7b`_os4M$0,%2MO)]3)S
%B`5R72E_jdE>3t#/<P`,*q;TW(_28D+(Cp_<$#]q&ICnc&`s>]M+[%H,uTOg&g>SI3$&MG_3cAV5*6,h&s4SmD$6%l+<Cn:-)g&Z
%#]pi`,9@-q,,&,+-=DBMJQOlC2*qlnQ3DibJs\eO@0D2@0KfLF,RFSeJP\IB4'2t\3X_)RU7jh7&uK;,JXA^DL]e@\"?fj."?Hp"
%!m,[0)@b(-?suGePS?@$D268b^ud<bO$s,DBJMom/I]VYYs:8dUIWF7^u[87(:S*2@8LYG6g7-4gq$@/KH(2$%Kkrd9`0AcNli+?
%_P'Lc$klKsa$;n#+:sM["7^>p*3KHrBIk3\`C4PJa$;n#+:o:*<'Uk=#ujnA*c!GD8/MYR(b>kr%RXqT&VpSMjF@u"dSV5#1<AEo
%&26*QKYsL&+I7tMbH!<2:'LgJ=GS"?K-?T!:c`3Ek>76[Zbesg*/OmZ;::Lb#acTd4^)*k:a/HB["Y3XkU+-%9npKGb@)e>(#;#*
%*mQ0N@3@.<Z$;)RL^XD[%R]3.kjjJq2RY:R2W=`^A@lV;%(I8]dSY"hJh_R-.h&5KThljL,^0V$!L(Dt3%hdie0)f50GG;Y,V2DU
%&sC._b@)M6$\ngRK\k#^_\"FJDP8<r_&*HF*/;>-@7ubn<Yu06`>p4R^lTN?>RhFqJe_%8_-_=sRBDAK9pcH8Mp5[$jtILY]G2#k
%%@:esiW]_3@6is/'UQPV8D&sX!l$O7MToQpjtI?JSdNG^ULfn*-ojm8"#>Y*\ETq#W]e>8ZZD#I@@GA)+Df^[']pq^3&uo>5epp'
%3qh!YQ0OIfm'KjB`JN1f%*1]LA0<I>3@Rd9bSBt5/"@7SU(bq;QB))=``eem/X1cn:'>6*"HH=tW-FCFUkS?iD9?rEaC?>(SU)[5
%AF("T2N,XARcm.)dPOZ1HCPcENF0#j$j96.d^#0K!`dN6JQ&n2%&A_T"=,S"KUSF-OtJ>K+Rp9SQjfd%/Y<0GS94m_Ae>nO':fD"
%=p>9j3R\,fbb?j(0H!F)RdPuRhC8#T-aSCb+jG'.+D4h$']a'C\1roa5epnQ(l>,=#Y-):7@O"U-oi\'"@OU=P*Q\H:!O`0#IC?;
%"AB"4Z@WaQ*g0L4W&KQ1DZV7VP?AIL/4eiq^?+WT^]nL.$Nce$;')cBe=VEYd6edE#N\3]ZQPBcg6Sd0!@stf/-p&-7!Y_I\Mt<T
%@Hijn#\4E4BrGg@>FCeN(e:Bh*!T@P6Xcp.IIC:b'.G8`!L:Pf(i!7<>KE0;[`G0t&F^MB,b^t*X`"5MAC25"GRO_<=O2$X/PruU
%9F_.SLS6D$ZWt/$[RZ4r5X=BaOMtDSp[/3c<[o5E+dKrA(b/\P@&BbJVb'cS"p-!(@5!?rf(U3i?'5Q9?qBB5'S\*'MiZ7d8J)gG
%L`D/T:rE.dbFhp79F_.SLOh-[YZr0-/ljDF!s+P%:_r=t`7#RAk(%5F9F_.SLOh-[Y?ZI7[SD_$5X=BaP_IhVV#dD>`]GUrLB3[X
%lLO8`?n`9d)RO\LDQ'd7V>362!I0hU!B$qr[L2;"^unQ#^nW^mW+AhI2(^tr2@fLE$3>C9,_7hT)&<VF=2<ur#f*2l$!l;k3A$_m
%"@EE1*n>WR,RH_qbLLQ_X4(Sp"?$Y=BqJG6/m$d2Ke6#26"%#Ab!XFs`I=Mqdig^_a;fr_;#>:<@8Q2d9F_.SLQQ)$)Ao_gEB9>:
%h,@Pg6S8`ZEErrnZX_qg1mJ5%RDXh;eAS:3UI.*=5##WT@'^uu6Z(&lR">"\<#3to%O9Cu,BGYR=:iql('HN'U--rJgajAR5YYfU
%:$+,R%5fqCRg*1qP?AIL/;Wl.G"0+_]u.Yql@9kQ\I:l:Tn_]Ef"_l41(+/Q"j+i_CM>De%1?f0,R4C=_h^/!e6Hi0GXG2;6"%$l
%O:T<>_?^9]PK-#[\/9s0[b5/@JjY.r4Gj_QPbnI-2@p#?"=SLOLqoc&JON-K=DH<:=;c`JTX"cq=d2<^;47]Rg`R'1:4RplK*XSs
%&Qk9n!Mq`W#6kNuJ4^a`Al/uPJKtCI_.bd*RV<?"R\mD6dQ*C7!2VZW"\)+:@+[<,"d.)]QiNB3PS@*F'F(.'EB+H<%#32,RSttL
%V\B?<9lW0%\I=5@=JF9"#^/gm:m0:L(.:1gOp%FWVmX<<Bi'.8c/p]*F!/V8a\F:YWRC?6U=3O2OO-"L,QOZ&SH.0o1oMFbAoefP
%3KWlZ.,jE.&(X@rK8%c_3KVTJO<ah&4IlK).h-58VqE&EA.BmU:t!fb@'MNo7S_E8&Et0j$".ICBq`r&TW[Bj2MWHD",T.)pp:Z5
%jYR7/:=E>Wko>Kc@&Zp4FC;R7W-t4KEu:'#ON9f2:Fe_r:4ls@1n=f4c@Ia%82q`a(o6Y62@_#nX(S//jAQ(]ORP8lU]=sj8AT38
%-7G,RF9!(E4pR5bT]cVi:n@b'SYcb0K#m+?9E@e8>0LFD-7G,QF9!(E4pR5bFMSKpFE%dUoTtH\Jj<s&P_X:O<jEZ+'1?JIYrN67
%%#3b<m)'</9q;SWAP]Qk%*8n^i_\o=13Q<'8u&#c68BBuSIc&oThgNt%@tG1XCkBJ#anEnNu,rdqLG7jVa,?e;_eFe.YFG%0(N^f
%Ru&pUoT0iT_gq'+:`)fP=p57R)FXU=YrN67$jP]fi);CSlXjVi*%`du!S7XO0U2==MVYY-+OorrS&:?3?m#ru4l)<=L<[Z`03VTj
%"0N;(@4:MW't[I%61g$MS&:?3?m)T[HV-_nij:Cc6n9C4!S)ao.$XD3XPKD7+M'puc!a.T0HA&R;,<6^2Ig>k6Np8>A2*(*+V]Zo
%SlW:(1)!&OBX'Q+aUBN86U<F,->et.CgJN%o0R-21nR8m!/o8NYb(%GL<u#r5*'.Q(*uP6C**%8@G@3cWgsXDU*K_sdNl&_kO+2R
%P\E=B@K7/i8RNjjbo)Y$SIWi;aQGgO!7p\e*EdMEcC-1;$R2&BM*+i/>T=A2B8XobaQ>aP`u6#q,W_fs4gULqL/\@E@BAC8muu+k
%=\K;m.YFEKWSb8^,V7Fo1(,:q",T-@n(bPgfJLS/0][6sMNcbbMd%Ao3Ydk]$(D$R4BCms0j1nC`iLUALEVud8PdC<SVq,)G"i/%
%5f2YK,*,_c2r=b(9lW0%\K"/YZ"E1YSVUuYA/7Qk#GO>[fXX!jW6HbDLEVudM)a)PLkdaaY<r,`a=N-`%RbS?X`O)2@,Vfd_iW&m
%6l]ubQ4VX$3"r42/;S*PXE/`7FKEIgf#/kNPOr6u"9q7X$^)4.;Q!H4=La$$MOn[k&j$AH(*k>:V+uqWV+m`Oc6OqHHksX78>T(<
%3UL%f2EfBp@>Q!-4q!MfTMh\qT[]i)G&J!/e8u0fH*#LE-&6b=`;-N,3"3kJ<[Z^*=6cHrgT4V2:<Xs;Q.Rf6Eu9^CV9Y6D=LU\g
%hjT57JBL2#N0QFs`*qI7A5XK%XFrpUA0=!@XOO3O`c@OP1:r`(&5kLsV4gebPjObg&a))$i@rMf+;DgfSPm:5Rf^,08iR7#*!YD)
%WO$+TAh=U-[jYZ>c"/"3`_)e"E>Z(dSVfqG/[8eNjtI@e8tG7hG+4eRZ^[2`R-$.8$=fo-WAlG4,0k+)_I5^l0G'"3SYZDL2C6Ra
%;Slh1l9nG_.s4J8@E]@(IZ"gK"#>Yj-jGqt22^((=b9DaUDoOr%(H_!_H<d9apq(1M"@+#E#=Zs9J5Xe7YKG$gZI@HNL76Sm%la.
%ERBK#^nV`t7;3Z:WrkXmU8h'qG+g/M-q7TAOp4tQZliMOWmea`XZA:sOpEU2dsu`bUk)0>22Y$[F9EZ(#V8TrJ;ToK_mQO+$!cSl
%"1'B[i'<G,eEjO\Y$tBRY.d_S(.:1gOp%FmVmUJ$Wrd;>KqbmrdQ%jPJ@_;7_M,*-L'o[d/r(U:_,)%"G=i&U\69_%^p(<gL0OpM
%Brp.T6c<!-$H2&1MU$fEk<P11<:@10Y'3kg/AtA$%RVuVU-.#qPS.-lWoS/FX:!.%K[,,o!N=r@"E==?!b"*D@WNBL3KWlZW8ZuY
%O/lZR4Kcb%@6'Fr3KPKd<BQfPY(p""/BUe*%RVuV&p^G9BdI"!X$BpVU$+%`F:Q4lY`bokaSK!B_E(l>jtJ'%+H_F_SlW^.Z3nMb
%)N)gl8EW63!3:BkTYpH.$A:hdMToR#k!1+$ofT@0X(E*&lSK<H"d.)]k&T@@(c^N^U,U9\@I[(r?pVA=QN9Yb\E%h!c%G#H%`![,
%bq9*]'QCl?[<U8[>Ma(o!%^ZAlnT]\5aL0MZ?K-XdfER4XOh#KOod2C[<XjGTd?2.=EG=s`O\eQj`.9%]<NU8W_D(c7Mb8M0bhZ^
%[dL"&Wcs?F@:Ye/'*E5ZB'X'nkiOADO:4V0kW0gt`^R=RL(;@M(6sHlqHO8Ya,<T,M3X"RL2sTEb(Ru(FEt#&6YTY1lY>G#7OqCi
%LZ.N'#DBt(]U%81g[Ior>FDcWN%E7s@N^\hCL+%]fktBDjY0r-l[VeKQe&a:2QYaa2M[EK\P<ROEFGuM@3_8E9Xu-tX)]3l$KJEq
%GH41k?CA)ZN%E+o@NZ/=C5GTih9fcnQ"`Jf_ZdSo"@[<%Xh-S<>H^`R*(C_)3\_Vn?pUoa0uN:I$HZ[d26I$J@9cRnDTTs(/5nH^
%Oi=h*9R[_H9F@[0[*?:R1cB133!J:X[$o=93;8G%BbFOo;gJp4AD?JSpcOFTmoYf"6)o3r*o2%c8ciYYl+eiBk2*?k9`f*U.LCkX
%ZL)f:Hlg8;G:Z@L^e11EkAWlpXk5pA(<*h.*(U^X3h@We2PZaNpe@k7ZQRQ,j$4fL<BNpsiK38X-^r823;8F8;''Lt;^J_.h#tSJ
%CFplgiS6L!6Xd(S9iW/sM<oJ]QlLj%mhcIe8c?pq5)2ohkVP@iAjMr6a+6W"X*9ko_^gj4:GeEUE:+_OU,]..9nf*Tae7,L<)=&M
%F72)MaCF>WOs_4#9elG.<cL,.kMC2$l02<ZZb!`c1XSomFANGmF72)MaCEcGP'?[JZL<Y4EZ!*8j$4fK2*4IPiLT2@-^r823;8F8
%;4^bRVG^.oAWV1\MT]EfpPo?437dCH+gS*''Z4j1'q#5FmMuP,4K6n7URK(jOo8'4Qc!e1*=!3sXOUH?A:qKCL>V5F1(3*s3t@MG
%c5fbCZX"PR&IZ3?E%$RYU,3=LJ2bZliMp#7L+a#N,HrRj""3&)-YH/jj6bp/%::djMiop<7(cZ/%Tg^)2LKM;(kG+i)DE&TB'8O[
%Q/C5J7j.j;Oq_k%T"Cb-GBI=[UiRYM!%6m=HTGC]9/_*9J4Sig9E6I&\bS:87i)Y'2M7\_:<mqPG.;.MD"1uPONV%m\8d*AnTJp,
%=O1jJ_I8,AJOCP+l+)+%G"3>a"?(lEEL`st]q'#AkP'%+6)8QE-@h<Q>hpF0T*l/2S&'n?:=sW1G@VRCg#BsO,+Sfj!M$O[lL27=
%>^-h4$qA0Tih!csA+t"P6)8QE-308(Lr$FRna'"'*!g(&7"fO]T=_^FGB%%WUiRXrm9gR!S%g1@C['D&2A"OM7`99jT=_jJpMaP,
%UiW2"+;,!=rYi,fjbq'OU2qYuF85e>*sWC&'I0h19`o-[+:,C_;"/H9JO_ErMiop$qPOM%:'YJuV%5o!.#Ga61_$D`5oO.4!!OGL
%&U5!7YUE'F.Y(\5bS;B(eNO8_U)8C_8IA8re7qgbdi_aQ9kQbfF!+$SWdn7\%$h+6b%WmE,+Sfj!N6)M.B)#N%(r+iEYrg7%&KX1
%W+<\Q.1EkZic5lV)%<@H(8q`U%$h*kn>GM%Lia+P#s^@ECOsIQTQYCFc!a0*5a9<8TMe+7V<+EGVo*NtTlV>J!%NR]!N=pj;#<8t
%jtJ'%+R/Pq'@bhZ9U:tL4/]u:+JEj!8H>cB3WZHf)UsdBZT/H9*(].a/uY&NBPA"dSYi_9dQ%jP^ri=u6F3LS>mJkq%RVuV&p^Db
%C*fh>Bb5*OVR%Dn3=lk>lC]3^^i!j_4$1^L0I1]^Ob`e+<e>(X#/Sr+3X[.&"(_P-TX]!)$!JLB[#VFu05@!#V^([ZM85iB%B'h)
%)@iqe[8#k;#X!tV=HoZ`'g`Ib8fjX=3HYHG`<\"ed_H3`(3Fl9W,5uc7,Uq$^nNXp>p0>6?-<<]%B&@[-j8HnOoeSg[@5##7;[3H
%d9.%F*(U]m$6e732RaL!PPd8."d.)]QiL(kQ'B2T7;ZX8"m&![1Dl!:Khr(9*++q(p/>3+6S="Rj+[o75&dI`.1kmD`TAj@k!1,o
%.th*^me3A5Z`2"s#]'\ii_UfJ8l3d]+IZ"nB0i>7+=7('67(a_H;U0^<+HaI2M2T]W"<\iLXV10$%SJiJk5&i9E6Pq\qf%2?IWRD
%'q#5Vc!WpZ.YM!IiU`d%UT*H.Lia-F"E]>o.Hu_](.XRf6?431SIcBf$DEc/34u37@OaDH,+ShXBW!A6HF1"?]I9<bW.T+5Z5JUW
%6\S@;48`C6AhXsj"d.)]EaiK%0&0[L2E,U/g/d'/+>23kHlg8KKe,i[_"s_PF*]=j@L^TF;4Ln4U*L%C*OPH0Bhp%+.sc>G(+#.P
%=d17a[6^(2do"d6ChQ"nioEEA,tVKUd#rHr.be]E*L9-6DBT7J"L'LlM.']9_Jn1_,-rE;/EB&?O&\J=b3>nh_@8qG6(D*!JLHR:
%_5S'5oqi9Qh6<7dL=6JI%#(r13)srZ.^F<:@WE;\.qC=J-M9Xipmc5Z0&flA(;uVp*(].q)JD]&h%X#/Tsu(so*RJh`CVY#.`?Q\
%\q!icjZkT-O9:>%<WXjuXQ<S%/EBW4%`<RG*(YB:ecDnUmW;?K.>J8QJRi@9#82<`!a>.i-Uj>B-n^;6]L!)Ri`H;iKUbep0'H,B
%(;uVp*/O0]!]ZHS]G+MXX10.(o*RL>Lh$D0'#OL9L#LGi7:niU=ic.B:TAoqW9/2"A9isiEZ!(Pj?OoL[6I:iCNgPK$To,k"`\,t
%#>08_EH&cQ2fP(@,:dq;"<Jj$=Ho\696k1G3*`kl,Od*N?r<?s0'B'+c<?7OgIWE:7kk('Ou17ChH=.p=7>D[4Gj_QPbnK)H>RiN
%mU$tRcQq01BJA^q+@uU#p:<=Ha0%3)DC_.YrU-$V8HQE7fA4p7;I2e)6)8QE-@ea:h0bc7a-d(>%8DHB"2eLpNluh+]H+0>[C@32
%>QuFnND"\V[u9"\HH1ar$"aj>"J#b<Jj^ZGqmq)8a,Vq^DB##Ih$&PLLc@$_V;BKUeiWVq8T:0G,j7'M(;p>pfrqHgF6kiLi&79#
%cokbRN/6NB?WVGAQME!k$R2,D0`bPYlg!pY]?MV2/SGc=#8dXiij]-Dh;:6dRRqH;cm3Eh^i1DC!6]nL_6_tfNh'bph"EN1S-[2$
%6l;6l]=U/F/i*fOl^<ECmhZHZUE(ljG4Togl)tH:J]MFW,*#<Jh>NmSO-p-[nP$g.o*Ye\"JXkJ\7Ta8gq[S[/?Vh%2E)1Dn8T"j
%7kk('dPRWj#D-?a!!OGL&U5!7YUE'FX++:alZA3m<;I^oMin>s9%/=e+/AqW$;g53&:m>+!fN3uTE;(b^g'/<;!inN/;aHfOJDk6
%5ck5*3t6e,drZ?n3X:fNTF.X*^gLjfXIQ/o+OW7]'7`-:P(LiI_SF>D/r(U:_,)%"JP$+tQGUG\.5$B!QbcK:COu<n_-gsg$@eMi
%Jk5&iOoSG`[2)jq%;Ii"fc5`W%RbTD#:_%,=BZc'Il]+c&ip8\"J?s;'7^F]#.:)PC^rff#EiC(2*p'c_.78*Y]DiV#80'&Op%F-
%W"T0#V*XM41n2CEb^i/'l@N1GN0X[actPNK,+Sfj!NZ\Z/MpZMe9+%$jtJ'%+H_H5TN6Y:Sd*$^BfZVGSHCSIX:FNH%d]Jc[Bn=u
%%RVuV&p^DdC*fh@Bb65oVR%Dn3Db/NSP0.pZD1dIC2C+Tc`g1SZi[HSR2F"r,R#S+64+3lB@s*cWW4T+P6*b+U]?*7&;($*T_Ls`
%$G_6Q+cld\"Y:!q0rM]@m*bu8!#EMpJ/h*Xcil_^d\T#*nLJ?CB0hmjaC$D,`B^Qd0Qr1f)PG(30Ur9e@!0nW<?Vo8]ZnqD[OH_B
%S&91H+G55)'EOJX_pTF2l$l`)#/eQ4:'cNH!2r:*L<cGjs/&a"_MNb;#`fdZJ,4\h<2W"Z6@)79+>W2B_,+;Orj8ue`#6!4IhnBg
%@)ANL6=D;=Bb`&CBb8%;[b)RSPPl=,`1c+eA/s1FYYFes\/Y\drL=E+6a9Ff3)#fMS*"@g3=I;20c5^6ThkDn]4!L3;uA1!LVX*X
%-\T?5jO5RgX(L"]pK;;B_o[<8#3*50Vc7b(:(-*+cW3:8K8G!d"@]#oVe$n2bcjh-Ze-7PPPQ+)7kn<%e"`;dQl3=]I9&lC_[1`d
%#_etNVj/9gbcjh)Ze-7PPPH%hMT61R4nSHfe%'kU$cQpg#jn#Ao-afN;47X5j`>W5BZN$&7kk"%OsJ+R53dp?[PNIbH?EU2,lq,4
%-@p76gcZ7<1<nuZ%)AS_$(T3%k)@Ar?6,>#OjAS(!M%>gm`:j?a&t2eAjKsK+Ha^THnGncQnq0C6"G$Zb2Z_joLX-u7=/W$3=Mkq
%L;Gp:msC[[#0gUt(fD4[KumR`2kPb]GSQVMOj/GF*p<+)GpT\/MT]GLjZjM-F89(r&m<#NJoVuBF!-Uc\U<V.XLW_;=]8Q86S8V,
%SrRmf>W`\)CFU_;&iKt-H(<(@k*s/l.5$B!QNN((cK0-;:;jLg1(,:q"&YZ6j`>K>Y\mN^3=NG<8AoL#+7W/3oi5\_'U],ec%.9=
%k46(Y.'RZJb@/KR5U)50q(*\ZbK$#17:nhrF.ebAmb#sm>";^3(U_NL_d+iRPXJnVRKfqSeS.!j>gtZucb:Q^"2tNs9%1RU]NPk>
%DAqWGT&EP*^nN(`ZAM]i3k\eJ2ODb(+cQTC#V8TsJ5s6c%r-#$j>W[h;$asg,R%GlX4/,L/fOb%f,5>l3X:fNE"t%]#W>HpV/uIr
%7PkSdko>Kci$r&+b2MZ\nS`T@iBUp0(lI?'?;&Aum@n,D+5MOgL*;o"aDp5i??P1.PI!Ml_\iq/A.BmUY_lM]gV$lLrlpHZ/-p%r
%,N?4j=".Qh:4_b\1G"?(%`AKh'sAqFE-K\h^Y]G1!h7#^33M7@8e-%]V/uIr(,QL4ko>Kci$r'`_sRFU)Wu=6iB^j-(_Oeg]Lp<)
%n"T>jp6oDUUiRY*!3:>r-)fEEEH\5t%Ks'N,/UjI=%PL/>r;Q*/i,&7F:KRk*N\7#URg5u7Hn&@gX\/=&D7I]`,QNq;KqoJB`+>_
%AloW/*%2GU"d:/!Uhq_k9K\</af'&/+/%QP+9IU5";[hJ5j]'b_,^RD4q8e+-q7TAOp4teZlmra+:Y:A6"h#[&Qk9p!VJZJ",mtf
%i8Yp]O(&5--##UJ;!W\CJg@#C#D$"l")oAS!G[-g%4ZN>"=pD7/;SBX,RH^N:htWudNDXP9kQbfF!)e0F[.5VPrj\NQW%-!6S="b
%1fOOA$s5'7JX9;?%RVk$Tet=%oc\q'dNB8'1n=f4c@I5AW!6ugYZMgnDGIMu%*9KFnlQE%8nbK:4;@g;=:QTu%O;?G78P?3'g)q?
%5H!0SL1Cc>]cLp?]%_kZddgf/FBB"uF:KQ&5ZLW.!&dK&g<jUmLEW&fM*08k[1X<.%>(;&F;@8*#@[a:),sdQ[PXrKJ==_k8EN/]
%&%+^*"I2(YK!!LD(.:1g@KKXPe,p`D/IcH-VqE&EA.BmU:`n1Z:sIH3(ctH)6)8RpS4o<+M\B_R&C.S-=:/".=HL`1j?Sk0'F/:)
%4=C<s!%`qI!BH7;!/3_.`L@Y4GYb:@YTV3pj?QB>Mh3bP*L-SG!#EM`J/h*Xcil_I\$I#W>UuQ4/-o/T)%>W#(c]Fci@5Ftc!`RD
%OMU4X)ll<`$r[Bg5K2b=S-[2D+:^h*=%c'7L0,T:%-IXP+V9A0TW=c=@\6)#+IiW!K^a5[pd_GkgbtDWWfSZtJ]KZ5#"**1piAB6
%\/rTJEZ!"&F@%Aa76d8iZOPf&/VqC.0UrEi?m#p_5BlFJX$A3gLVZ)<-\T?5luP+&=P$Jf%`=-R$jP]fk]8\!\G!i"EZ!"&F@%Aa
%7D9X?%G-#1C_"@>J.)YA]"ggARdH-Toc@.!#(pW?%Ko4o\2V<qiCXW=c!`RDOMPlMdtKqd@tlj''p?CP*hX05@4:EcY[k8X_d[[(
%:'>)].;m)Babnj8nkC#mCeJOYLiuJ`Gn^@b-qscpjsiNL)iE8VRHF)h#%1;k"Bh..l&fPb.LB@2Wro[V$,E8l$!`gtP&PZ?Ls;/u
%5*'.Q(*uQ1Wa&3BiJ\the[IRjM^"bq8HQCKf+PtY[2+MJ9T`Hhfc3QDECI#Vj`!a&C<dN]"d.&\.$*\6Vb4IpFpap+Z^;_e<!G]u
%>`CgFEVQ=80k_>d_iW#K-qr4O>0#gq8J/Pt<fpMrfc3QDE@%b6jmYkS@ac$X_iW&m-r/@P:5,3U.7+j+Wh:>&fGmHCE>>W&O6^I2
%%*Y1"EYrgWOS!X"K55UPLM)K@];C1#+CT=6OiJ3HQFt*o7>PMR>Rj+R#82#]Iqo?N]MjKP2FV4DA9/m9PL[-@.AqfUOEJ!hb@/KR
%5U)5(D_3,;4)88<h\;I^Oj/G*:KH=UURK(j7>QXr>Rj+R#82#]GA@ND\lfD.';ro&LhmQco$/7V3jW*3WQN%0'HB^hYUE3JQep$Y
%EEJX8D'7k(0`m9]1iW7BF`LO)NOP+X2NY`\/5">595nNh3NUT\2NVpO(kG+i)R'Y%B'8O[Q/=!E7j.j;Oq_jaY.LH=GDT`oUiRYM
%!12`WHTE_0Oc<ij+OW7]'>Pp)DSD.g+bg)]c!Vr[bAuFO*S0W!Q8(9+\I:rf)jf\"D\omBp"Ta+*(J!h8E=3)Y,f$AGDKZn?o&W3
%a!J=HgY'SmIX`1M6okQ^!k:qUe_P6B_seeQ)2sC3;I*@J7nS&;b8:J?F:Q4lE4N-P^Z0KmiB^j-(_Oe7]C,ZYh&D(POj8NF!%ckN
%#1%J5ZTH'D+HW-*&]UZZmd?+k'numSc@KN5KB9^_rf36;kZ0Dr&D7I]`,Q*e]>%kMKOI0BF.iHZ=?IdkOcXE4T+MP;KU9!hjT?43
%b1.)K'^,%l-qseYIio$*$;gX]=%D1GSBJsI,RpjSBgJiL5oM^u:PWOZ17+%jBc9hJK/CAG!K(7Ml3KM0F88q&U]D2qXU!tqP/(4I
%3\ZKO>WrWC.6n>=X$O^"KD=i:U9bufjl8Uh!)s!,()SS3i]"N-c@S$BNrq*;VunLuW8&g1^Z;f4*/8P1(_!77&u]?V@OV`#k-_]=
%L3*/-%&L3EW"0IKQ3M?_St`P6cK4(OOoSG`[2)jq%Dl2\MToQhQ]D5G*p\AL#q_I/a(]lM/-h?KHlPZiJ;U!p!%N43KJ.fiS&91t
%*s[s8%lHZ/mD3=IH2IkKL#kQTQ]D5?!`0W]$%U:K+FFX"fGoWeq)FJW6X<M=J^MmgIM]*L/;SBC3"Qb=b+R0LZ_]sT\#7juL3*/M
%ON9e+:b+gX:P8GeYbJHHcK4(O9E;,GHCtAPV*Xm&=KsjpkONU8Ob`e+<e>(X#4Xca7;"oVbK#/h!V*sa-XsNpHo%iFQ3(%d(*n8;
%,UqYV^0*?)b()MQ$R22F8I@GDO'4Y]/g'O=<<*e&4pPO(A1lajHO&Xs*In<Uc[d>FR*0.6G'662r_h-H&EjOWni2u^h:SF-[+H@Q
%A-PD@SBL)5lCd:;fGoWV"p8k8bNEL%LnD%@1)P&&&.%<$4uYh6`BK4&5fe%6Ge?#&O'&s&D(%n%3@-HmTe[HW_d#B,'8IXWic5lT
%SIc.g>Wuo[Cr84%Nu"5&ON_)TNcY#$XW';kMp#PEF[@L8F89'8)qOZrS&:?3?m(JNq-4@JqF-=c@DI"P.#`6CgoVK@7>oE!87jOe
%LUhfNV:k9MoS?O5"p:k-5uF/qkAJSl*Em7h6Sa;Q-jFbggl*-%n5Mp_6`q(h@@YO(DTU6=>&4[914r/<nZ4I>6/,X.Rhpt8]F`dO
%c0%q4^nNXl>at'IL<u#r5*'.Q(*uP6Q+>BTKl(H(X*-NXMin&k8s@&5\aH$p9pt/8-jF'VOp"bT>b)J+f]fUkML5mZ$/h7WF@T@P
%NjE>Tb_!pu5U)7>Ea9Xt0kZBfK#m(>PfNI,k`b4tMY>8'EYq[l%#&[Yme8mO%@Y8s0VgH@$Bqm-DE\@7Fc+CpaQ>`3O"55+]FrjR
%`T8f7EZg7'Fgs&AM%o2R:_"ae%OCVT$5X_H<I86"Rc8?)E]K6RFBjIaigGU.;aEF*YW7fdisK$MhZT6>EB+H<*(\"frN2!%,,S(s
%=V07+M"5*LXdarpg77/C(ihWuLu[2nih6eGX3eR01(,:q"&YYk]QNgC@,Vfd_iW&m6lah7>!c>,j%PseZQQP6:s,8cH"6PZ[kh8/
%WQM1G4A$g%-qsfeFgHH8<p"K,*lSC99%1S=*HcC'ac3cn3Wb@O";W:tOL![n08C9'*J$^8!fPJ`TQFhQF*@TKfI/)dDBFL.^B7%7
%=MAj#F@l?^0emS3R$d9Q?4J4e?jY08dp]d^d9.%F*/Fo/):-RZ3Hp:9ESJLOk]a]KL>l=XF7XQW\$NRaL0Op-a,T1CipGa6Z/2`O
%9T7X]-:Xp#Yoo0aP+J_`F6jGOj0jr(d;O=KN/1tHO*WnB=RY#e-H9m@';O%M=:c.]d[mMOF6jDNj#2mRdI2>uN/1thcdgj6;P'Vh
%+OW7]'>P6QX1r`B%MRm2N/>r#Go;QsA!t[!h`:CbM/aKS`,+?%EZc\/V*8AXCj3O%B:'OF>tbYSmP,7b`c@]`]6!<G'B?NYM:oW#
%jZkTT6-7Hthi[K$$Hdq@AhYEhANtBgkL^Fp`bcD'Z[KI/JKb+^(kn?%:t*Qo>W<BAVRJXYeE?l9*sWC&'P@NR-qseYIio$*$;g53
%&:m>k2B[p@1pHhS"gLf-BgAL*6F/).%EP8#%B0:m)ITWH"Wms]GSFcmZ7&9H.Y(\5bS;B(eNO8_U,X$P"%`hr"4V'^Z-sgt3DF-P
%TX,b4!31QQ$Oi=*_9-IQ$fY,N%`ALC%]H1rEi1V\Ef/%K3"M+e:`:g78d6i4_SF>D/r/CJ5R'SiX9IlV"G<O:./[d?$fY,N%O;?G
%2,J(>`R:E&F.1?^3"_5S;',%S8dR)8QA=Il%a0E6.NetZ"J?s;'7^F]#.:)PC_"@>J/h++4k'UW[g/+njh]7,YT-32!cfDT!31W3
%!O,]Fe;d;13=I8:EZgL"\tE(*USU71FILL,3#.MW0`e?a.P3J])Urmpc/p^M#fqQb*bp=2#qC3="C%eg/;R4*3=lk>lC]3^^i!j_
%4$1^L0UrEiJOCREK3AS]Go?fqVs,ag;ZSmT-=B4D&L0RLKTjCff'5\?F88c8(*n8;,Ukuu&5mK"]SLDWT+8YgaQGgO!Ybi)$jq60
%U=3'B=:k9JLac_/:l@@$?,SXf:Bt8njDuG85o0Yi9:,&H7";3"/-p>%6[:'aC*eY?MqFPr`TAj"1Dl!:+V6`Jc.#2G>X$-h0I/Fk
%LdMbNaZ(hW`9&GLO:6m!s,XL-=g_R=Z?-&]H&'.EYhbC`^Xt,*]n17s9Hbf<XDL=%eaV<TF"/DDN7=6Cb-J:uhB+g'7Y[/,:s;nA
%4+b8p!;%DCJo7<rHtFi>>2BjO(Rfh.?te(N`(I<P$UgkD@H_D&7HD%9S#RCTC_[',42Se[oSY-ETF6SKUKK+%`e$KqB_Zk?>Nn%G
%Q)!"^#.A`/JYCa5;/ShW`-_=8=tqiL%"^jA0CIo4@%40Bd;0O"gH39fd,^*5[o.(CC.5I0%#kFCi6gKS.++-7^fVhM6c$S17PH5I
%pEJt+31Hr5d&[sLA&3+!MoK))@Wc*;nQnD'.2^dq&I*ue?:;MmA5cJAR^HU</6EBGO52dUeR#ti(0[_A#g9KWf+]5ras-?0guiDX
%$aR"g'HK_:,3[3TY(t"H'A0]#a-)Sf8Qc1FQht#$@8Rg6R\BmU8HaL-qc"G1a"H.>MY7C?!9iH?F_#n[<LUJ'KP7J1KuYie+"ANc
%cJ2MgZrRaUj7g&c-h3X_jdB7$L8KQ2@/Lr;H_#fnRTV+pVLi5aqA/h):;TJk)bZ"<$;u-H')/A+JhkSf'gl1/0fXT:qbSkAPKo^K
%8Ce,GGl.mb.jjSqM.4_H'gl1/kt]9;E$&gA.bEITJn1u+KuYicTB[aOg"]U_ZrN3>j7g"n[1a9lDCcr7.u<0KleA<E$@6c2Wu0P?
%8AXiN>H4AtY,edSF(5O(>!WQm?f!us;,G-?X^YtE+9fgSDClFng/J[I`Y,#RJiWc-KU'==^E-o#2cP/"n.Z3uab-B?"5@rAj&X20
%eR#ud!1=cp&!F4,CtV6BCq0`"8&]/!*[E$Le@+t!pKDI5p@?`=aP81iOHa<AlRq0_mk(1r-q7-STHHhAp74^c<HQ.PjcgSgd9JsM
%J1WmN#ZXSXn6S:B39CFm>X9'SD*/2KX6YN-b6]m1U:"AG**[\(kZ6FI[$Qi7N2[ZJ$:a'qG+K3aHZB>@!ATIoZ%<Z2>'_7'Y3gu2
%b6]m9K!eu#*8>c\#s32<jnUSCU:Gk(!*adcl;l^MRm%o`6a.>bJn'/R,MfB3JbSa*OYJeNjpIg_D"7<A?IsD=VGDup&?H&1i7R2`
%8@SG5fY3jb,9`L+L]X7"B9AiokJ?9%0FEF%*Dp3\pNbt,FZ4,D:5+fAbn[&)%U+=qg=>lP^jGmWULG^/eq-b<D#8MM>CAGH?d==e
%&Btq`!k.aZl]8I1bEj9?iuH)[Qb@c4ToK3cR\C$Y=U+<UMh&=(0.>=ii'C<6+=YF*]mLl_p@<nGkk'FA8]cU\/-GY;Kacb[(DQ-o
%n=V4VOHa;6?9XF*Hhfu2FSikYV!('0P(7oT4<!YLEsSUIQqN7t$BbDEbNH-L0:tT[jhb7h1fk4li*JSTKmWWS5qV9.MP7.[(`N/>
%=W#r;B+/N8[oEiR"iJ]oQd:GCHheXJj"JV&6urN'!:Jt?=La^D@8q;VXV_s,LuE&$T1,KfHla>tJ)OEo109P?i*JS`J:%)37QhR=
%MP7;,FP#PZ5/6K)0;"#TE\?,s8EL8B!8Pc\!cTfb_l2e9=tqj7OM^$a5*(ADq&D^e(Zl@)\Ul5[p@;?;g<8Y5qLE"V(`FnqiGgNC
%8&Dre%\]s3Es^6!5nlS2q0\mR]mL<bZ3tHecr`R@O*g[b'(4k&#_cQO98M^;Ac\le3iZ]chC:\T"Id#5A1\XQLVD\^Ka/V`[oX!?
%"iKiV&$.7md^T*O@%+c<BIt'Sa$/Es70aht[oX!?"iKiWs/Sf'\phV=d]=/cj#_k>d._mdiNS+h`WDju*C4)spV#'od+U9cJ^F%L
%+u&Zb*ih1K)2lBo6H^=)T[;SCXOj,3="NeCm;<'H$%4t>d^EnU`ZjrY]b<06,7#7e]][uW9>b3g&6Rcp"GK$G<KU9316mO3=<KH6
%UBh;,]B;cp$c-:%&6Rcp"GOSGF8^eE3\qNW:%'J36bi'"m_Z95QjNt^2Zc:=:\Rb(@C]Hu"[^["MSRW3j!(OmYup!#GBX1E21U5(
%Q[>^4YcoXt!hnj!_<Ma5\Arn&>ArZnNmR>d+=Qm@?E,D)j,1*,BR30/E2jNDI]E+uIK%uHYPVruZ%`SrR\C$Y=U''-,%+^!>SLtQ
%n=V4VOHa9P#L3ELs"%\gY:X!P8ff6h);'KJ)0Kq?;66n:K;Riu;NcSO30.,W3gU-=[=r*^d=Hlp!BY6A%9mKUZ.a5>$.3!D&qCu^
%O&Zu\+,Ep`RnJS"$DIOe^f`)PU)Cl6bA7n\>JW!MG2OoF>n1G#<LDGhL:2\BB^3D/&F6(S"0pPAjq=E!Jg:=XE#u&4O$4-?1:L9m
%N>9D$e:Fqs[kd1]*h.$7<^AKBO9Aqrc37Shbop&$DQO`o.nFkIG2W;,Y7%7(Gc]QQXb()d+:5gnS-u8gW"4R8c)h^J@g+;DG2PJ\
%>tfYheo5LZ+dsp;!iQ36Z#59G#=>oEXVF35"XuQWi&hX\cl?M+kN3DO\Ul5[3cMg[eYUh%6B10ZMP7;,'HT>T*XQ%a%^FT+Es^6!
%_(=MnElqbX[3#"qi,f8oab-B?"+,$+[3#%tWe4_t'Ko"019`.H[@VNkFNO?%0FW8hP[mU/m]G'X5$W4ab`/>%8Qc8ikc/*qY&O%7
%0UdRq"\AdhlCP%>H2<GPBW`Ha^n0A'[>,2P3Y:EXd9JsOJA&RmH;C12U**VIL;C-MpJgZka,Z13W>O=r7cVKp*n>UA[GIs:?PF_p
%"XuS+oH(%rH1HlH?nE3!a5.lhHIZ3&c[CoebnWVIf].=[p!gN*)M5A)'HDIJO-LbDp?3ol)an`N;#p=f*\0BrlALC)/JnZ3hVWCF
%-dR1&&BtqX!RLqE19[/:o#)=J_>'$=0_PR?.m/+2MhGcH+K]h6'7?hLVuat0^f1lI"f(#.)gngWjB4,KU:GkI5^GJ5laBf?o_*^t
%p+_R^^,gO)ToK3cR\C$Y=U&sR+X!"L5bX2?&"93t8P',0#U:I8nj!EO!l;:?j?Z\0!?FLg!JM7bW8k[GVW^<DOoZT?L^1m6Lk&eS
%30k7!-qFuD6Q"4DRhlW.\M0?]bnVK)cln?M:gaH[;D-0>6urN/!-AK0'Qiu;5qV9.MP7.[(`GGg*X54fB2Hd^X^Yro(l$$?@13_T
%XFSY+%!)a&>X8u&*Q!U9-!%g[k/(:V1fb1*@u&DU@>P`XTc"\b'dRi(8H<i<6NHcM!_,<her$0+JooU3LG3Um.'b$ZP]Pea5r)N'
%"@._r"@/@i0IjZ<<Xas&V!u_SN(?cY"b_I[bU#Yu"]58C#X&q=>61K<(tOS<Z%<Z23eS(O\p4=MX:'(Ud9JsOJ/uL/kb-]<(mSB/
%.u)%N;L%C:7O73["ba`FbU#Yu"g`_Y$7sZE%DoSP%pOVQ5XMbXO<d)4n?pJm2IJM+&FC2X$.'Nj9"`Tfqbh.>!t!@]6'Qmo_:S5f
%g4/'H6F9gU,Xb#(Y3kM+(@+UPQOq@E_sl"]Hn"EdZ8?@9cr_t1%ZS8jU(2KuDQO`o$O4G@$2@WN;*AVG"[h$+K##_5Hn=KSfk7/`
%U#d<RGbOrRV;,*'j]G(i@tD^#0FSt]^ZQdNCIkd3$uGA<"%1P@.c78fS*EMM<XarkKAb,GHS4-YE\q">_"NdB0JrZuM`0qf\[>m[
%//SMF7c/:'L@q:o.L*>*KRoi=pJS#"X_?:CTs7u:4;rTPV,];iCIE4l(ms.c#)23r96#^:Tiin#`e*/!(6-#J_@1d9mSYaG]d!po
%9tcmV$u829<XarkbJDZFF5#5\cenC;%s:)h-l-@P5u[Cu.EfMe?3InU6pk80Ka1?"K;9cF3dMj/qJdY\H["FP;XtqZbJ9-EaLIL)
%6XAK$#>NTuUa-%(H62NU+q8\`/f[NA%MU/pf[9;(fTL<3AX])]Luo&-!:8opXBW4l<-=e%98M^;U&aQD=X`XZ)8gL>C_]<A_([]h
%oIS4gE#Q7=1L%iF<\OqV*BbM(X`PJ]k+.u7Luo&-!:8opXBP]_E8g!2MP7;,(nNd7(?o-n%9<#Fh'ttX$BbDUkd^\0auP,1cE.gK
%@g2,"a,ZbKp:#'WW9QWlX!!f\8-6#jk5oNie\K.s>:YHJ$;u-8k]rt.Bf/j)Tpn]2jpIg_lKDBPH\jV!pWflU6Xp9K4Eg?Z'"6j@
%@Ys:1&u)pg."F@)^<k\nXauBu[oNos'r:?OdITo]P&lGuSsrB/jpL7CRdVW*r:OC^dI'1XKgJYjo-Z!1^p`*(XbXOcWWQdL'_hMs
%atg3/a0hMHk%&K-H@QFlq3.%R:j_Z5f#-<leH%Ea$6D$8):7BDMS6U<S`N-lR_kX\"\Ad(q4=WMGtO$K\E?Z(J*+@)>(+`I*cCGA
%K4Ad1p\ZIr!jLMT<:B&b@MHaDItD*JD#$4oI(6qPNf9qSmeINT`f4h"WqWr:]iPHW-q8R_'Vt6FqKo=;j9[OR_Oa!.-oe[8\CR_3
%H@7u9KXg2@5nni$^rKVSSI_J=m.h<RJn#bhZ-oE7I<9#D%H<sD"]59.!ZrpUFZPJ9Yiee9$BFMhk;lD1%3m%aq,7h.5YI3]]P>I0
%P@5/Y4b%ZDJ[$g%>iEe'@3icSIgXV=#Hbh?$BMXinPM"U`'&U%;/g=^51b#L9Ge(Uc_#e\^l_6_E?2)CIn0@u\W>d2Y>--8W8k[G
%VW^<DQ2r!m#RFuV:oNEiK;Riu;NcSO_?bsg4HKTW5]A;(H'"8%5_fn]5[ag1l8\:+.=.)?A3bo(i^%Pf,+o_XN[7+!$BbPU&4SM?
%jopE90$GV0Es5,8F9j*,'NbC0PRDO=d9JsO!$+B:"W]a=:s6DO@V@8/L5$23LOg)]):W\EWu0OtL7tk>(dirX.j-YN_d#Mb=-*PM
%LG31'M%q_E\Zf*CN>9D$fHKlX=CO^DBEj2q"j("8&c`rh&-2[AJ5OXH[:3gN+Pl_;+cP.sMQ@'oj]o;qON\Fb!RMtu!DmA3N/B6h
%'glI7.6M\X,8(\o!MQ.oEs^6!5nnhi6B?i><l!o'L:(K(X<<4P%UhbWDI,RVlbZmn1fk4l@#$EO3[hH=7V*CeMP7;,'HT;g&IH$o
%!MQ_*Es^6!_(6]D7`/%[#iA6;C^%BP$-?L>OoWbCf.mljJDia[Zr`>75\%#JnO`oP9;Uk_,Xct_;$&WZ?ctNEs+LO]d9],%&.QIe
%[]9d>X=rC76802a_a?6LV6Ik[d]=0NA&0iY1]h$A3p?CM[:3f#(^,U@i+#>Koq],4$uPG=!^d(ZZ(Q_]T:$%>Q?S#BL#sJDEa,r9
%@jP9:"X6m]0Q]/NSr5S0+jF%BYe;7i$r+L:I&iQOWZTJh0f0XSJj[HE\TGa3d;0O"gH39fd-Q*3g9@dDer$0+?k=:rIEr'9er+.@
%(td[W#)4J^9<!ZRU00"$`e$MGB^g#,<m><Z&^@"W@!X%7'UjA%`>M^3Auumg$\k]a2"hsu1[O)29>T!KN\E.Doj16GX9m-T0f0Xs
%#Of.i=H@4C?W@Ic<@rmc=P.DH%O>Ttf["oIL9Md.HVMn=Ua1Q'H!Cl><@4qc(QKdf#El@um,^C^6s,\-]r(!Y;A+PO]Vio.3d0I_
%;RBMe"CN;^X!?rJWRB"M,t)MP.6MeD*\&EbcJ2MgZrRaU@h0+9,[OES4>TXLcr;\-N#fS"FV5I'AuQW9$AO,2J+lni@AD,-,t)MP
%.6MeBSn]Q"e(dtYZrIZi;t'.J>,!@74&qBD'r:?O\\j<HH>fN[F'HW1<^F=GZ#BA51Jt^F:),$i"XuQWm@NSi.,!BV0sjrBJn*-p
%Tm!0)c&F#;CBZFTFmP\L.-SpdX^YtE+9ff7*S!t:f2Yqe\Zpg$XWW@rDV\53"XT\n.YbA=;K2!Q=Wm(=W?TWI,t)MPo4Gl:8M#AE
%J%b6LMVIji93aHY6;cGG-n3?TG$W2!eSu[g?fP/lc.j^ld$/*Lb:Wj*b:Vp'O-J$+G6:H018o'Q!UmGOLZ2CGeNkuMMRrm8AJrk+
%Mg3Tq$TQ<3AMf+cJ-qGBCu9NF>=FmP4AA:3g^:"<5P*\O/NfC+<DAf'I\KI?bhO=Y"]Q$:?lREYh<MQk?CiF;+RT@H%"i%?cN;p;
%]>X2C>rl/d@^lqF0H)mYo6fKKP;B-IP#7/r!\-b"Tr$r"le3sIH'4,>YS0he$BAsdO+a&aL[lE&$#qJgJg^V'HPYmIh.<J/OjO_`
%!X_E5Z+]=_DUi$Iq"ZN_/TZQS'i711J1Wt"_s@.O1NeS6L9M=f0FEhW5*'fdmkU,?a@M+k!>S!'d-@r.d'*'!ncTg6@3a\N;.+57
%H0AITQ_?N)7RGl;W$&3cd.6eYY-.56Gl4A(O-HUdmK=5_Jn*Q]UYk@K%-?.s'&lqW"d=J1TDNM%.lFg8L41/TA)A'idNO?C%\8!`
%j@&!"%($!h.[4"jTqFb#?SFL&R)NG`&>EXc%`L]n&)D$F:*d!\5YD[-5d?"[ME>qN"d9UV=U_YA+XiR\-j:N?kZhWgTdU;"(*S?a
%NZM#qotZ3Wj?ZY/!NeZo#\=iLW;+/\VW:$?Oo[/PL^.5"J5H#p\V+KG+:3SL@Dmbl/0L1,@4i^k$V1?'Ka=H-_@.i7%)IRnj?ZY/
%!Ne`q#R)-n-jIM=KOh87M85EdKYoPS6pLth>YE3\'P/0/=p,_i$NqBE+ZPRFlkSWM!A-d.)Gmel#cJ9M[A<.T;3h6b7Z[Yi)pfuI
%_1@8MY:,<ZQ6V'8+q?##Mr6m"nt7DQ^t)uu`,Z?$Zl6c3KOh87MguQgKS,:.:oGJPK;R]q;3HL486@+1\-!Y',WLmIlkO(Dd#s'$
%cp7dAeKfCdPWUAjOYQ4YHL*`&-Jp=ICdWf<0:8;$>`""9jY&)WBL\_[0:88#>`""iAR/`1IcAt"2k593j@!GmK?_PG<1)%"6ml=q
%3K^fa'.qC3M0UVVWRqXr?SM=QP_DB_o!QK5;V+'F8fe[X):6*FXYHMN#p(oL%uQMYBO\\TR9\se@nFdnJ0Y/!R4i\01bQ[N68B@=
%ErZZoWlj,^VZrEtk!28A=-Q-A>P"u:UdE]#2+7`OZ34iYeeMfq`8Eu64_RG/'I=XDid@d\WQ]L3:!nNB/--Z[DtPE"28OpBj?ZY+
%!U\1AqN?_@\(;<7#fmXOl1nLg;N^8d1aNZiP)O(&<lJX`6;W7!DC%aK46,hW!.Ct"WP!?aRZ[nEH)6HXkY#3<4\p#J.6.s$,sX9Y
%[Ap%^eid\=*Ycj`c)2J!=o,7<LfRO2Ei\3h2tQO4.IMtUP_DpioX0:g?d6KDVRS!O;A-j+d&MC2D]-A3OPsGBg(u1e$_\p2C[Hkk
%S;.VLEGqYK,_R)/0=;bdKFHIqir2IP8H^n8WH.U]V(*4tJV:O';F-I2NR-e!NIF'8#86#[8Hhrm2*IpVX4Ln[rS4Ih_nD4b@;ot+
%5#uLpqmfi[LAN8#_r0>:I&YY8H_``b&GJjJ8.qlKq,43.n*"Ym)"*km&-[$:o=7JgD3F<h6/"E"+A&41-e2neTG07lfIM^R-P`Ep
%5g@R:qM]l"GK1'=*_HT-!];lCW\aEEh<brpI?Y)%!,?74f4OZ]\iYubpJNJs'"FY2;ObMZ8[hb0pJWP4!iVO/FkKr"C\S"D4-1$J
%<%<\:\<6SbQ,.D*DQaoFX&P/`:_V;F;%$8:JDia[gfpacQ>f(Yk-+N:OM5so;aD*D&!F4,gfsST&)p[:eU]nCMB4$S)7[/=X$PKE
%WQW`!"+AOKUa1Td<kd+9q"8]NT[/Ul#>&&&m&d?]_7Bj%#PVm=%MU/p\@;%>&sT<f8;QC8OoX9Aq-40aVpKOIcOHVZJg^Wn<^,&b
%qSXEYd9844NdE:Kl9P7oRZ?m:(to<dj2Sct<!.$gR]d4f;2gGKV!tUto!/1X-h^(:eq-b<gfqn.?a\JNo6MZMEs5D@m]Cl<r7$!T
%)M5A)'HHjJ5$!+(R5>rCF+\//+:>otQ&dep3itn>YSN1Lj5.rAH;C-_,9`L+L]Ut&,o(dWN0bpb-j[h:7"K>rj`?\7:[*uQbn[&)
%%e`peeTg`N1`tOP6*qDdK&b_1kP@rFd3Bg'/!q9E_g$:p\CZ'Xdo.d!bC0%l2.HK+)Ou2kj@&!"%(6fm.^fukj0-qij9m:^'!iEi
%.7R9O.=rDl6j`9=Ag\3m@^)s?@^)s?(k8(\-XSPfOdO*qCGCEMCD!B#-;&6[1&4Y1Kj]6^6=P9r./lCN*],/RMR!Y,0h+EE0a>VS
%Vo+.aj?ZY+JSdl;LM]M9q"qFf91\1HOoT;UH7Wki3lKpRh-<9%(Q\br].ld5mDbg/M_[D.8fe[X);&tgJCnlN$GTDm!t!(U;%c03
%7h8+,`t3g6.)WHglp4L7JZZtSJZZtcn/HL0OHAfDjdC\ea-[dtILHh`)g/ZVPW^G;19^p"19^p"'Rlkg#8335U+?B#O:_uWO?rD<
%lL:GqGu0`9:b0rr;CaLNCnhCD&sBr&/-=Rg&J!QX61MGLn=V4U:m>Ke9/>'hCe4hb?`V(qKOh87Mnlc3KYt6/;#I^^4D7>.'`H,:
%\+K<lG#l?.QaDIp>Y)pG"=+ShU[l+$`3#6k6:,]8+Gmn)PZ9k\RioH\\)p"DEZcK^TH09cFX1jiF;GRQ!s(srm$t-baBJ[>V5u\=
%&FJop"lPE_\&sg?fOD$$=l1*Oa.8B3'dN.'1jd3_qT^3GmZ;h!'tIR$:'Dm&)hQGH1\/(K`(c?4=<KB4+WN<+Lud9/X4MYI:bQm@
%f_3TE3:)<GW<fIS/_5fQnI8o?g]:R.Jb?V"j_1o#N3)IV_W/q^Qhlc#csj*o)W)*\`Z:*n<?LUF1jd3_qT^3GmW<iUp8I%'er$0k
%%:Nr*iV6I6;5m^b'dN$+KCH+OO\<<4L/WA#>RH4o28QN,U[bITUS>'H.n8*6L+=50A:1Q>B[<D5'o\)i#XdV^`jaZ]9#tJF(g5bL
%B+*h8F@5I7<#nIYR$Oa[_Q"%bI)32e;;t1RFW2E\-Me3!*.5T0qb^f<_OX.GSAm$'oVm#DesLYG8mD[r0&pI;7,Pb4K.iU85>'-d
%W5JC,7e%k[iE0UDr2;$%T^F!<;r/B+[9QgL8m<APAI6jhr*E:k="eHn.;aK4PU'(,&P=Q[G3Oo$1R4'q4UO`rWMB6r\>$04bZ$p_
%pF%-fkAK9HGt$V#]="NCoheSP5b5iK+q)/,EFT;hj.i=oJ@gWp$SD>fgYGKE>9=Sk$.M7oEm+?0pKB5/-)?N]MXh1Kmc!o'Mna.L
%\!$=57n$P^FUfK#0Dr8tN?tB[O,C4Cl5G+)^\GDV\(6eP4t9/;\7>;1L>bYSDCcrJHrQ=6:q%!/Z'EKgqPqN:25RF9MNS,1'L!4A
%pe?Yc91U!D'kIEq,qQm2_^?qNYh#&I4t?DknG0<cW&?<C=,$R?[6+29fnmY4)#F+*[5+Q(XM`-r9MQk9`6d,f>TNZrdpL8IE:O0r
%'8]j#Isq9!+jt#SiT(@n-PBKinE]D?9Y?Y2p[a9&qPX&!kHC,(d+?l&[Gq.hU1=0lab-<=K>,'KW>Fe\C\OJNGu0`9d+?m1<MMOP
%ka9+]EZcJrTWbO@CIe6Jg<:igEre9+o^t(AO'DRi\=Z]AbSme#U+?A\^4*4,mfsRJo/DO:"Cqi2oefg4ob0\4;fp7@.!\XRAC/r[
%cW0')R%e*i7aZd;/:kOLI]apk4)=S`.="aSAC/r[caDj4OJ67a7aZd;/:kOLI]4[_7hd!82bG,*,oQLN2&2AK$?8;'ka9+][(eC,
%:L@JDe<BXEM2qBN,nGn(8r6n^5Lu(sS[CPFPT0tM''SZIQ`BV*1sn%-UZ=_g/7V@"A)D4tT#l!?o96CBNtO.tPi1U1-79F-@^(as
%;6c&^N&;n@q1?_F`%6X(R1Y]&OWXk_QJc(ZFs:oP#.p9G"q*H,=Asg80:88#b[RfO)*tNp""Dm:"Qp\e%n0V,Fu:Kip*G?#<>ci7
%,nGm=%.%e"5V2,N@T=9e1aNZiOpp\pH9?"@3lJ&Hbp=WV!D*973'A%CF:PRUFE7c1>X/oe?-X9=(3DjIV\pO4,nGm=%.&(*5V2/O
%6<tH=,U@_*8Ha/t4WK`/+Td"[iEB.QTIA"!Nb?GKY%:G./Am$lA?RE-%.&;[eA.e26ssRDXsIWiMR!ZWI"i%\l[hH?)%Io;HUV'?
%G!@2k(3W!K[L<\8Op=EI#'E0o+;K)dU#?k!,U@_*=Tin6,96D3K49NP*],/RMNSD5KZ4pej]t]]0uJQqA?RD>^i!h=_gZ2oX>.VF
%VW:%jcO]lmdcG*[2ah!\9\pk*4uDA<PDZXWCkfY?QaB92I:u5W-P^29fEeSd9C$#8WH,n3VR1bL;%c2id.a8tp.Dn,9kb!3U+?Ec
%TQN\KX/P7fJ+oTbDPIo-6t#WXXdl1oqos\F[$=NSP(8P<[o/AI:7;7kBfi/A-iog/c\3YEdVj"<Ub.jUL>fDrq-6D;%a&7_(i?=d
%1E&>541Tmsl3@ChcsQ,Sj/nRJOoT0;^6FZM9>?lfLtaHKN5B(gZRQmZLB.A"D[n%g/X?I4"Di%k'TDZG^R7`NgFVfP_IIZYV,ZMM
%Q0(=ug1i&Z9#/I/9:8>cnsd1C\D?`$-p0CFh[2dJNSb^H86[\M6j_5ejP$hE!U(>KF/g@#]=]9oNQo\VP)t.K2[9uDek6$X"b]A-
%F#h;\/^:DL[/KR@-p0CBh[2[GD;Q=(86[bOr(,J;DTg4)[0Mn2YGJD8W!EeJ?SM;;\<91j0OLh5.KdT-(JI"<AgtA'PO#EWc3f!P
%*R6NS*thXQBIDq8%7[1%\G1ZtLVt`tp0p3d@f0)I\CR$P.*=;Y2^VR8^)^,fKPmtB3Dbr/d!j3:MMt1p\(?ia-qY[s7jceueXB0#
%Tc$KoecJ`og6;>/QVgn!`Y+HBJ/"T!ANn[VoI[Q,CJ#'NAJ):&o<C3kim>pr,]cCG!q4?\Wm:B$DKdW\4&D/1d,%Htd!To3.M:KA
%68DW,B*7PHI&bT(89Dn8Z3*Nu"RXN_XOFCMFE7c1>Z$eP4#ERE2(fX"?;km;.#HkFRZA1&I_P43&sBf"/:htY;U)XNKcCheDQbKL
%:m=B;50_-Z%1>ZbQ]TE+AI5_Be"Y5j9j'Ng]r'jUd>s+\GsQrYVKV#I,TN3r0ftN-&jtQ!^K-EFLo_(U\mob)E@$@Rn)jJoqhnfR
%g"1k=aGIhdL;3>/XWXSd=WNHCa5fYJ8dp1;>nrL2!rC+97pdtH:m?[\GMb&rUd"]I;t?S0bFn==?ReY4:==\aG=inj,oQ=qpgZ2W
%jkq@TaansfJ\DA=X=1&B8OjrSON[mh*7/og<)IrD;AQ[$LEWq9U+?A\%tC`1ota.eU&tF!!duHA'kR?^pi>_`VW:$?P!Ru`5M).j
%fV:)6*=0_!ke$BJRZ]b!F;3/oOp=EI#(8`8>ZJp6O1nG4+<X=Mn&Sk98q#c_VW:$?P(DMS;d!8,&Gj0e8^[O_3';Ujr_c\[_i?Q"
%%uTpMM;OXa<gDIbj<Kb$8e(u7$1sea93%sP3ms6T.%4^@rL0>Bqcn8)Vf>LT_-EUN#oIGME:O0r'8\4of^"3h=N1B]RM)-<_;n!n
%(.6p'Le=dA&;,s:E3CuXOgl$VrD!oVKcFL%.Da+B9MQjF1"c#TTNKEh'PqZ=F,e:sU+?FoSe2T^Q9hdU$kJei#=Vc"G!.&m(3DjI
%WXKE,Op=EI#512C*k![A@TD[T&sBeU,QKou*XbV%LKIQf\V+KG+:4^tB8dT6\tI^=$kJei#=Vc"G!@2oQ?5EdXpbOJP.dS8K)2)\
%N_6koJ\B?J/Lc$CP\"5-1h9u)1FQ4giBT`8=-R>%p-<,&?r7^aYd+\hP-P<]=U'%86O&j!6(t^q#8335U+?BCTFhYA]:`81L'LGp
%K;'WD3h[UVMS#P.p'_0=P.dS@!dgUQ%XXU0Z,-n[RZ[nE8Hs<)@u\Ft/h#5:iBT`8=-Q-]5;^5c5;O_=R,L>0nt>2ZbNM-f7ss,(
%I4[.PoBAFqjmAXsZ4Li,^)*-goaDq2dWSDT=U6oPX2<;2QsZlKn=_:JpJdB1:_WK7W5NRdps>86HRd0)TE/4tPdcO=^-coORc83\
%!D*DP5MsUTq?"bY84\(j"XFE,pj=S<Z,Pr;,c&,F!hog6H9N..r8!LG<KOY8hAM'gL?EUqM7lWi<fAq_hAM:nS"3eLDY4*_^,RV9
%MXaG;!D*8J3aYKLqUWa3-,cpWG=LPra]T@<og=8E1GT1JdU#]M;$&X8?OB:!_T9qI`3#VT7cCV_q,/\?)q,fu8:*K'6j_MuHmo`n
%]-9%t&@ZuB)26,.k$*C-h\;I\$#-T@J1(F:RTpf_.faujA53lXSXqc.Ts:$]<YEh^7-6a$g?U11Xand>HnGZ'Aa+(IUog547cCV/
%q,RdL[mT:C6JC`Si((XFVPiEST9i^2?;"RN;%XWt^0pLTE@$=Q21MU>W!j(N?SM;;R&0;=k$3CqF]R^Yno1`dqiJ=N6Jn3Ge6l5_
%L5R^PHq;IZkUZ8F8rO[Qi*'W2Td\*WDp5I)o+/cN60S$2Oon-U"FX_X<0;/lkk:I."%>caI:&"W=g]ST;/!r^P-ofST"Zh,W6;+j
%1h-j6>!NG@hj-LXAb6GBgM9Ck'P.mKAbfhQL;fjU91\3&Op(cer2Da;n&O7hV!L?D(-u;m@tj%eKrYj6bp=WV7<pf<2s!gm)Ae7u
%=Aj=8.#X`Oarfq+//6oF68DW,-.)DI:UM+-MJfUH3Dbr.nCQ`^'cVT[mcG.F\Y:X+^*T\GD64.*.N7,L;f\NZM;U&/+6tg9*8Ojd
%109\dd!+OdNBRE1V5)d\8e)R6Lq''Uo[e"r7rCZ1;(WEe'8\4ooI9TOogk(`l9M4.-79F-@d%lRXrk?lpna4'4ckMj8BbQ<POd<4
%OrBM6JP:8]:*d!\i+M.O&U>n"^RVq."euSs=U9FZr_c8O6^KVU%uRY$qRla&P,.Lk*Q3&tj?ZY+6(aN/<g-l#>`t<k#Y5Tl1\8YE
%P1l.B"B,cO>X6R8I;2Llj]4T#jEXB2ZFut`!^AVnXsiso9:DRW!EfJPEm>D2rP\JOglePq5uEe2T:J3uPk)>\0,,E4a:d^coB2R*
%4-t$le")X,77d]3If<SPb/9OZ:img&9;#)-?`H_He<6]i5uEerT:o1d=g&D5TI!1Wrm!JcI>\#%;sH`91aNZink+b2UH_eEgs+oT
%QYK,&"Cqi28bu([WK100PWUAjq2,)Q\m_)nF#E,h9D-_6T;r9cIPVK^?SLltPdh?Y]hXB@AK5+Sh)q3T_6d9B@MV>ecA5)p8e=@Z
%1;gfF]N8%k8dtDT5n"NLJEch"E:O1]?;68Z%!F`X-l-kHKf3LsF,an;VP5UEH_(f^H^6t^B6<m@.IGYbP\"7S1BM#O(R0A@G7U.j
%?;3j[#512C*k![Ad]_nI/g9W4'T`H*kL3pL8`u1a:H*>$Bs4Ca,_1350j6-lK$peqpRiu&ePqcE@.uGY@S%@MIp7+%'%1)\77dXT
%5<U!OF<Q6ZA\)YKH*=*>/-@u,+Tm(Y61J$"G9A'rePqcG#51;lC1'mT,3YqJG:b94ePqcE?l(Y1?s+9[IrBN9'%1)\79Kce5pI?b
%G!Y@_GP@aZmF>1#A5FZ'"&a+T'XqYb!sr\FVP5UCH_D#]H^R1a-[>BY.IGYbP[mTL1tG2Kmt0QfnErP.g8h2$MnjdTKYr7N;#2p'
%4_RH72&6)2fVVXCm.F^1J#tE(obgN=@!3`6-&+<o^/gWRq?/0Q0KG9*&jr-H\\du5RpX=oE:O0r'8]j#Dqo`B0X:9W:;1+V,&nn5
%2fD_Ck,lS!@Q.P>_<=6`(.&s"?YW7aFkq\Ij?ZY/6(9i@C/!uBL'LGpK;'WD2KCu^R9\se@nFdnJ0]\(F$A0Cf_fi4$-?F;c2heG
%UagGdT,L\oRKElL?;VJhRl[0W9Ib/??;kqg+A8AeSQoUS:CJjth1MTc5uEe2Rld5m9Ib,>?;kqg+A8@:T$R'Uofg9GVW:$?P!PR"
%TBf-"Ent&#F<D]!TT,NreKks@mQjeBTI@ptc(7m>eggk<\F*Bq[(eC,:E)K)l:NOEh1MTc5uCr;ERX)\>tM`UE%EFu&<J3b`m:!O
%P)<K<TIG._oHRl1e#_j#]q<o+^YG9GJZ5LT-XSPfOgl#k?`uuLHPs<J$I`tb"d9UV=U]enmSUN_).KQ;)=B@o-PBKikj.mQF"cU?
%>@AFF^0kt*0oMa/f0/?2Qs4I1cZ$$Aq,!<0d+@S)P5:SAWN(%NRZ[nE=U';fmK)b[h,;k$mQjeBTI@pTYLb?I[58=j<GCS.P.?)g
%JA,@!=SItrWJXS0Q]TDp,Q[i9\rZPkcn0D/dlhA:*Y`0'o_#d#]U*_5<LC?"$-?LN'#@qY><#L./TpO2>t`<]'P/0Sot&>>Ni#aV
%/DYl1A?RE-%/P;+VoHEK>O'ql>t`<]'P/0Sot&>VQZYr$S@Se/a^.g[6!pgB\9hYneCCOFd$-X@8i$2-FUKUT];97k\cW8\?;VJ(
%?a"f9l=W/S$I_.O8feZm)>s0=YEASMDQ/LmG9A'^/'9("lZE_.rCj+gA%Dn>ab-<0)>E`brq]?CafS>u,"?$b,&no`3hiem-FH%<
%K:qY"S4HnAToLO&R,6'b;XV7?"@Z'2Ahi'QIB>3&oiW:<FiWQ2i^sW&7&psl<apP=n*(3L+,[?8lA31(R/4$7:!&$^/;$!X0/Y*L
%53W'G4!bDpOppW35$"(Y%XO;&*!f(JW$D.@B2\>bNdduOR1%(rTT1F#R9TX>OQS_taS(Ls#jd@2f9lE--V`!>J1Q74U0M-X:Q-sI
%4D@D/'I=XH&Ugf9jY9P<-oqp$,u@,(\\@.]-QW/-VrU-@P!L,9kPA'to(7X1!s)O+F[TT:97=aBVW:$?P(=WN.PC$%66G\B.GEYs
%LSp0r93nM-GLD^<.*=%dG!mG<9(%,uO\[h\#6M16lA3/RQ25/A:!&$^8]Lf*qqqCjs8"DKrEoQs+9)$1YQ+M"rh"]:QiHgC^Lm2s
%o)JIY^E%h'j+$psO8nh?J,?^is6W%Ks#9lOLVNkk:M"$#%Y+=mh2X?m-M\b[0i\g6H8c_mq+q%d^]4()J,e93VOF3NQ9R`_<iesj
%LG[4lg:Ce]O+9G#;kj,&s/`h:TE"3S0%lC/Pge/X9d7/Yahnd.c"loN5HW\m%7_mV'[)F0\m105RUdLMWW3o3h)_I'50I8)$*pG+
%A\Y,.Wo:1Z-2DjG?h<l"PGh8CL//T5>YV5Z8[<cd8j>7=8lU-%#r6>m+gCANb3SaVIt@KYDO^WhXQ>huAP,`P%?HaJ_K,%tB75Ak
%an8c9a^reZjg=MjQkm`V^D?E?60*B6rrUUGo1C`dJZ.dRIHO0X*+HKfqCP]e)FE/D49tHj,2k;!o6BqeQ?:16.?$OVC9?fLWD9MG
%P&:rTP0tXp_>1;LD,5)/M@F8HUq?D#K?i^5Fe(_RbUAi2jfr&D@oI^BgJ]]-@<rG'k4)qEmC=\g-cq,8&3?t^2Pk](N-UEkQ7bG;
%/sgFtlT1lT.Q36">4gG$k`c:]p&1WDR\"uG<M#4t>(4s#O_j5G%uAR!1aY6I?C3TD=)kfXb/a,YE(n<Fd'0=nPo&./:ZD%g2iO_6
%>sHpehj)[!k+ApAh!u9fVEl<#+)n$&/I>9fR*r@6kE!Ad9.srV2ZCfO?GjK2>grR?H19&RqW'3_;1>d]hIk:-YUn6G8/bmNPkWIP
%9CjI3H\u\9c/a2+::"LnP'_c.1-UXu%q=piL_NOUFP5i/k45jG5\Ur0IUsqBPcX[>a?(<$DB5pP=Lqkf3]ouuQK3%k%6CJI><dn]
%/%DFp`A[i;%$(FQK!\#%:S2@?>3A>l3Sd)KdJ^lY9H;JrVM&`6]_WSiR+@^9d;[B4ZFlL#R?s5#6*apd49*PS5>1/:?rJabK#=$&
%6V>U9-3uL\klsAp?(*-GH:4Ua55iBh(6XP-q3%q$>YCZ:''@f)ICB_f;qtg*bBeKG/=V%g@l.JB1_kq!UaE5"T62HJcOBE([uZ0*
%rq$Io.-5PHfAa]&,@;7@L7EQS1-b_YRb8UVLXNQSj[f,f7uZ^4f.]ceQdbr`9I^=.os<=#Xe3<*%A*K2s+F!5_,LX&0J?F)l!a6T
%HL]\:>pNir-&kFZlh%`k[#X$WH6/%,-g^hY/o-c=]#-.2.K\%8d17-*A(!1U+8&.8Ie0"UBt/NlI4!^2f":S$ab<GmXf(KqG,4fF
%TC]BOc'g(U)hq:[X2FUOnrY9;53-L^@(N@J)Z#5cEj=M#q5,!&raS`Jm^C?&V&/Xc1[62:H./;?rpF=`e#cT<->=Vrb<rj7''?5X
%bh!lFVs!J'Y*4T]._OBn>))cn#H"Dp5f9+a[@`;_k@`JXBU5gXEilQmnrb%`UI+49,!?^ag-=_Td^!YujE8$e%uF9T:[-\$Z$\:h
%or<$*4Np"RcO\[9Pj/:1]EDPVluo2tp;<26\lJr$j)s\4(J?9u[!mSDOWV2:n\/jcn%u!pm*ffRhG+KV\,V]alfes62^uYbE,Bg/
%^[_5L?F:j3ZfX*MPcJ%@Vks0uI]#e6_lNCpn:tD_!V`X)%d"CYq4!I0^YmAI8D6upa7KnA$GY)dl86c21#NSY.:;l/$LHmfLA@;W
%Y=ci!/IgIB?,qk,LHec&VId$^?;TknM!"0X-bV@uh[e/i<a)r`91Z'OdZUm>r#qHRYM74Xh-@fNJ'H'#0'Y/t/)QG\J:D,iVi#%f
%"9'Fe29:%8XMS4/0Rjc,kla]7OWGNaDI.4k@N-sXC#4nr7N21jR%DK2=m<e.688GiD*+Rd@JX*'7;_7l%5Ljg\itV%^9A\ekoFX.
%YGXl-9*j+PRH_3Y`mA(2RSthprqb"6atS5NRR2L[Y5,K-<:Ad3;t0:Z-=,,<mY=t?H@qg<j02EkPiB7Z9q0Y.Q#b#cjK'\.J9f[S
%0a9),gM>N=-*QQC5M'*8oO,F>-`;>\b_)ceC/V&#Bc3&#,JTsJF!\gTKf')J[U#]98u:gU:/!,^qc(g>M)!-h`&q_eT]R)GDTSHR
%EQmmm_rkHM9LF$jWFg;JK.su0%/Y.sAo94ER/^p?95arIdJagbBe65;^!rjELfCefr'<=7q2''U2/Y#iR(oWrcYor?Ik.R/?b3M[
%kPs\9m#h^>U]7DJBnib1k82Sn?)T4(Pn&9LVIsIci<+--_u+?[>HX'b4N6p(ep_HJg2[]_s,,oW95hRnrXAtNOIg;lQ]X'??4PH7
%c#:E`;C/fLFY--fcu\O9@qY3;$O%#6-Wl(Go,Yd/ho9l?62rE56gdHGM+V\6df_A<Jts:m?#Q^f*qmpT%M^sFTh]th7W?H2hXb1`
%*#+fSABN`7!=rLrm1eUZ9oeAk.%!"bktQ*<ml-Ak,jf[%!_KR9j0Gt@J0m(.NPl,3fA0Y'>_.MO'9,\rHT'fuX0J4)]YDTd?MKPS
%8lGX'@T^]M^nUE*XVGW6Yth9A(g09[pPsmh76lZB`WA"l.A,,S&_4'H00TSKF`?>U80PA8UqBF4+Uho*O!OqnTp'gE]_E0H&tHI0
%0FV(=#;?=j&Y<ai/^"[$asXqM-IrDL^5AQbLG%)5NPtpYf\Lm`>_3V&MK["`\c'-qY=<_n&N<E:9N001n-#uZjOkhfK+OXuTHe%]
%kQhG;h-.(LS&Xm'.K:T5IDc_A\&"F46#<84Ta<Vo?(\SX!a3*OR'8-_D2DsFG_R(=%8L.X(^;hs5to15N2IS=b7p^^g&:<;nMq0!
%V@"bkkX(j8@%?/Bh7ol-2)m=eBP5Q&)fPi.peER+QDZk-ae,i0'n6VsZ%k1D#\YuGfLUV0Gf.:-,r@S9V.aMc]c1nkebDlok,-+R
%&nUA=GQM!#d^l2^K+M6J:ku59W$<F<FDJj!VO,WNTc8`_HJ0<k`PRJ8.>?,X1`kJ=J"-S'IfuOerO@!lDW/RU?t]gT;UI1kq%$pQ
%DIYfZ^mcYg,V*bO92/(]-U(TsJO:4l`!-kX`pE[f26J)n;+c#Ogq*S':lXoX@r@cHQmeS&i@1E+V>2BFMibFdVJ`$0Xo!'Q'aV:@
%'>I0JiS/_GQ@@WY5Kc9>chNSCN`:'q#N+AB6UMEKMM@h^r!+qc[kXIhi%<8Y8sVX'4>m*h$t>8k;W,oU3q:$'TeW&:8<%<h;O!?8
%WH[e8>X10\;iJ7u)8JAR'XXs[1j.fa)$C(!R6bX7:2ml6hm;;\JeY%lBBn<b!>eRlmhB8L=p?BP53'OZ5SHaG?G[I$p1-Q3r`DT0
%%Pab^/,&G"?:.?HH@9E1[s!=Aq`F=N;@$"#@HkeE57#?[*V5#hMo1og:QDEC?3Pob-`.UFN4F-7/ta-?.E:.bgL-c8%LGo2Mbq-)
%,]"%O(ER\:*<J8'6:eRdX?hOnjaI+3E#eWjAh]f260qHZKUuWJfC*:fhJ_7S]1r&/l^(RBc5T!c%"\[2/encsRf=M-iAS\S%D688
%;6oNmpXJs`#\%k/'KC3.:4+`jE6Rb-;r\ddQr::Ik2$QWJ80J0(j!kV%.iQ+&'p+t@tN@.#R(>fR6bX76"%@ahm*k5S=!3]1ZmO'
%\:A=AV\jL(@RQ'YFU(#0/4+(,dBM`Pp=V.^M7?O.5_1U`SbR"RKU78(gSPE,rK6gTm82OYHe5Ga2iWd,J,i"b=ueCj0c#[r)r7KJ
%gp@&hRXF[/;IY5=nTg'#*5[IH*^R%8V1(LXd^]6M=%j2R5*J6G5Z$PS'PgS22_7Soq`R%B`/njh@=o,<I\I=%pnA7NFrS<9=.lu@
%bjOWk8`+d>4>[fe`IZ:2!cSbn;`E1OYkdmLEJ@!YdH<//pd&^IJibZ?@-,U;40[Z9\5"d0L22J,nZ*7>JeaDmK`l-%@%siATY+)>
%o.1(oWA]8CBOB4D!55GG"Xj?L+(35Mo17KR=N#Aj!l<$I\TUeYf:tCG8/j/l-H@_B\-Z1m_R34=6%Fm=gIMR@5K4n(%P6'4i8rYc
%m[tX_[ep1"$s),O2p\UJI>iI@!(A&73A]7s/9j=\;iJ-G!^V/1@Y>\5-5*J95lV;pgXmP$`]ld/6NQN#olN"F!*K3rmT>fnbFbus
%h-nM\@=WBh%H-')^H0LZ\-9t.f-e'idf44V_EU.%Mr5(=+]p`\f+'?V4g%_B[Gg+QHMg*_Rp\Z1?64Y9"INm"/dX1m1!a<ZP%k)D
%JWe&^hV`^UWb_Y,+WS_^]_+?l+Cc#=JLL^PBBIp!"g>shMQo'E+A@i%$ucl]LkMh&:kJ`a4`j&?'qu(8=Cfg1V7HZ>5]cpXG(T%B
%C=4DX$5R#BbKJ*caI!2C:_]Xh1NVs!K%K$D`E7Vr?SN?ZgUR48pMScacO4%XUgY-=O_sFifpE;u\3=moel7SMT4`3?(aa`>0s(>O
%-CEu$1@=[fe;[Se<F3gDF131G;8-KqDs=5VDV#+A@6*NBE=QUFIueVdOEm>d[e7dKWqt<4.j$]EGMp27.#l'W'J&&2I;5AUR^]Y/
%Ug&%Ue"L"?D'YE"r)g+Z]?=Q(Q#eCuh3+p[4g$V;Qf7f'3ERcZpR*X%qTm/:Li>:qla$)882npq^((L97PS/?gR>`7DtG\Qg6fMM
%l!QZYGtPREcALfTqE"HXDDB,g(46"m@a3ea073[rFIC9a*b2ct;]k?2=T6AcQ"D+M[YfY'Y;N-M`dSgRdU3J@^f5D[`PD3!)OC;P
%ic.Q2>Op7,[\+^17s^V0^D_j'@W)$X!VUn2"iaBURP&XV7O)^a$eo$(f[>]LhQN`k(i%,":&.aDC_[?4?Yd^jgU&N-_&-q>Qi+fH
%a-/&jJ$1#FU1ZE\`@D?SUkuS22kOPeqeHX2re-bZLOr>gDD+]Vh'ZVJs&t!rD"&60K[UDN%f'4]EX/JB50iss7g[T@(?d^BqYX(V
%k:aANB-dBYm.3O8Z$dDY\_m!U&RQZNY]04/)\p8P^Ta>$KeWq%5BgFg0+_.5*e0q/nt2L?rUibfq(Ig_b+-dV>-#go@@7($aS:&Q
%mjuC"#tZIJ4fQ330`ShJC$hd<qG"mb84'2iO#@#[$,c]86KU;#+$-_>K.J:?_,a8]`PD9C1/dKpQgY)&U-XqsJ'*R.VLi4THQd/g
%:URo:%?cf!4]60AV1`7UHQdR6$jhKkAjBZ$Kr)L6,m<fD+o/p/qGoIE6;diuhsO)G_u06qEj+kRWu<6,q=?iJW]&'I%.i*FV_PZB
%f6i6?/r`s0;mQ5KQLT%[?_Ie&VsNSO$pa%dj&i`TkJu.f\o5%'d=[8OiNq&Yd#q0Vh2AB?.28U$.[nK1B`nHI;X3eD1(1k??$bVg
%0dTohp9(#B.j).%T@4)JjeE`3WA>B3K@lQMd+CKH,fsU#EkQ#L1h$G?+n\r5R=X8VD+_dq4CC36a26pKl.>TY,\;)aR&,JuoKp49
%X95C--?K\)&<%]_=JA&Q+P0;q:*U#eP>[J9PZdcemdf,hYh-G_S3O\`U=/@Gr`50&1"<Zrd*N0A7cfG\D_WG1/gQN/-<$fS"-=t2
%7siAu1p1q1H;tsJHDN,+(SO+.=qt#=F@3O>f+\>:YFe&5)Q<,%QoQ4`:m?R1BI6r]&Hn1eWQ0A./2XMOPWN5],#Q&c"gS;iA/G`c
%6#94aB^?c_P2nA"\R)Ra)DM5[OF""+bWt2\#C1s``KC@^:`s,I5R1+!9^!B1+;d<GYsa/-5d$MkSOO/U-D_dP.C7C2dS]F[JVceJ
%.YOV!<[>RskQPLlE^[gS(m--]'$(fOWRHY(aHY2L4_5,W<k@')gm5'Gl&<J'"NXUo6bLiAq-Y'mrheI8mqM<]nhET)=KQ[7;$s%l
%R;AE`&3qS=*q(Pad'hABmVI`27+jm0W%;%%_dLOp@Uh/[A+otc,aT+aoocH+L]PSMe71XQ#23*=bZcVOStoJA!82+@3e3Z,6J&FA
%_>#10,mpFNEm8.\1kG]_.J7p]R>&)7NcSh@$m_jS6:A!,MIeaV]msouNbJ2',LYX>!kDbqFW)t7R?Dm'Vp%He8se,Lr4?:CdM7Xt
%:`s,I$E@.<gaV@E07U(11$R0[^,G@eN'^AJU*?"ASU(\e-DV^M.<EkGc;E_OJVc5Z1).fq/!=<pj9@&#1-d(.s,eL,&]j'sX]#`2
%`+7@B4luGX=#n>?/1m/3=F^JK8d.8+RUAJ6GFCg*oFSpg"A/a+A?p@C0n>XQHF0To6/rkRRId7$dU_YSP-RiF%&]d8:`5K2)SCc[
%,e8q#/so>'H3bXjUE8_M1XNSINVU'\qPCSb=F5YP)H@'HDI`Yj9jI2L6\MMShRN?X)[oRll9J>@P-*1=!m%0:@m*fng/^/TROp%P
%,?oMHPU22$(^m$'Cc"UpeF#NKiu/!0<jHid0`[W'C7M1?I+udJ)2mUpne5e6&6kVh!^MrABW-6&3-#:5.0:N@>VFbkN?EaF8i>0u
%-(o*TUTE-X&ihEL%YAJ%+pAHD.A3C"ipjf966sWP"ELn\l82rM1*tIA:Gr'i'lE<gXo*#u=@rq>"XfD89EeFsg<^kpnV>4g[ID2^
%iO3kJc6t/.<$[[0dg-#R.&f^`arE7@C6U_c;BeiLn-$$#MI[QG[/ibbhXS\CJ#(.c"EM%`lSN&N.QZjWSoXagEtknae&,&tEsP@*
%CEN^mO\95d>#73R#[p:+*J%HLR6$<EJ;TG7XJa9-gH6Lb1e4]38h`>c_AiVfPKaZbdig:ngJ"G56=\Psb$-d`g3\oJ;$s%lR;AE`
%&3qS=*q(Paco+f_G;_r6;)XU<Po7Ut%#3O[,Ia:illI:4j>$eI?F"\l0`[W'HE=$g5[+tTH&K_X-RjoU5ZUUP%\P/9crbF`E;U9c
%&d;/7\Rr-i)F4@kP^:!?bX1&Fa18PL"VOfN+X5NI`A3s<?9i#NJ`>WmN(B-?$06uce7li$A4l.7Sh^P1/)?TmE7e$kFG8]u'Za@V
%JuY)Rm.ui;QXT*TO\O:c^NoM?0a^>qLl,`KFm:\hBI9Mrm4!,'\B[t6I"@,2q(`Z*Q7J+1d,Z,8+W6r8]DkEaWsId,ak!GHJ74k)
%HDIGYJ)`!`=bEQi;?RA(+CD*5#LQ0uTJ@u>0RAO`B`]T3>Vatnob]A>'2jnbPW<D^j!\u_Zp^@!rBX?4.?X_]oK)P/3MF8nLe*]p
%#ipTZe>\4RJXMOEXJa9-gH83mgK%,!!auiJ.?gk6R\P`44-_Am:\X3#cJ#qUGk>@/gjPlp+cpIc>Gi&8#%^-$ELpq7D0$CH()+UV
%'=0'BbqbAGn<+.""p>3$%O!AlTHfQa-!R8Z"9rI9Wj/-F!H%FlZ=_Q0E`AnGJnp+'!e@/t;2iO-%GW-qJm:_e=%fDc,6eS"PZ/kj
%eaV=nO-K1JHijDqI%sLU!4!6S&6Bs1If>iOU*9!<BA:`S3N]<B!`95b+rCb07K=9maf*7+ap^,0Bp:P`:a/KFliaWUM.?`G\OL%%
%7W@SZh_X=;S@DZXF;Y!c:aVnXk:&pY\>hj??obIp_4hUa=!u?\oF_SRL'8u[%l$\B5_p'iN.qfe!"@(^e71XQ"rc)Nb*t%5OX+.T
%OHfEpA,nL#NabtJE:ap_F6#*H\6QC^)#drGVP5-r.EC>QZDDnjhldR7@QcF_CCZH31`;ue/Upfd^Yo<Ys1T';SW5#,*37YQ6-t/C
%P"LH5_gdWd1fRsIe\I[*1X9$(8K]s'[/k<M8Z]^qkq!s3;?.0YHq.KoILq]7L'GPDN5cQ2j#beaRoV8fPcl+!(LLO"P[t+H+M<pC
%Z-`]*6&0s59kXfA;T[9npl?#TL2)[F)L0`b`Ru_V#3=oM<X='g+'&s"KGo]`(niZ#pQ6=l&B'6bS\]7ej"Ukj#Z!>E[M:;E&G^,m
%?Ejij'd\Yf4GE9^Q2`<IeSFuaJ9(\RkgSkQ;XG_b#TAe0;T[9npl?#TL2)[F)L1"!KP\UIYh[/Z$"D?i,Tn*%IE4nl"9onG/N9@H
%Le/m[KAf$a2"9fD9<DUV4JZfH/;W)GM1XZS:8B#j_!aQC(aCm"i]],-$A+XAZ83?c@lsk.-F(u+2U0-&s&ICMqC'TrbS)+13Z4W:
%\E?)&]jRCms&e#D[D]da+$7n51^G"]>Z/\j@/,cpR>,I8V]'eYjhTP!:N"6JH+F*gC&h;mb]FU36RdNiCq_,I(-dVs,X[4C5"9#h
%WpuWpcqQ#+B$+0_c\ntT5g$rr&eJAAK@jjh^nAT[jX)ee0r\\s0`8tI9LC\W;[pBR`St^!o`B/T/L^fd$P+`nBL7]s@#WI"Mu1SS
%.0sBLaj+;(O7ATjC4rK'G2%n>rrCM+<\%4%YbD9*Kr5JgZ,UmL;h;1ah/`/_P-juJQ#*Js2[2PMP"R8B)@ZX#,1BAJnPfU/>HoS\
%[UMXBCfLd>efI`Ib]FU36RdNiCq_,I(-dVs,X[4C5"9#hWpuWpctt9KA1CUfb=eob6#>K\#m`2\6#8AD@*mliEYB@CQrGgt)#e#5
%VP+pgW<V4f@SsRM]nkI.,mD,mn;r6P-IbQp`X%R7\<"k$JflD)ljSXG(lq7e7X1qA2m$1d^?tft4(BsF'HguG0g[DA[\]Zq.CS>&
%#>T-,D+UpA>P39/6-t/CP"LH5_nV>\:lY!E")hAJ3*Tt5JD?Ah"j"+FY_'_YB)s`O!bfC347ZkNK:#=f1`5Y?KS!rdV]'[+MM7Jh
%e\^q;.ghBDn=YGbVDO*g-3t#@r*+&*6P,GRL'GQ1OjHpanPfU/RtXemk@=:3()@1^,`#0l6?j9+h/k3Xm<'AZQ!4u-h]6^5c$t;;
%!QcXQ$k7r@,GCeLj/E7>2@Cs<2@C]f2H,3lq*YPs$_7I>:^WirS+"FV`=HE5aj=G*2\HItnXXFA:&!2Lk9Ek"[ONi2H@U$S'L;EB
%RdPX-4P-uFq6erePGEQJ+:(5QaWs6+iSR1>i:3@IbY<9qjf)M385$MU!NmAoJeo+.$]%(_5XRETOV%sB`$CM>_/O<<'_'aM1#B?c
%C$N_9pWrYI.M/b,&A'M$iVP&UQSU4)G*k"G56!XtqL0n*1a'?)P+f_]D^7/=@m&;WS$KGt%-LbffeOD>!E',=KX/"%q(+W*YL`?m
%gFL^uA+a8_6'-WX;G)ZEc+ajW:lXsD_f!Xt9(9JpbEP:09Fr.a+e5U<>8FdNQZV?bZ'e-)g<G+uTE3.\Pmdb4]V'h1C5f&/GZ2'5
%oK(B$/V_,O/-3nL$_U2<>IX;>G!tN$gZ_Rs^_!frH%?MKaeb./!uCV8633/8'I.M=daV"7;QWt(@44EX`.`0-de2\c2WkbCkUoM=
%m&Sa,_E\-P9.*mH1Z(YGIPni<%D!uee)&@FnC#'j^]o8oVJCK_kKSRgKON`A"_u.*oWke9Va!lPDCih9UBaN26c6nf<`=2@YS`!,
%ea552ck>)5:ePW&5qtVJ/pPaM8W@Qh@5YJdL"//Z\F)Z3QKtn!l!C!G<ITAfj7i*flGL=?9k_UT-dID9WMf\+kVJ-KcJ>(`Ie4_J
%1ER3gBe^Q">;1XCMGbFJB!`$45m"T]gNZM^KjWporQ!B7e>^V5J5/2f.=Z<!VD4es5O51-F\X0(NZrV+.!6RV;WgpZR:J'1(a4ik
%NbYYn9#.X9[caCc`h?"/U;sV\R%lg:N1Xl36H;8AQ&M@g2is(L&<8o*G`G)tU8"&lSOO/\+f-7K.C8NUffJ8jpQm@RC]4F3,Mc_!
%;dPN9:p*7M>"?r,,*$+V3MIDS6"4T?PX)C>Cn4$,7j4]MmjYTi[aM"%30%FK<]["[#Q_6]aq1auq="4AF*nS]5J&mNK[L97QYN3E
%&;:r-_-e,,"5ptPN8%H1R=V58NmhT5$foAE+@*A5ES>qHg)NQ8*+@P`L8W:M3&/*[B.ViYW(]Q9c;P1dD2"aLq6CY/n\p:1[7ZPi
%Ud]/D+&a:!HGm#jKb,@q0H*!2!&-*j;31C7)/*71-uZhq7$;rV!G!\phsisKC,h(Wj9R-%a7/og6CbPn1isQ8?sk=V*pY72d($C+
%h2q[->.(XNMQ9Jp?_%P(<jjIWECBZlnm?@H-CU_%2P1N,Y#_tt;2M'0N4)#880CiO)so(qd'gA[id==S/GZjjaO_e3S5W4RP=V2g
%8t<qX`4;$rVO1$d7L14kUDiBrL>TMP@FAU^nI3CZK;bkJ-mP[i%H8T>KHlNpStSu4W(87>V\-k0/#c$carE7@Dj\(;<]j*]p&sqD
%MXGeg5!,:Q'QQT_c""\fF<uKC1>+^J+HB\u4k`isTP]D+Im@eTIJpm_(kpKFO=aCcG_KA1DOacXns8'haaO7Bh3e47*\VM&;2V-q
%N4)#880F7>)t,5^d'Uf4l>1$_4PBQ5a;-7#S^U-#UI^q#8t?3De@Cf/-CIO:7L164UDiHt'%")0;;-D7M&c<u7-IgS84HFB)p$&6
%#fduP4@^Ou;:/(G:*YRiOA_/6PZ_[(k9tPg\jW9?%0C'u(#Sg^@u<7'M<'J)S-OnMku%SnB!QOt5obTCHG$0"6K:ZsVLR7LHDN,+
%(SO+.=qt#=F@/!h42$e0I5bFZ)`u2l(iUDUC8E]n;?FC@ZAjukO?bG[2VqAETl$X$eG8YJH1FBPOKV]L3iA*$8!,i"S2q#ZWA>uR
%MI\WQEC:'WTq`OlW=mRfdUCj=H1;ln,(unr<[]2kb73NBE^XF3+H[n86KlkA[Q]i[i[CVPj#prh)HSuD>q@Y#W*"]Sq.`?B^=/Gn
%Naa1MiYcAp?tu,E5c0rdI3]EC;+R\,HcdnHX`X0gc+2ZN/"KOBKECsa<=l?Uo?tlR:TpnlkE""gMf,-7XZ"]=3MS"A;.rGRTH5A?
%9=^&VPZ_['kr<h"]L8?=&IRU"'rB2iUs;i5c4QnuK1,!08g'<kV?S8uOjHsboi)62>NmPQZ+P=A@M(q+<\'CHeE$o*0a5G!7hF!D
%83p33PHE:>i[CVPj#prhg/^8W>q@Y#W*"]Sq.`?B^=/GnNaa1mU)E,[@VWK=5d$MkSOO/\+f-7K.C7C2de2F"re;OJ088C0'Za@V
%Jp=,]no*\9'n=]h/_ltn^J*T@i_OI%P!CXfCkGoM+>2_5g/I.,D4RH?q;N#ing,]GY>pfHUQ@H*SiA*^3/[fo1F7R/@Q$+-&Ia>M
%C8@aGIcDo58W0Fa1DC3.U9[[j%&Y7-O:<WENne,4L0P%Y9/>6_ob^Fj83P[*k+H^R_p$*:ib=;3-]kN1FOqIcl/B_HO;"'u('>n[
%.03tBg"*.CE"YM&d@N)uD(FBuGM?7"!)XlA4\gBa\k'6?jo&PYSSj"uDS<d4#aE!a^JJ/eDhXnq8"g`9K6iVE/u9WTW=mRb\l$n'
%8b!Mj]&U`\-VTuH8=H;ERNkFnLPVb:N^+qX9FXGs,GBb1H&Al9bth#89F=EgbT%uo_sigLN(`IbD?*1KVg+$-V-HM5f1WPI,D`+V
%;N:?K$##ftj5016@E"GZ-qkXH2TH6rr3X4XNG._Qd_p:8jM+ktn*i)i;B1C&Zjl:d!kFQMGYa`]VA[OUZ`*tNZ3^ZTAf@SmBr'$O
%Us9RKc@\OM>Y6-&9Vr"=KTXVYNV-6WBUboa2P2+S,G.GUCqfGiEuLCu;;;S?kcXFuEI56\5d$MkSOO/\+f-7K.C7A\>K?0Q9p]V'
%(5`bSOO(FgWnD-:(a)@%`<LVu%nBAhrEI!5:_LhqPAL`HK*3qU\'^d&#AnOI''BoRZK0I_OO#jXS5W4RP=V2e:7T:R`0h6'75::c
%0Hu/^QVib7<5WXEWL1&[*hK'm7"K`odC"&\f@W[M#_r,7Yo%FqR1_b3R;I?p&]Be^WCM<X*43u>@I*dF1>mFm'^&:8T54]$4<;k@
%dLQHYLJ-6c2O^DOlhsUZ7Z]r6MPJOW[R!&I+I@*fmjYTi1fHDW5!L5e5)TL<FJI>GNRTtGe2a8QH&tRf9*o-laja^O0G6FHZ(<EG
%D0(uj(,NmM'_<`7:H5q3:?+)kMOVEoh)-6!DD.=ha>K0`dg4q]Ut"EfAJQ1sld1Xeos^BlL#PK-j>3s3C:<il3)3F(kG'P"2osD'
%V+C:Y&YgHpOD?2tTH5?_k>H3X4_5D_Ah0_'Vb#mj-W2(ZEKiM^OZGjk3_,Dq$Nd:`.=d:d2Dl<pCh067)XF@8co>5aD)"IA7kp,-
%q2D)Lk;4ft+h/C0d9U6Ji:\oTJ4qcR3fP7G\<'ULpQSfoS#q+)D',"_'Ia_D;BVTO"n?ErkAIBT8,^qsV8;,(m&'^:>r>go74F6`
%1YN'++G!e?D7ldj6ITc4eG0f84S_APj>2fok;6*"-rT5a;Wg=iFY4u%8L@Ag&].*&W5a.`"LQES8m=t$cV[B35X+5ll8ajIlmQ`U
%7s*@-OLVu/8g)_Z[SA''UQAB7pQSfoR]XWXc1udT-EFtM7R5+<1I<njaIg1E+6hFh)(2R-AkS=Ec;&Nd:0]1c3\9.dh`ZEO^/GKP
%ASuO_b'\`HPXttQ9J0))_+9e&99fB:--EkjU.dk7U6FpN1Z.;$,<1bO']X&!M3K9tq]dCF7=^W%`0\SR>YQGd^$X_AVD.IYn!J\L
%-BnoJRWnZ'LgQ/1<.f(XG>kteeSiTa_7X_pZf_BPkJmE'0ts>&6ar:dKom'X)64i`%"\I,/e\[7\pl*1Tc2f;`nWE:0MQ`6HWFr`
%33]rGBegH<1(n:V6>84DOX:_QUo5QN_SUX#+b7RUhM9iDk9*3B_coTX:,oJGK@e.G>X]lWV2`h2@G^%Y0`aR6-5d^1s$f<WO7*cm
%DOPQl]#a[fQ):(fQk_m/j=s!-DI:"uRIEpl?b1BVBAGaqlS_g/TbmnA:0]7e3ctBs>XLZo;[pBNhJojDI1N;+Es"t$6C]TZOXq`>
%/0gB1o,l(0%7,kLZ7@K=(D$XmI&@g&e*Nhtg"d`aYo*V=9I.>O#31RZM5tNID@Z7[pQ0(p@T(=p@/)Yn)QGN`C>`rME9R"8WdZ!D
%#]h8I9r11$%ee_u*LlH[[XH,-iO5Yc<L]oo$O%#6-X&NOh`_s>?]XYTK5R--PUO0<,:tf<K%MoS6lCqO'`s4IJr(uF,>glqJ4h4,
%'bm7_:a.l[m1eStRsUMJ^[F<34u\)G'V`c]0Wo"2E5dgpI8Se?bu5;Z-p#Jm=ST>P7/UeIV]'[+]LuBkk,%pb_]VX3+?"WTTm;u#
%HJmZ'QA/`"!_12t(lmm:%YLFjM+^9)L[O&VCT,9uWe%Y'4\h=!q2lSb*'nBJ;6gU"ZA_2WN)6h(IjE2o"=ZsbY-@D%5R?<<SRTf;
%o8aOGGJC&p-V+f<7WbU<`YC?D=5=/<*9KKR+k%"@UlqFfn8BR/<+A&@^t\!Zht?;9I0=<sk"$&Q8qkV3b\%PrXh!k*?hsal[]Z6X
%lGj9bTcf-t,t!IUhap[AO7-&#DOQ'>.(f3u/N,hFfJK<j($LL[Iucu8TgTXaOJnlRaJG*f$4H;+=EknA.E:+#pFo0fhg7tCD?R3n
%7$jl<^R"T^EOCeQ9i8R@]i,UF.72_7@/)Zi$EEWeC=#]H/q:0u-8j+2K.o*5fE<[WkM=VsgfmA0L=-Mb1?:NoqA@[(BQ2s/dEnTa
%GN'P+0qN.</TZu:ATrU!`b%^PRm`JlK97]0OXq`A/Fst*1(?O,;R.f(]GD+\G^QD+F4:&^7/>[-C%3&R`$Q+&.YD_0NPngU68s\q
%O*er)">QldBJB?'#n>E%:GqX=3OnG31^qp<$jL4%!%Cjg#gL3`%JNJmF=h8eQEGb#V&T0*qOPGFBQ2s/dEnTaGN'P+0qN.</T[#;
%<UP?-9pm4kb#IA2)2r)DM.@KtA=<HgQ>$V&P`f<\iOsaQ^uIMqR%*4\--GZU8;k_)+D!%mV(rlhe4<he,BS!os1!hX6P,GRL'GQ1
%OjHpanPfU/b?"Jsr:a5O>6VlWK%Q_(iG8tZ`:(_A'4b;2k+eFCXa420(_V?5V/0i9h7\A9:lXsD_f!WI]QVK(>$'%i;rA2&WE[B;
%S;HRo&r(\LAr8_ngg9HG-nlDp+LW5`&Dfs?HOSH('=e]0oX&NkpFF7trpnDakQp6qaYp(&M1N4%HE=#:5gqUu8t'U&L_SPAL*3o8
%Js,7MP3-De7a`8Rdem5!8=CXd)Q:_g;hG\!7MRt/S>R3NgII$d0`NCP4Q/#r7I(K;CYBuOG;5a)he7R=i`&hblLpZ)8BFB?9`)4'
%kPP2B0;b0c]uOBIVCq__FR5<B]Y]7*9uB>VRN[C=p0(1aXCb!pf_2"rX!r:,:c#$"G:<cp7pMgjB$0:dcZL!["V2&WVPW%fUX"kH
%8kiKZf=oPI(E+>5e-tSRS(>,JA!GO9>IW<pi8Ht#nBdi*:K>EG*0hG;Q("[&IqAp+8/V'8f5dtKIZuLD4K(PDEfAhGs-tA=eM,2d
%KFD-94gmsRJKuN>n$#b7'a*LRbLk9:=F0.>)$WZ%rkhp[?;21A_>O$od_fdiVeZ2JA0H"QD0)*ml'\kpo>8k&8f0bLeX?=42e[T@
%EL8lN5F#"/1b@cRb%Hp"jldI1Tu5@+mJ5(QE(gG[r($R!&i/q3]WE[lad$c>UTG)+5r8O<521b7W?rKca1QQn3)jD>n?W$**e1"q
%c3Ns<fD7KZ:q#5XJ!iOS..E""R\fU\<1((&@Jm/tZu4(*1-YZ%[?BJ[6b9g]/OIlIep-7W3"hAjM6Rh*&7`;^KIoM_(=P.uO*TjQ
%@Z[`c51HFA=h1e&@J]l%66batO9gUQdB+.!O\qpPKHFuD<VWL%;CYS]QZ4*]i0&famup$mCtp;R+bk)[$!W)8mDM?6h8hnk@SA_I
%YXO@Z0n3cEO4AA%OI)!74RP+WCmbhCN#So-b4&&S148?%OM4=8fHeCV84)YUO:YVW0W)#d$FU6)o:IT&qs-nShDSF-qpZ(If2&/+
%7#+`V/EK/1*]+$2%;PH:&C[mbC5fHeC!D./E3%uIU#FrHCAR?8VX*jR_>Y?]^MVeIXD?0)U/NNAQ?b*&c%DnOiE]0(@-?4/&(MTA
%$[\NGS7g_t%Y"b]#KuBKccd[Do625>NH*Xk,F=^E0"F/4Z@d/S*<$Mn%>qQlF)qZ*r)Lh1ImD2"m:O+]/[.N=ZfZlEQC.hj)!5aO
%qP%RtAbT$_-C'8)FtB.&LQi!!Q`rV3`KG7OJLNMf.1KlA@=)la<f]GXCEFd..>)`=p8.*Lnoj!S&qYDhIBsGi^TJNV1!"+,DXi(q
%X;)-'`k-s\A!_j(@uumNbU*12AB*D5AiqbZ`Z\s1X;,NsN6T9a]k?c`jLuI:UF!V'gb+D9@GQ1GjM/Gi/_..>ON#H":ej4XEs]as
%nWq#0p`tU4(ulSM@gUm'A)8mo*Z#LMOE+ak'"00bUblA1FW2.29Es`:c1u99ppDo!$,aFGVO>leGdYOrLm1S'RPT#mZtX3nNOK:,
%`@_C,`??PCbU%)O9!O&N=BNY%,>*KS9%]MrED:Z/\F\0qb4gBMn^H285+(/2_WIc(=jkdQ!n5WP+[2:L>f,X$oe`L(MkltdZZiBd
%SZCN_`&,!7K[%%^9?p6<bdfHaBlJ,"Rr`(BV<>6l'RF()UdqbZ9A'6VG'E_op;$I9FpQE+[oTU+H#5S'b`kc;R445\@-/*1B?&b)
%Ah5WI`ZSg.XVGWsN6an:@/E'@#IZ@52Ogt)bn"XbL(A*]M[sWZphY+p$(E$h4q05$2Mj.CKi&?(=Mj4=\2R$=`MLKi`#Q:tK[#@Y
%PgVABXp@1s*TH,4bp@1TAt()/ZRm^jZQ8#bfhEc/HtHSH3@j33E)mBV!o.%tk,aprAu11"X;JeW\>b.@=]t;]lbgY:lb!aNXBIC!
%n?M?"&iMtTc'"[K,q_?\NT!7XN?rCi;WhC-pV+qrf'V5#=,AYf8T8_WRknQ?S=("W;e$Bfi8tY1kJjf"cg#OFkYYV&4d=2n_Y,@b
%]>H#(`Pi(i0mG%WX^]Q$C!.l:V-FL*97`</1RG=/0CFkk@Y#s_"sF@lX]TXVHksSOg86PdV[K4HZC+>;r0VYGpmALoplm[kcXSo"
%Yk]I0dgqXOP8CQ'(hLLA-#?>7H_[rM>fqsjb^l6VfUNdO.6XTP"eiuD0mk+UZ%U@tBsWJjFGU>8Bd<C4G!cQTT@&rtc:GJ[S.^H6
%HoICr3@AEq3@SAk.>BMWDCT()<jqp-Z];'3OMCNp[t10u%e3uojq9R:U!8alck`"?cjoSSm,ep=5G>Pc2f<u-RsjY3D67j=OO@P!
%'"6u#=Aj#f0]g:tV8:A%CsPht.Qs]sU<mu8+?bn4>f-3t[(F6=Zj4V6ZpT'b]<u+mcY:QOA]?>/A]>i?TpSLJn&UHu_p!@5b`"p5
%JlsVTSf+#Sn?DV3$kI,`oNX:a$(E$fmL:8h*Z#pL%e7*rjq9R:XF2!R@XJeU@Z5::MQqj%M(rq9(lsT3EC`)DEs^S7;c666CqCn`
%b]\f'B/c0]q3c)cnBA>FnB?'/O(UD:Yk=Dinjuuhb<]9N8-ptk$/;da/0QMZ(:)qU&n%RL2J)"&VL6*kr[).DQ>QWFU1=(j^46+S
%_KELT"USjlAZEOcSu2q,caiAb+%O$MqLujAaudVcT.gNo9E'BX=BSpMJ*c4:1"1VtN;HJgiq#)qdc5iPr-H,"drNtq8%N2c@@Wkd
%!)%D,qOY_Zmf`!+*Ij^Q[^q+N)oMGi"G5AX#.C]R;SN#,3\no:XE.##G)uo<(sd"5CXJ5&eIMIA)Ub@jbnKnmL@NJgYnddshsF)9
%FT0q)FSf?&_q91nPlKU9_<h-l="NoLO?;%+Y$[M[beLs>?`4"2jj1`^5PM[c'(_S)jF1sk%ZMT\`3e\<CiKRY9goUlMI\+_=@!30
%jXk@S]''!N_FJB6m+1>ePRB"`SsK<;IZD'TE>bdh8iUr\rY#H'p19oh?P-&,Ub1,j4q\XrK:)cdQc^F^0Uuen@3)a-cflOkX+n_f
%c/84!r+%k%$VbF9hK&(nIBW'H%?GDP$SY"@Su4gI\>KtgQ>7=',Rm4nn5A5`Pm/Z>U28j<DfM8p]l2LE`VAcAm+N[8l(3Y-Vsa,f
%c$FfE"m01M[Z5TBn**hpmI:6[Lf9.E8iMbQZ3DNZBI\V$;C(tf6m)VkneS\dh9!5J!hV:'Ns!0n]!qTcqt75lFBi1cK"6PEWcL'j
%DZ31U`OjkkS4ZIZ\mY`(2&JVE;h="-)Pddtdg`(b`GJ5VI@pMjQ.buS?`"bnkoT`7"+A?7,YZaJXC7P/gOOKlEnISfe?fdb'%<(_
%*._`37tC),&]Bn<.0H;dj!\hcgX<dt:ZfgU]llpF!7g&S"kUD"Ib7Q;e$%;]r!fh#L:PQA#V:4A>D,phC!/CC+Hcp2#\Y]>'VPdr
%_r5.D(iNj;P!,[rq%t[9dud9dK-f2<he/=V6[L6go.TUS+"m^6d`k(=:()%k0l>Tu&Ob2X"9D4c&6"JI1E]FON:Ian.Ga6ZAR3;r
%Dl8t<WnSQn>VO^,.G\dNaj]PrB3)pWqCJ$$"ObHqhV/h)<*G`rN<A[Gi;`qJ$7$^e!Qo@0ff6uUfX>>RQahIJA<2)?pC)M6Sc8Fe
%dVJJ9G5F!n\$:\PI=4=.g\Hnrm!nG3:Sjm>fe@qI)@QW)7mm@+)5I[rP7;$7Kl'KVd#I?fmd)qM6rUmam!6d.b&VUa3*/'/2n6'd
%N*Q6talg:l_k'In>I%Z;OYdn?5Z?X[KHg1"LQ[X,]S12pp6+9CdmMfO4mY>I:U8FgfR@A@jNm:pRomS8clY@+fh4MI![!jHiDa!L
%P)TR"Uqm$4((gg)SO(D;38$"*>M-ApVd++f\[/3@%cp=/?qL(!0%X0SHTC!abU"8#Vm_('aH6F2p-%cA['V+u"qX@Y!?f$S"=ZY>
%Pi6Se@>q\"D95O+ZfNhqkIgM\;l^=UP+CG7p??=T%f&oO:gUoQ^#/>)Sr[u7d&gUuS4ZFYZ=*`q1`1a1'+r$%,5DY&P)WtaKl'HU
%SG,reB*m\4/k`A=%$kFbT70a'*+0hgRomT+j!E7t$#KKhGIBq"Q'S:XirC9;0S"\N!m*rGJ2/*>2N7/A[Op1s`a+nXP21Uk;?fA-
%cK/d>b;F@5hO=07-C/V\p(pPiJR0iY_PsoL,o[%"8V7$d*9`C0FTs;4iFKhCDdf,u4f-c_I4oef53*qiGm6pILLn1pm-8YqP4JGY
%Y5*G_+R.E9s,#?Sgf'&Dau59qZ\B\1BI\V$;C%k8;7^b3\%$;>:@GIR>jh"O:A&<l)>q&'qIrKs3)a]qEb6Ukn$r1\.3e\GZj<SX
%d["_e5U6dC&?psUE9Rd/L;V,f1#BdU,s/4Ba0o3XVnBe#@7bW,n+jK?UK_f?P4C*]Pl0T#,a%+HE$_b#V\7IED&>QL%7UoU<$8`9
%3jA]_\oEtD\4u3/dsGnKCh9l"Wq2#3&%l0:kCUl:k>NgqHuMo))f(htE@:$ANVPQ;C%ub1HR^aEl,F<'emJUd0,6cHBok(m:,e.&
%(:PmOF1T*;hc7mg*N*0.)>kb"0>E[2U\u)O`Y':Z:Phe'I)"^4D=11GUb1,i4u*?-".G)iVA.-SrFQ]f]Z"\[F*`Vd/ZldjN,F'H
%ndLg@c_!\VY]ian2&PHok)C&ghUS5?O6Md@+\j>\/_)P,a;BlOTrUG!.1K/Z7*3GGhVpGiqs%\[QL:^oQ[h:'kOd>)Xj3*k7cAot
%:%$#0>Q3EQSk;URZ;H,4%.kdW<!4qP6*B`sY%*F"W,8M/n$)',YtB.iSE`lZ=Pq&(i4b.lBBRkmH=0p4;i,3]2N/c!"sXCe.Y=$c
%,bG*W[UGE0\4u5%SpgpBgE<?)hn"*:3dd*=p@[?UO[So*)M&[^<)T0JNVYeNW'?rS5]S:_EfGip%:d%>D+f#/;U3.2X;8mVT"6Lt
%-onIDISTjZp2tC8XRs<8&>p/iQ>@C(j:"M.n59k:PQiQ=ibZL\DfOO[S_di!&ZCfE!]f)9i3#")I::m;d@Hib:%ReiHdktcBhLAJ
%O.:e#J>ONH.7M\:qk@JW\#:mX[_G"cR5TeV51XVo041)Gan#GY*cC6G[M9mMk5>uD>*=ie/QJb)R0`k48T[eKJI0?$eIe;ARs,L*
%Hm]l.r/R`f>WJ&NV)R)_C..fE5"5,[mh?\/Z4"6,:S8ZZ-,>('FDq\AOrGXHj#,qAkk]=?IcRafbjD"roF?8@8sWdgF)Nc7U_hks
%+,B"W'IoQW$d(V.T\PqA0]3QaP]:)WEGTd9QMg18Pr(G!0YbUU^IpKp$`?ms,<$8<PWo1rMg#L;/_NSKSgVnPbQKmZM#d*#.(M(<
%3aPa&o@E\rmp0FfgS%i3^<36\A,[2]mbJ#+*?TOgr=g`MZ4"f<:S?L2#lnp9FATtCl%QCm&R4gq2tUI,>/sQE&8$.@\mq7U>H_T%
%D)=0ZdJ]I4F@%#:]Luq[/Z?*'JSIGOE!I`95oBc:(<9FoCJ&DhaXkJ]7iDc1eB[<<k2;a$$iBiVe,W-*;\jF[]UqMZ;fY17-OQ)"
%1B@tZ,(S!!.(q=C3au$:dsL2rg&2K)D4aVqYAR4Vd];Lg_(UBHm+['"mDnsHMr0b#=7#a&`D.s<J4l>`U7ZH5A)_/R)7=C$0rOM(
%DQl"3WU,"V9"*h'O'tOaE]3XdA2E\P:skG/<,QtJjhNJL%SWUL1(MM\Nie>oPi!d:U;?*-&7r?KiCD%dAm>692aD]bUb.SFq0A=R
%PhT%%8IF"./@YeG#N.BBat/LPMV"*FiAs/l1->8ng<Q"ZRtluA;T73Ns#,fpDYi5kG:T-V;lFA%/h$H^JT>BM!5Ko.J;jZ[Mdre4
%[cDYcnjaO]hL[/fnV(m`.e_Q4$cu)VHJ6;;S=b!3/\)&8Sto0lW2ImE0$cg$"(`7f<Q/`GCjIPSN?HA[@?fKY(LsRb>g9_4Z3uc$
%NVHm;n#'"0P[%&QM#uea9Rm5/#iIKK8hZ.*NnBTRl`X8cH7ss)bm21ieQ,&Zo%tq\+diY<a,W+HjnubaBZb1jp*>?,6QR5_--njp
%"(i=h<Q/`F/:?1mBoHu:K?`4U^8VWI`U_n2S`%L^cM@j>DW^m3.U&!naurUp*7uRQJOsr[`^/jCZ.0GUniPro-ht*n)!/5&mj1JH
%Rjsa(XMY)9;WdmY+?$`Pc2/qh2!#O<H_s'=1DA]^,W[@6T_u[ZlA.%fS^O"d54JMd%.ftg.Ur5694=mSJb?jdGO(463-0NU&M<69
%iKbl+m`Yen-jnqj5GQ$\ilLD8:"dd@2e:mZf,/(C9!9X)hl2cmmI(\l)LTc%_&:14>K%L;R-q4TDf\qQdMQ^in&+C,@c]@:6Eko;
%Z)84S?M!'IS`]?BXplJ"5"]P2?Z_A)<.q:^$om=_IWp3d)!5=SY$;/+h.;M)IEoI\Vb9M%lB1A0r:+(gb>H+HQeBt$@;`]RgNacO
%@cm,<)Y.585/snu2P4QC73nf.Z@#F)R.H*j5JY]H=LRPoGu'%3olHou1&b#kIjJSuDj'/WfgWKTf>in3jE@WV?QU3/<e>kd3fR'H
%AtA\jQ0fUfg84gnm/ikOc*Vus!TR%n3r#m2?J\mD?/%D)YKic@[roTOs,O:"lhhncG"Xii"O(@kiVrZ5=XKpdb,r)4@h'th#QL(K
%,Mef6PB[F[Pi'1Ff[k,@/U,&%S*JNd$0-#$O8iX#BHDXHA'7*.:&XbTb[Hi!Ip]Q)!.PRBP,%r>(?YY3ZZBiS*(d=&IUN.BD&Vc[
%>kEIr4YR)XJA&2WlqDtg[R#!GeW#Rg]d'=4OXG6\\;I."?$oX"j!Z\uRF4f@VNBlbNK!$^bV^:>$q:GhC0O2Ene@8b\WL3Q,'5,l
%#oJUl[bKuG_OEZA,_'W@QS(46YsQ7YL;*TQL3Vet,OJtOP$:sm#0e4)fRl:kDYEINCGSH6NuiD>W;[dC8TN@R'#_\f*tRbM\\GD%
%R*<o8HX#OaN03h/#ALYYQKJkR0_@C;%)E%5A=UJb\p&#2.NW[[e1;@tkd!t>,+(M1j*8p_XQ![<j6F'1GgNke_nH<c@%)t-oh#V=
%AusuX-eFi*5"H`*!87!+9D/A*nY"-/ab0$U0up_i2,Q$#5+RCPVTi5Z_m2tfc<9<kmeIbe()[6sAu)3@2I-^;S71sM_;aG/KB!/5
%iZfC?J?Eh<0l-!]bCpZV@r/?P<OhNq7Z-/Nc;\H>:Pd@=8U7_DfNu1\NU<',V\Z`+fj;"5#t*]TLQ3=[!_Y-mR?cH$WZG%3M6fLY
%3Kq!EJ$44QAF7(KP)W5/nuj.V&9?YRiYGecdqe1A>?,(YdZKer1-mEErOP'R2PH0`d`JlB%cO:@dQdGPO"IH8Ui*>*CJUWVqWgNB
%gHF!"`pJ661hsdl=L#,GD]469h>:TP6X;74$mJ=Q[qafjDTk_R37q9h3=k(j$W?lXaA&f9?"?mVe)k]:-Rc+V@$gat=0o,`rV?kk
%*,P0c]A0Q5QY`t`\d1p/37(HB/SQHbUcn9P_W48^>.it"8c*!>)+pqhOGWLB56N1cXIX>@%VG*db7p_ZajaO/V4OV'ILC;&k`F2G
%IP@BUf#?sgT#)^>Bb^kt#>#EtL_9M-aH:)4/_5K%gGn'TL#-KlFJ/)iFCap.$Yi!%*U%UQpFJ8\ot16u^TmFB5F(<,c$G/'3@VV+
%=L'+%1G7:f.uS<'Xu3?iU/rEU*;7*D8s><^`8#Ng..`9-h3V&!\Bn*MZU_27PFaiTeGX6#*nfVcl/ufVpfj.^N6Jm3qK./34\b5X
%NK!_:@GRZ?;'t)l`=C"F=#[l[/$m_^]l$n]a\):De_Vb.WjC0@)f*WeRTP>%HgU</@`?>6)I!4)&SF]7f)$GDM'_kJlXe3S(eUhg
%OLnu+NNYL84N$QpFgX"s%X9)Gip$162hplQ*ni:F*_tii4/OH71;C27"C0W/o"5c>M6HdX/CQIub+C%!)e9<5@;;b`_<X<q#-!V/
%p/^mh\48K44LUf)e#Y2;\hW%Yo'k#ZYIk"9=)Y4RaOi8->>lVHOUli0HPJ3sge\W8mc?:Y$X83D*1e`;lfb%EP;<jo=c![%SGO&E
%KL?`j^Gag!FL/C(M^53oTnAFjSknNd9%"D3nL#^UX<W;Gi44&+LC1R9!g*dPHGa@0,Y_\\(JKYVmRe8$VBqd!3'78,$b*UJ,Yqj4
%Il*m(39l;?NU59?nn>rb`GG)Z(6"bVg%D0\)=]UujZ&uZ9q&qN$*QZ5Ib+$mk91KS)90u9lO=m9MBA;sP<=Onrm?Na/50[h+="C<
%.`W.?CXNn49Jkpb4O4KN3bc'nn(A-k$tW>a?U+3?FiHuMUl4sDZih=siN4(B$KoQj<@kLm=g.(sf#4jd]PV?O#Z.Euf:7c[.;\S$
%rM%p<5=7-a(Z*;S7.H^&K`r.7q;;Y*k$>$/S\bc)#2@IP9q=!OJ'Jo-!Pogopk@1$,XW9kPo6W)B\0OrlatH2fWMo`*$,-h?T^lN
%_C#:BjcIUMGi!s]`%Scgj/BpABaUK%+QkL_=sk7^oS;%pZ%JE+Q`ToQf#0!_p#g]GU2:8jr46)e5TC9VN)^k)CXF1$qeI$OoYgFo
%lYD,CJA"/nP<=Onr]+8+f)onE,"'tT+5R,F%8tCs:LV4u*g]&D_2,Qc/&r7BF(ksh-<_-V>Nu:W0V/<"nVl=Q2L,X$rd7*Y,C\mZ
%*$C:)dM,_U[*+kcf3Y"*D>L-ci=TJt>3lD:a\t/`hNCr=j8#Ye)t?R>jZ&uZ9q&qN#rpi(n^i3ud(s_Kd0o;K2T[Apa3cDK:&F`5
%RBMn+jM<I;8cbVfY00oj^3c1/?eZ6/hK7/c[Q-F*aV2L(4(c#]A#0'NCJ<>a.Ir!>DP\3/=O:W\'&Tm&IB>]\e(!jIBLJEmm^'Hg
%2<DmRMsb:8E-PW(.g1Ml6'e01E&TnlQMoO[;+IQjc\O;t1pfkTgJ<:$bSWpDb\neuZN4<I/&V^K10K2Y_>PQihct0PYPjh/bQc0B
%<[Y&pf_g!G7%G6UqSO4uOK%KEYN4>g1Q(ALN"nIbD`bo-X9Y`FD$\0[4-O<Kc@0tVD8o-D\K`ZW[jgZ0^T?!F;sXODj$B0>M?gm3
%c)$fHl))?RnGkY<l1kaskuu5up2`FEo0_(hGh>M(KB>%9E(9A&S$@PMpFS0c>M>nG\S)TU4,D.M+3)t,)'eODGF@<DH<cKSF2IO&
%+b%)Nn^(#4,\[Tkr1lV*r@LI!fiU^"TmC#!lgP0V+0;UIP=V:^-@bYWFcrGCS+K5_an"%,/sH;*]3TK4om4mL88f8Ji8Mh;2<cJ)
%P>".&V2kh&e^Cl2",9,r;eE+=@./3lXb@5J%tH\]-3HLQ%*FN/%-[[ritr3+\u"m1$lB>f9UW0K#3JZ1GM]h6B&/>DIp[&h320f`
%bZM\HYP\&g@kaQ_EVEBc@#0G$RB_VM?!#;0#MgnOjt[p1:oE`P'LM,oK\I2M:ZkgX*;Uj!a(,K+oK6F$XG\Q3a'3\k-snlg:(2pD
%=$=V;<4VHL<NQ$IEl^<YiNsh>mUdt8RP&)H50c2'h(fC-#N85#AaFDY,`*9Wl(pgm6BPN>Z00Ld6VqmJ/JK4Y,=.[$VpRXjG]Z_4
%?:H.k;U]4DEHL7GMJcRNU4Z8ff4F;ooJ8M7fLRGC[M+[BWSYbW\<\!\n<HfuXoSk2;1]j52+n=ZVcbol*R0,K`n[GQ9+k46^F^Z]
%1*=qG3LjHl35`smYFfrS`^otd`rlp=;h>6a+eEC(<q1_,^`JS?fE2u2K/R3c&!eGl#Knd:K<Z!6Zl(B=n4Z+h4NgP]c7#9"1KO$r
%HkAJCXpH/.EBInj<q:3A%X*A]_[aIKZr?cq.a]htK^`(&$.1EEThLiH8k29YTmhgi6f$,9[-:'#)lK;2Q1BLf&7+gCkF?er!TT\,
%l<EjqQ)/7P7bYmC.<r)p'0I*>nP#FWM?i2Rp43(Y*l'`VZl(B>YT+9<=T/UJN.lMRbuhf7k7I4Bq1m+47e'`QZ&/eIOPmtG:[hbN
%j$B0>P(tiSYQNr.FoW;PS]Z.SM/ISaKYJ-rLjgKWA\nRM3[.H0og9uIl@t&5:/="4r:<Yj_8f^Xm<F*60\E[u;%F,b^$EKE@_)]r
%ecS4,+B!YF+;o=T`k-pjG79mX*WS3pb>VLuU)tf;B-(qYf.t\4(6(9^0d0>$`Q4u>Ghmf3b=+Sc./3f'OAKSkiW?5tbJ(Mscr0AQ
%cJuq<cnQ0_Pg;E\Yi'q[4ZK6n9qK4R&[,(&dAidc1e8cqS["'1iAF?Q'Q*'J)#\WYNWqM>b>VLsJu1X@L5HiNN&uc3o5:1*6(/oo
%(-2Y(n34W/!'-ds;ckg7[lbOBaaoC1$o&o$@E"&s-hcMiOaR4M8>n=FEoF]gCp_JY2B7I5OJf<l"PmmVM;,Er]CeX'TneZ3_7h[E
%BnDfEEI4pB<qU!s5mli@N)a,-Kp%Erojjg`%dENu(6"mjD1,,lO1+0TN:ppDjZ?o,o6_,YG\UUk#!!gU)6;H[gRW/f`'?3\6V(-g
%XCT4q'"dXNa=[mA6k^rHjM@9bQQPSQrWM6K+HOCJ*WrutdU\E.JYRRG;g;phc*\E>GedV'*cMXq#A4as[2CK>YaXnN#jZG*!`9p#
%*X286[cuWTaWB?%+Zf$S%W@<$6(>-B#IGFqn2;X)?m2+U1KO$rgPIN?Y%%jZ31NPR<&/ua6OpcXOTVg!cEnIiGd%Z(eZ>Ap;F^lL
%N[U0/X"g;p-Va<E,DPFGF;u?\U:E0l"V59<ZJZ0e(7\5]8/"rV@+D-pc<cDT]s\AI"'iI"%920PKOg/46B:JX*/+XXB[C@miW3'!
%(/W\#_&.q`BnAq]E$pbM^Z3B9=9rQnN)_uBA$4Dj0^8d+g^2\I^sKcY-@:+VL?Ng$L%&Iac*\FiGX,mc&)QQlK/8MmD8lo(d$rYh
%3ZVE)UMu;AW+#atM&^c<,6uLR*4-S6Gd-Tl]Z+q#fa*BpihE&OD4Gt0$-Ac_7#m:&a5N"t1h\[Gnpl`f*k]sa#I"ccZl,ohn9-#e
%hWEl"N8m3nZ&/d%:HJc3q>h0%"'n%$F8AI!P<EdcNpcR7iLNh&f4M,B_/A.<_/B0Y!K=l]R\5N=1aG*N"t'Z$3#o:C.sS:q)d\GO
%$dP<Y&9WSM^Ws9*:&[mYp,EqCkd^.C]J5END8o0hcuI-ZG<59p(?1`?@hfO<3c"hfN\)+.E$e:U`IKi.qHA[L[K)+F_=X14Mc]-!
%8Wu=*"<ffESATtV1tQ?@huU5V(;-rpJhm`=Bn@f=m*9/I\Ehh!1CaY,`X3cgl"p"tGCm7G"DBjBLZSF4SWN4.?-(FlNhc)O*"CV\
%<BQr-fE)t]/K!Me-;@=Y!#gh:G_;1^YRo*e)68"d`a!X.UlYn5\.c7:_4Z-&:%gO[K]mU2L[\[cc*\FiGX,mc&)QQlK/8MmD8lo(
%d$rYh3ZVE)UMu;AkdOO.q!)[:VKTeq\.Zg[[8(MMo.ieha-FFUE5?A,(l'n]Jk?5d8!*ngo>gr7#\VkMr>#pTLYmE)=p,3Sg+o(n
%buiGDnhB:qA"E%%eTJ'E^:*GN(-O3VhASK^DRs]\[4Atl1WJF82V.JhX$,0=-f"i?N&CYr,h*^4g!FZb]'3g:f/7ZZg&MO)9qAPP
%NNI]tgO?2_D:Wh7\(UiCOAKSkAA_VQ2itRF<bT1^)#"HmK[mIJ,OOM,@1Q]=j8k5"6(>-:#Hptpi"]$/^c3CB)68#OqNUmUg52h0
%qh;O+k3fW/6bFKseteAq:bmQ*OUM500IS_X0n@h#"))d3?ml.6A]>&]]IB<NDt.E>LkA!]Z/8@[1,+dc.)8g_`cX!#kK&"[g]Wc1
%E>>\[>VJ5>UMu;AW8aHlFG&KB9W:U\J>\$KP$Yolc44;ns-deJm+RD\p7hjUjJX0okWt94Oo%4b0SU71%ansjik`fE?K5c\aVeBV
%a30iaO/0EYoq3t9\l]KS/VHgP69Ti&&#RTRW?1,(L*?8G6*<Z.ZBGGZHK<Q'>O.Y3@hf6$DSVnaX0R@LpP%Iu"_/M_g5M:ZkYusI
%U5/>NSN2!M-EXrH7T0P+1KO%=gBt-*oIujUo1'=!*"Ub^Q$S)=c-%RmiG4V[cNIXG*H:RVa92eomGmOE4P8I)4;aQ1fBR.P=4_&c
%ik`fE7'k2o6dbRPk"-Ds7oEY>4)d>*'6$*bc/WTHf@mCP=K*lKG5pjoGF4\ipmR=j&dI`cPZPt'>S!-\\/LI9\G%-c-*0uPa=+lU
%AYWW6bRSm[Cm;5_#F+%O7u2jM8_<.Y04E3K8U6RP)=#$n@]0NBc<\HRCPVJH&JJ3F#F$f]T!c1AC;+;ubF!")UqB<sk'B9nk'HO`
%9ccDI-`g2VH9`ZejjV-Dg@m=6#;F7^]c@FCg5M:ZT^5O_f-W8u_Y%'b)2%WRb'W,VdZ9H,UW#(Rp.0V1#;F7^Rm$X9R\38)TO`J[
%XEQWci%%:M.5U@RPkW8:,X%,"iosm6N"bf2A(.j]h8.g(<U'Tr%rtDA&3T/:b5*P7Q^ojEO/0EY*]?0-EXMInlh9slaS=&4#Ld:d
%1j?/a&(\el*/`=k3n')@n5'L0`^p!["3NfginT0A[F\>Piqt?=VEL+5.eC/H%lOq*ojE_A5b##N4^\c:*\[h-%q)bZdBsiBGsL'3
%FlECJ#hN^#B+3K=.Bh/IcXUe[*Pru/oI`:UM#He%YjcXVL_d)ZUBSG.1Zbuuf$@dD81S"rC5?s.G)bA5h?\3n;HBViL5J6kL5PJl
%g,u&.]ocJ5TE-@Rc+8C/kRN-u*V=TjcG$Gpne@8bELtT!]%;AB)&`)!j6J,%<dYBOIUm#UH=s/gZu2fSLVn8'8a%*RXON%B06Q%<
%\(cQhhMY/Qj@<6_WLIpfGW4_&EB*4gqJ5G`)6;7W/)6.V%Q<sp7Qj$f'V@]QAbj$`OqHMDrgq/?)n;"ERf(7LX?7#KL9[Z6cn8_b
%Ne'0DQ%m+BA[GlAQ-fipW*:n3Sk4!*14nM@9dWTdl?.]#SR-[R9n$Va<Z[<3NS*i6X:[]\C(=$I/l,oT7_JNq[H#*I@CUOrT0gV[
%XN\h>Ei9R4'o*]Ia@9F+_FfgGBep[4a3A;9iM_+op>KHQDnq5B0>;ofdlp2FiAsh`$6_X>1+U\qTgnP8)/@+KYe2mkkd&</=K.E`
%r&JZPN:=fqQmjlfOd0'pL5n-#&#$6t!&\u2&]dmQWY#q0S9]C;7`*->p`,b#aNCSH9nsY'UN<@GLNESnPGbW_,H^`DQZM&CKSr@j
%.>7W?at/Oc4Enh*b>WUt@Ug@336^Nh0RriFqq'aZK.f\iBiaddESZbA<>ta%2.4W:p#'e7c1Y-Ia\u<@#VUYT/HUNbG24SCSNqBE
%AX/#J:_=No6U_h;&#Ob&V(2!)O=g6Haqbu^rYEEEAPA;cY[k\1T<BP`Cnt>^b'k]j4L3C-_gJBj%$.)7*4E1N8Y3dk?(cGAe]r?N
%G=YeQA\Slp*a*3R!M8Vo#=bj(^ub^PG>bFE+,PRQN'tL6_tg_,iu/0.**/#CnWJ09""ITO(&^n#4-HmA""@<)%mXA3JE4PRn"f["
%#GV=5$,qul01$,%pVE`N=QM]EB45t6>g4%CEBInj<q:d2b8ub5fn6PHI1<V_gpJ"MGsL&oS_kEBN,X2GG/g1<P4C)T#1nL*C8qNC
%<<h`*SjU*7=J[(OCd!GnNoLm^ZcC7VBof(&b(()h!GS"g_:[>P<]_ni[2CLFK9a,fqH78L4G7LYZ;YAh,:TfO=E$FuYX%j]-@Ka"
%DGOXXX42cg4^<b9Z3T9/gIluCclG\\Q2%C*g9-@Kj)U^&K8c5l8BRulR%YNS:iSQ6$Q`!2Yu3Yk^`a4P/<L1A9dYmkc.\i8=N,oZ
%Xo3U)*l@SQfboG98BQ;;U"=@q[XHM`8'g@Dn^-TEp"Scu@&Atof*_2JbuiFYp9<araDhP.^t?O[a;AmXU8H1;dm!IJFgkWE&j;a.
%Fs,IWm(5GL9:8GF2ahk\@NQN*(gEB'ki(6'd^9r;m:-\'"1\@,a<&.L_mqu2l=`n]Z)2s9@@'`s?GD/<4L!0HHA(AP'[s'F@AJ><
%6!kEZp@FLRFN?*2o:W]40kDVZDPNE@D$rKTU-Z42e*"\6n7ri30G]/FTr1uVS#/n$#4t"*o2%3MdS&HaQbh?@Ct`6[c-ope1"(M-
%ioS6;8T/mkiu&4G\sHtS=2'lqHQI[%r4:\C)[l2^6VV(#"?#:N#IBAJ]"Tl*Jh_F&O4)6fXRH?Mj^SORN&Ae\%D[PtH%rn!HR#>5
%*a_h$1bCGr0odpI_J2l-9q/DbII'8^?%`+FjRL%<KA:U5XTN```^p!Z_`Gp\D5l7L)%.M2+!CIE+_+7Dgk57WDS:<L(-K[Eg\"+j
%U^:eYk:NAT_N20l0ZFUp\A>#"=.HRnII(C/?9I(J!\ASX=ikifoo,%,UBc&_l?%l&GFe#t('ZorGhJW.`+Jh[m9C09Jk5^eJBU:1
%IGBDT0K($u6"`t$O=#dJNt!YD_9O0?#)n6Sd+;H2N0^-6I,"krX2jkWS%oj[O;p+BiRD,i$#7W'#%Z^Vh3n<p(m(OXa84(X;a*(S
%pEG4Z^$(FC4%L#a\._TRkm5*b*B@oG#Kh6g84Frb4Fg7u#Q4G_T#\gaUI#_UNu?bB+HrnmII]R,/-#H@Ip\SSU!\KASM9C+N3W4h
%Fm/:#_ml=C3q'MAW:'s/B:!DGiuMW*K8]@[bEf<V=;*p.TrSu2T<e)M'CPTaO%AA0gQk*D#ruiKI!.=0fA+i&F+XgUDAqWHXb<3F
%gu'+3/t;7OV\U%%GhJrq5PMW:aC18KqMJP,K#\8+#%2*g3ffJ6Aru*"gF!j.rlIXB7Q;aU.4c?fHc\jmD$8?t!X9n?jLs9E%4"_X
%P8B2!-.t5qXVCh'e'L0tP,GP+T/TIuiYTp1*-+`>Vm'V5mcCuj[0%7L9Yb%([q;tS+\eOpOr'(u-/$j'XVCh'e'Lj@,Yqj45Auuu
%`+t$c396GZ:LV@9Y?P49modZr-V2CT#&hU`RXT;2^%u$d>"<lhopM(:Q^S?GqN"t;q<#Y01t.Ms1PSuH[Z8N?hFi8P1!jXjd!q2R
%r4;2dG5[%e/dD-hhY#(aV*"_Sb?#_MFe>ONDX2MLq89-Q:l\sa:S[g`)Q_E!5%C\n=FmUH8cIW?d0P.^jMba?iZftYA4,sC:="QP
%79AARcU]*4@h9_bM%=G#gP<Q$^\lpFJ,.:&(]NBcs!ZeIrb;@m5Q15HJ,]:ohnK-L%t=]\nAE"grUJXWIfK9%a1(NPs4raNI/T[U
%?bZO3e'GdXrUnoPjfcDrq#/r#^]+00gQu:Hlf\:JU*:EOnACmtq&b+d]Di-7/31c~>
%AI9_PrivateDataEnd
